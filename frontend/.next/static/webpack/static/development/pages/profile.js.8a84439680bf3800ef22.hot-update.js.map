{"version":3,"file":"static/webpack/static/development/pages/profile.js.8a84439680bf3800ef22.hot-update.js","sources":["webpack:///./pages/profile.js"],"sourcesContent":["import React, { useEffect, useCallback } from 'react';\nimport { Form, Button, List, Card, Icon, Input } from 'antd';\nimport PostCard from '../components/PostCard';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, UNFOLLOW_USER_REQUEST, \n    REMOVE_FOLLOWER_REQUEST } from '../reducers/user';\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\n\nconst Profile = () => {\n    const dispatch = useDispatch();\n    const { me, followerList, followingList } = useSelector( state => state.user );\n    const { mainPosts } = useSelector ( state => state.post );\n\n    useEffect ( () => {\n        if (me) {\n            dispatch({\n                type: LOAD_FOLLOWERS_REQUEST,\n                data: me.id,\n            });\n            dispatch({\n                type: LOAD_FOLLOWINGS_REQUEST,\n                data: me.id,\n            });\n            dispatch({\n                type: LOAD_USER_POSTS_REQUEST,\n                data: me.id,\n            });\n        }\n    }, [me && me.id ]);\n\n    const onUnfollow = useCallback(userId => () => {\n        dispatch({\n            type: UNFOLLOW_USER_REQUEST,\n            data: userId,\n        });\n    }, []);\n\n    const onRemoveFollower = useCallback( userId => {\n        dispatch({\n            type: REMOVE_FOLLOWER_REQUEST,\n            data: userId,\n        });\n    }, []);\n\n    return (\n    <div>\n        <Form style={{ marginBottom: '20px', border: '1px solid #d9d9d9', padding: '20px'}}>\n            <Input addonBefore=\"닉네임\" />\n            <Button type=\"primary\">수정</Button>\n        </Form>\n        <List\n            style={{ marginBottom: '20px' }}\n            grid={{ gutter: 4, xs: 2, md: 3 }}\n            size=\"small\"\n            header={<div> 팔로윙 목록 </div> }\n            loadMore={<Button style={{ width: '100%' }}> 더 보기 </Button>}\n            dataSource={followingList}\n            renderItem={item => (\n                <List.Item style={{ marginTop: '20px' }}>\n                    <Card actions={[<Icon key='icon' type=\"stop\" />]} onClick={onUnfollow(item.id)}>\n                        <Card.Meta description={item.nickname} />\n                    </Card>\n                </List.Item>\n            )}\n        />\n        <List\n            style={{ marginBottom: '20px' }}\n            grid={{ gutter: 4, xs: 2, md: 3 }}\n            size=\"small\"\n            header={<div> 팔로워 목록 </div> }\n            loadMore={<Button style={{ width: '100%' }}> 더 보기 </Button>}\n            dataSource={followerList}\n            renderItem={item => (\n                <List.Item style={{ marginTop: '20px' }}>\n                    <Card actions={[<Icon key='icon' type=\"stop\" />]} onClick={onRemoveFollower(item.id)}>\n                        <Card.Meta description={item.nickname} />\n                    </Card>\n                </List.Item>\n            )}\n        />\n        <div>\n            {mainPosts.map(c => (\n                <PostCard key={+c.createdAt} post={c} />\n            ))}\n        </div>\n    </div>\n    );\n};\n\nexport default Profile;"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAEA;AAAA;AAFA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAHA;AACA;AAIA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AALA;AAOA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAMA;AACA;AACA;;;;A","sourceRoot":""}