{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\n// export const initialState = {\n//     mainPosts: [{\n//         // id: 1,\n//         // User: {\n//         //     id: 1,\n//         //     nickname: \"코드\",\n//         // },\n//         // content: \"첫 번째 게시글\",\n//         // img: \"https://blog.yena.io/assets/post-img/171123-nachoi-300.jpg\",\n//         // Comments: [],\n//     }],                 // 화면에 보일 포스트들\n//     imagePaths: [],     // 미리보기 이미지 경로\n//     addPostErrorReason:'',  // 포스트 업로드 실패 사유\n//     isAddingPost: false,        // 포스트 업로드 중\n//     postAdded: false,           // 포스트 업로드 성공,\n//     isAddingComment:false,\n//     addCommentErrorReason: '',\n//     commentAdded: false,\n// };\n// const dummyPost = {\n//     id: 2,\n//     User: {\n//         id: 1,\n//         nickname: '코드',\n//     },\n//     content: '나는 더미입니다',\n//     Comments: [],\n// }\n// const dummyComment = {\n//     id: 1,\n//     User: {\n//         id: 1,\n//         nickname: 2,\n//     },\n//     createdAt: new Date(),\n//     content: '더미 댓글입니다',\n// }\nexport var initialState = {\n  mainPosts: [],\n  // 화면에 보일 포스트들\n  imagePaths: [],\n  // 미리보기 이미지 경로\n  addPostErrorReason: '',\n  // 포스트 업로드 실패 사유\n  isAddingPost: false,\n  // 포스트 업로드 중\n  postAdded: false,\n  // 포스트 업로드 성공\n  isAddingComment: false,\n  addCommentErrorReason: '',\n  commentAdded: false,\n  singlePost: null\n};\nexport var LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\nexport var LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\nexport var LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\nexport var LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport var LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport var LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\nexport var LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport var LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport var LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\nexport var UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport var UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport var UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport var REMOVE_IMAGE = 'REMOVE_IMAGE';\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport var LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport var LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport var UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport var UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport var UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport var LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST';\nexport var LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\nexport var LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE';\nexport var RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport var RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport var RETWEET_FAILURE = 'RETWEET_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\nexport var LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\nexport var LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    //case LOAD_COMMENTS_REQUEST:\n    case LOAD_HASHTAG_POSTS_REQUEST:\n    case LOAD_USER_POSTS_REQUEST:\n    case LOAD_MAIN_POSTS_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: !action.lastId ? [] : state.mainPosts,\n          hasMorePost: action.lastId ? state.hasMorePost : true\n        });\n      }\n\n    case LOAD_USER_POSTS_SUCCESS:\n    case LOAD_HASHTAG_POSTS_SUCCESS:\n    case LOAD_MAIN_POSTS_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: state.mainPosts.concat(action.data),\n          // mainPosts: action.data.forEach(element => {\n          //    mainPosts.push(element); \n          // }),\n          hasMorePost: action.data.length === 10\n        });\n      }\n    //case LOAD_COMMENTS_FAILURE:\n\n    case LOAD_HASHTAG_POSTS_FAILURE:\n    case LOAD_USER_POSTS_FAILURE:\n    case LOAD_MAIN_POSTS_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_POST_REQUEST:\n      {\n        //console.log(\" in Reducuer ADD_POST_REQUEST : \", action)\n        return _objectSpread({}, state, {\n          isAddingPost: true,\n          addPostErrorReason: '',\n          postAdded: false\n        });\n      }\n\n    case ADD_POST_SUCCESS:\n      {\n        //console.log(\" in Reducuer ADD_POST_SUCCESS : \", action)\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          //mainPosts: [dummyPost, ...state.mainPosts],\n          mainPosts: [action.data].concat(_toConsumableArray(state.mainPosts)),\n          postAdded: true,\n          imagePaths: []\n        });\n      }\n\n    case ADD_POST_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          addPostErrorReason: action.error\n        });\n      }\n\n    case ADD_COMMENT_REQUEST:\n      {\n        // console.log(\" in Reducuer ADD_COMMENT_REQUEST :  \", action)\n        return _objectSpread({}, state, {\n          isAddingComment: true,\n          addCommentErrorReason: '',\n          commentAdded: false\n        });\n      }\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        // console.log(\" in Reducuer ADD_COMMENT_SUCCESS :  \", action)\n        // console.log(\" chk state : \", state)\n        // console.log(\" state.mainPosts[0] : \", state.mainPosts[0]);\n        // try {   \n        var postIndex = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        }); //console.log(\"postIndex : \", postIndex);\n\n        var post = state.mainPosts[postIndex]; // console.log(\"post : \", post);\n        // console.log(\"post.Comments : \", post.Comments)\n        // console.log(\"action.data.comment : \", action.data.comment)\n\n        var Comments = [].concat(_toConsumableArray(post.Comments), [action.data.comment]); //console.log(\"Comments : \", Comments);\n\n        var mainPosts = _toConsumableArray(state.mainPosts); //console.log(\"mainPosts : \", mainPosts);\n\n\n        mainPosts[postIndex] = _objectSpread({}, post, {\n          Comments: Comments\n        }); //console.log(\"mainPosts[postIndex] : \", mainPosts[postIndex]);\n        // } catch (e) {\n        //     console.log(\"reducer error : \", e);\n        // }\n\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          mainPosts: mainPosts,\n          //mainPosts : mainPosts,\n          commentAdded: true\n        });\n      }\n\n    case ADD_COMMENT_FAILURE:\n      {\n        console.log(\" in Reducuer ADD_COMMENT_FAILURE :  \", action);\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          addCommentErrorReason: action.error\n        });\n      }\n\n    case LOAD_COMMENTS_SUCCESS:\n      {\n        console.log('LOAD_COMMENTS_SUCCESS action : ', action.data);\n        console.log('LOAD_COMMENTS_SUCCESS state : ', state);\n\n        if (action.data.postId !== undefined) {\n          var _postIndex = state.mainPosts.findIndex(function (v) {\n            return v.id === action.data.postId;\n          });\n\n          var _post = state.mainPosts[_postIndex];\n          var _Comments = action.data.comments;\n\n          var _mainPosts = _toConsumableArray(state.mainPosts);\n\n          _mainPosts[_postIndex] = _objectSpread({}, _post, {\n            Comments: _Comments\n          });\n          return _objectSpread({}, state, {\n            mainPosts: _mainPosts //mainPosts : mainPosts,\n\n          });\n        } else {\n          return _objectSpread({}, state);\n        }\n      }\n\n    case UPLOAD_IMAGES_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UPLOAD_IMAGES_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          imagePaths: [].concat(_toConsumableArray(state.imagePaths), _toConsumableArray(action.data))\n        });\n      }\n\n    case UPLOAD_IMAGES_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_IMAGE:\n      {\n        return _objectSpread({}, state, {\n          imagePaths: state.imagePaths.filter(function (v, i) {\n            return i !== action.index;\n          })\n        });\n      }\n\n    case LIKE_POST_REQUEST:\n      {\n        //console.log(\" in Reducuer ADD_POST_REQUEST : \", action)\n        return _objectSpread({}, state);\n      }\n\n    case LIKE_POST_SUCCESS:\n      {\n        //console.log(\" in Reducuer ADD_POST_SUCCESS : \", action)\n        var _postIndex2 = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n\n        var _post2 = state.mainPosts[_postIndex2];\n        var Likers = [{\n          id: action.data.userId\n        }].concat(_toConsumableArray(_post2.Likers));\n\n        var _mainPosts2 = _toConsumableArray(state.mainPosts);\n\n        _mainPosts2[_postIndex2] = _objectSpread({}, _post2, {\n          Likers: Likers\n        });\n        return _objectSpread({}, state, {\n          mainPosts: _mainPosts2\n        });\n      }\n\n    case LIKE_POST_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UNLIKE_POST_REQUEST:\n      {\n        //console.log(\" in Reducuer ADD_POST_REQUEST : \", action)\n        return _objectSpread({}, state);\n      }\n\n    case UNLIKE_POST_SUCCESS:\n      {\n        //console.log(\" in Reducuer ADD_POST_SUCCESS : \", action)\n        var _postIndex3 = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n\n        var _post3 = state.mainPosts[_postIndex3];\n\n        var _Likers = _post3.Likers.filter(function (v) {\n          return v.id !== action.data.userId;\n        });\n\n        var _mainPosts3 = _toConsumableArray(state.mainPosts);\n\n        _mainPosts3[_postIndex3] = _objectSpread({}, _post3, {\n          Likers: _Likers\n        });\n        return _objectSpread({}, state, {\n          mainPosts: _mainPosts3\n        });\n      }\n\n    case UNLIKE_POST_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case RETWEET_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case RETWEET_SUCCESS:\n      {\n        console.log('RETWEET_SUCCESS in reducers ', action.data);\n        return _objectSpread({}, state, {\n          mainPosts: [action.data].concat(_toConsumableArray(state.mainPosts))\n        });\n      }\n\n    case RETWEET_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_POST_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_POST_SUCCESS:\n      {\n        //console.log('RETWEET_SUCCESS in reducers ', action.data)\n        return _objectSpread({}, state, {\n          mainPosts: state.mainPosts.filter(function (v) {\n            return v.id !== action.data;\n          })\n        });\n      }\n\n    case REMOVE_POST_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_POST_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          singlePost: action.data\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/app/frontend/reducers/post.js"],"names":["initialState","mainPosts","imagePaths","addPostErrorReason","isAddingPost","postAdded","isAddingComment","addCommentErrorReason","commentAdded","singlePost","LOAD_MAIN_POSTS_REQUEST","LOAD_MAIN_POSTS_SUCCESS","LOAD_MAIN_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","REMOVE_IMAGE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_COMMENTS_REQUEST","LOAD_COMMENTS_SUCCESS","LOAD_COMMENTS_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","reducer","state","action","type","lastId","hasMorePost","concat","data","length","error","postIndex","findIndex","v","id","postId","post","Comments","comment","console","log","undefined","comments","filter","i","index","Likers","userId"],"mappings":"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","sourcesContent":["// export const initialState = {\n//     mainPosts: [{\n//         // id: 1,\n//         // User: {\n//         //     id: 1,\n//         //     nickname: \"코드\",\n//         // },\n//         // content: \"첫 번째 게시글\",\n//         // img: \"https://blog.yena.io/assets/post-img/171123-nachoi-300.jpg\",\n//         // Comments: [],\n//     }],                 // 화면에 보일 포스트들\n//     imagePaths: [],     // 미리보기 이미지 경로\n//     addPostErrorReason:'',  // 포스트 업로드 실패 사유\n//     isAddingPost: false,        // 포스트 업로드 중\n//     postAdded: false,           // 포스트 업로드 성공,\n//     isAddingComment:false,\n//     addCommentErrorReason: '',\n//     commentAdded: false,\n// };\n\n// const dummyPost = {\n//     id: 2,\n//     User: {\n//         id: 1,\n//         nickname: '코드',\n//     },\n//     content: '나는 더미입니다',\n//     Comments: [],\n// }\n\n// const dummyComment = {\n//     id: 1,\n//     User: {\n//         id: 1,\n//         nickname: 2,\n//     },\n//     createdAt: new Date(),\n//     content: '더미 댓글입니다',\n// }\n\n\nexport const initialState = {\n    mainPosts: [], // 화면에 보일 포스트들\n    imagePaths: [], // 미리보기 이미지 경로\n    addPostErrorReason: '', // 포스트 업로드 실패 사유\n    isAddingPost: false, // 포스트 업로드 중\n    postAdded: false, // 포스트 업로드 성공\n    isAddingComment: false,\n    addCommentErrorReason: '',\n    commentAdded: false,\n\n    singlePost: null,\n  };\n\nexport const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\nexport const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\nexport const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\n\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\n\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\n\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\n\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\n\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\n\nexport const LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST';\nexport const LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\nexport const LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE';\n\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\n\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n\n\n\n\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\n\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        //case LOAD_COMMENTS_REQUEST:\n        case LOAD_HASHTAG_POSTS_REQUEST:\n        case LOAD_USER_POSTS_REQUEST:\n        case LOAD_MAIN_POSTS_REQUEST: {\n            return {\n                ...state,\n                mainPosts: !action.lastId ? [] : state.mainPosts,\n                hasMorePost: action.lastId ? state.hasMorePost : true,\n            };\n        }\n        case LOAD_USER_POSTS_SUCCESS:\n        case LOAD_HASHTAG_POSTS_SUCCESS:\n        case LOAD_MAIN_POSTS_SUCCESS: {\n            return {\n                ...state,     \n                mainPosts: state.mainPosts.concat(action.data),\n                // mainPosts: action.data.forEach(element => {\n                //    mainPosts.push(element); \n                // }),\n                hasMorePost: action.data.length === 10,\n            };\n        }\n        //case LOAD_COMMENTS_FAILURE:\n        case LOAD_HASHTAG_POSTS_FAILURE:\n        case LOAD_USER_POSTS_FAILURE:\n        case LOAD_MAIN_POSTS_FAILURE: {\n            return {\n                ...state,\n            };\n        }\n        case ADD_POST_REQUEST: {\n            //console.log(\" in Reducuer ADD_POST_REQUEST : \", action)\n            return {\n                ...state,\n                isAddingPost: true,\n                addPostErrorReason: '',\n                postAdded: false,\n            };\n        }\n        case ADD_POST_SUCCESS: {\n            //console.log(\" in Reducuer ADD_POST_SUCCESS : \", action)\n            return {\n                ...state,\n                isAddingPost: false,\n                //mainPosts: [dummyPost, ...state.mainPosts],\n                mainPosts: [action.data, ...state.mainPosts],\n                postAdded: true,\n                imagePaths: [],\n            };\n        }\n        case ADD_POST_FAILURE: {\n            return {\n                ...state,\n                isAddingPost: false,\n                addPostErrorReason: action.error,\n            };\n        }\n        case ADD_COMMENT_REQUEST: {\n           // console.log(\" in Reducuer ADD_COMMENT_REQUEST :  \", action)\n            return {\n                ...state,\n                isAddingComment: true,\n                addCommentErrorReason: '',\n                commentAdded: false,\n            };\n        }\n        case ADD_COMMENT_SUCCESS: {\n            // console.log(\" in Reducuer ADD_COMMENT_SUCCESS :  \", action)\n            // console.log(\" chk state : \", state)\n            // console.log(\" state.mainPosts[0] : \", state.mainPosts[0]);\n\n           // try {   \n                const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n                //console.log(\"postIndex : \", postIndex);\n                const post = state.mainPosts[postIndex];\n                // console.log(\"post : \", post);\n                // console.log(\"post.Comments : \", post.Comments)\n                // console.log(\"action.data.comment : \", action.data.comment)\n                const Comments = [...post.Comments, action.data.comment];\n                //console.log(\"Comments : \", Comments);\n                const mainPosts = [...state.mainPosts];\n                //console.log(\"mainPosts : \", mainPosts);\n                mainPosts[postIndex] = {...post, Comments };\n                //console.log(\"mainPosts[postIndex] : \", mainPosts[postIndex]);\n            // } catch (e) {\n            //     console.log(\"reducer error : \", e);\n            // }\n            \n            return {\n                ...state,\n                isAddingComment: false,\n                mainPosts,\n                //mainPosts : mainPosts,\n                commentAdded: true,\n            };\n        }\n        case ADD_COMMENT_FAILURE: {\n            console.log(\" in Reducuer ADD_COMMENT_FAILURE :  \", action)\n            return {\n                ...state,\n                isAddingComment: false,\n                addCommentErrorReason: action.error,\n            };\n        }\n        case LOAD_COMMENTS_SUCCESS: {\n\n            console.log('LOAD_COMMENTS_SUCCESS action : ', action.data)\n            console.log('LOAD_COMMENTS_SUCCESS state : ', state)\n\n            if (action.data.postId !== undefined ) {\n                const postIndex = state.mainPosts.findIndex( v=> v.id === action.data.postId);\n                const post = state.mainPosts[postIndex];\n                const Comments = action.data.comments;\n                const mainPosts = [...state.mainPosts];\n                mainPosts[postIndex] = { ...post, Comments};\n\n                return {\n                    ...state,\n                    mainPosts,\n                    //mainPosts : mainPosts,\n                };\n            } else {\n                return {\n                    ...state,\n                }\n            }\n            \n        }\n        case UPLOAD_IMAGES_REQUEST: {\n            return {\n                ...state,\n            };\n        }\n        case UPLOAD_IMAGES_SUCCESS: {\n            return {\n                ...state,\n                imagePaths: [...state.imagePaths, ...action.data],\n            };\n        }\n        case UPLOAD_IMAGES_FAILURE: {\n            return {\n                ...state,\n            };\n        }\n        case REMOVE_IMAGE: {\n            return {\n                ...state,\n                imagePaths: state.imagePaths.filter((v,i) => i !== action.index),\n            }\n        }\n        case LIKE_POST_REQUEST: {\n            //console.log(\" in Reducuer ADD_POST_REQUEST : \", action)\n            return {\n                ...state,\n            };\n        }\n        case LIKE_POST_SUCCESS: {\n            //console.log(\" in Reducuer ADD_POST_SUCCESS : \", action)\n            const postIndex = state.mainPosts.findIndex( v => v.id === action.data.postId);\n            const post = state.mainPosts[postIndex];\n            const Likers = [{ id: action.data.userId }, ...post.Likers];\n            const mainPosts = [...state.mainPosts];\n            mainPosts[postIndex] = { ...post, Likers};\n\n            return {\n                ...state,\n                mainPosts,\n            };\n        }\n        case LIKE_POST_FAILURE: {\n            return {\n                ...state,\n            };\n        }\n        case UNLIKE_POST_REQUEST: {\n            //console.log(\" in Reducuer ADD_POST_REQUEST : \", action)\n            return {\n                ...state,\n            };\n        }\n        case UNLIKE_POST_SUCCESS: {\n            //console.log(\" in Reducuer ADD_POST_SUCCESS : \", action)\n            const postIndex = state.mainPosts.findIndex( v => v.id === action.data.postId);\n            const post = state.mainPosts[postIndex];\n            const Likers = post.Likers.filter(v => v.id !== action.data.userId);\n            const mainPosts = [...state.mainPosts];\n            mainPosts[postIndex] = { ...post, Likers};\n            return {\n                ...state,\n                mainPosts,\n            };\n        }\n        case UNLIKE_POST_FAILURE: {\n            return {\n                ...state,\n            };\n        }\n        case RETWEET_REQUEST: {\n            return {\n                ...state,\n            };\n        }\n        case RETWEET_SUCCESS: {\n            console.log('RETWEET_SUCCESS in reducers ', action.data)\n            return {\n                ...state,\n                mainPosts: [action.data, ...state.mainPosts],\n            };\n        }\n        case RETWEET_FAILURE: {\n            return {\n                ...state,\n            };\n        }\n        case REMOVE_POST_REQUEST: {\n            return {\n                ...state,\n            };\n        }\n        case REMOVE_POST_SUCCESS: {\n            //console.log('RETWEET_SUCCESS in reducers ', action.data)\n            return {\n                ...state,\n                mainPosts: state.mainPosts.filter( v => v.id !== action.data ),\n            };\n        }\n        case REMOVE_POST_FAILURE: {\n            return {\n                ...state,\n            };\n        }\n\n        case LOAD_POST_SUCCESS: {\n            return {\n                ...state,\n                singlePost: action.data,\n            }\n        }\n        default: {\n            return {\n                ...state,\n            }\n        }\n    }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}