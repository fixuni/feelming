{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/app/frontend/containers/ProfileImg.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect, useRef } from 'react';\nimport { Form, Input, Button, Card, Carousel, Upload, Icon, Avatar } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { UPLOAD_PROFILE_IMAGES_REQUEST } from '../reducers/user';\n\nconst ProfileImg = () => {\n  //const { profileImg } = useSelector( state => state.user );\n  // const profileImg = [ \n  // new Image(\"http://localhost:3065/profileImg_0.jpg\"),\n  // new Image(\"http://localhost:3065/profileImg_1.jpg\"),\n  // new Image(\"http://localhost:3065/profileImg_2.jpg\")];\n  const {\n    0: whichImg,\n    1: setWhichImg\n  } = useState('');\n  const {\n    0: whichImgError01,\n    1: setWhichImgError01\n  } = useState(false);\n  const {\n    0: whichImgError02,\n    1: setWhichImgError02\n  } = useState(false);\n  const {\n    0: whichImgError03,\n    1: setWhichImgError03\n  } = useState(false);\n  const dispatch = useDispatch();\n  const imageInput = useRef();\n  const props = {\n    name: 'file',\n    action: 'http://locolhost:3065/',\n    headers: {\n      authorization: 'authorization-text'\n    },\n    accept: 'image/*',\n\n    onChange(info) {\n      if (info.file.status !== 'uploading') {\n        console.log(info.file, info.fileList);\n      }\n\n      if (info.file.status === 'done') {\n        message.success(`${info.file.name} file uploaded successfully`);\n      } else if (info.file.status === 'error') {\n        message.error(`${info.file.name} file upload failed.`);\n      }\n    }\n\n  };\n\n  function onChange(which) {\n    console.log('which : ', which); //console.log('a.loading : ', a.loading)\n\n    setWhichImg(which);\n  }\n\n  const onChangeImages = useCallback(e => {\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, f => {\n      imageFormData.append('image', f);\n    });\n    dispatch({\n      type: UPLOAD_PROFILE_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  }, []);\n  const onClickImageUpload = useCallback(() => {\n    console.log(\"imageInput.current : \", imageInput.current);\n    imageInput.current.click();\n  }, [imageInput.current]);\n\n  const imgLoadFail = () => {\n    console.log(\"image load fail : \"); // setWhichImgError01(false);\n    // setWhichImgError02(false);\n    // setWhichImgError03(false);\n\n    return __jsx(Upload, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), __jsx(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, __jsx(Icon, {\n      type: \"upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), \" Click to Upload\"));\n  }; // useEffect( () => {\n  //     if (whichImg || whichImgError01 || whichImgError02 || whichImgError03) {\n  //         setWhichImgError01(false);\n  //         setWhichImgError02(false);\n  //         setWhichImgError03(false);\n  //     }\n  // }, [whichImg, whichImgError01, whichImgError02, whichImgError03]);\n\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, __jsx(Carousel, {\n    afterChange: onChange,\n    style: {\n      width: 240,\n      padding: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, __jsx(Avatar, {\n    key: 1,\n    src: \"http://localhost:3065/profileImg_0.jpg\",\n    onError: () => setWhichImgError01(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, console.log(\"whichImgError01 : \", whichImgError01), whichImgError01 ? imgLoadFail() : ''), __jsx(Avatar, {\n    key: 2,\n    src: \"http://localhost:3065/profileImg_1.jpg\",\n    onError: () => setWhichImgError02(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, console.log(\"whichImgError02 : \", whichImgError02), whichImgError02 ? imgLoadFail() : ''), __jsx(Avatar, {\n    key: 3,\n    src: \"http://localhost:3065/profileImg_2.jpg\",\n    onError: () => setWhichImgError03(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, console.log(\"whichImgError03 : \", whichImgError03), whichImgError03 ? imgLoadFail() : '')));\n};\n\nexport default ProfileImg;","map":null,"metadata":{},"sourceType":"module"}