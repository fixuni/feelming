{"version":3,"file":"static/webpack/static/development/pages/index.js.2462dcbcbb3efcffc94a.hot-update.js","sources":["webpack:///./components/PostForm.js"],"sourcesContent":["import React, { useCallback, useState, useEffect, useRef} from 'react';\nimport { Form, Input, Button} from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_POST_SUCCESS, ADD_POST_REQUEST, UPLOAD_IMAGES_REQUEST } from '../reducers/post';\n\n\n\nconst PostForm = () => {\n    //const { imagePaths } = useSelector( state => state.post);\n    const dispatch = useDispatch();\n    const [ text, setText ] = useState('');\n    const { imagePaths, isAddingPost, postAdded } = useSelector( state => state.post );\n    const imageInput = useRef();\n\n    useEffect( () => {\n        if (postAdded) {\n            setText('');\n        }\n    }, [postAdded]);\n\n    \n    const onSubmitForm = useCallback( (e) => {\n        e.preventDefault();   ///  안 넣으면 새 페이지로 넘어감\n        if (!text && !text.trim()) {\n            return alert('게시글을 작성하세요');\n        }\n\n        const formData = new FormData();\n        imagePaths.forEach((i) => {\n        formData.append('image', i);\n        });\n        formData.append('content', text);\n\n        dispatch({\n            type: ADD_POST_REQUEST,\n            data: {\n                content: text.trim(),\n            },\n        });\n        console.log('onSubmitForm() text : ', text);\n    }, [text, imagePaths]);\n\n    //const [id, setId ] = useState('');\n    const onChangeText = useCallback( (e) => {\n       // e.preventDefault();\n        setText(e.target.value);\n    }, []);\n\n    const onChangeImages = useCallback( (e) => {\n        console.log(e.target.files);\n        const imageFormData = new FormData();\n        [].forEach.call(e.target.files, (f) => {\n            imageFormData.append( 'image', f);\n        });\n        dispatch({\n            type: UPLOAD_IMAGES_REQUEST,\n            data: imageFormData,\n        });\n    }, []);\n\n    const onClickImageUpload = useCallback(() => {\n        console.log(\"imageInput.current : \", imageInput.current);\n        imageInput.current.click();\n    }, [imageInput.current]);\n\n\n    return (\n        <Form style={{ margin: '10px 0 20px'  }} encType=\"multipart/form-data\" onSubmit={onSubmitForm}>\n            <Input.TextArea maxLength={140} placeholder=\"어떤 신기한 일이 있었나요?\" value={text} onChange={onChangeText}/>\n            <div>\n                <input type=\"file\" multiple hidden ref={imageInput} onChange={onChangeImages} />\n                <Button onClick={onClickImageUpload}> 이미지 업로드</Button>\n                <Button type=\"primary\" style={{ float: 'right'}} htmlType=\"submit\" isLoading={isAddingPost}>색색</Button>\n            </div>\n            <div>\n                {imagePaths.map( v => (\n                        <div key={v} style={{ display: 'inline-block'}}>\n                            <img src={`http://localhost:3065/${v}` } style={{ width: '200px' }} alt={v} />\n                            <div>\n                                <Button>제거</Button>\n                            </div>\n                        </div>\n                    )\n                )}\n            </div>\n        </Form>\n    );\n};\n\nexport default PostForm;"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAJA;AAAA;AAAA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAYA;AACA;AACA;;;;A","sourceRoot":""}