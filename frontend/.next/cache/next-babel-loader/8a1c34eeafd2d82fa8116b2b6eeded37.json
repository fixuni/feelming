{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useCallback } from 'react';\nimport PostCard from '../containers/PostCard';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../reducers/post';\n\nvar Hashtag = function Hashtag(_ref) {\n  var tag = _ref.tag;\n  console.log(\"tag : \", tag);\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts,\n      hasMorePost = _useSelector.hasMorePost;\n\n  var onScroll = useCallback(function () {\n    if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n      if (hasMorePost) {\n        dispatch({\n          type: LOAD_HASHTAG_POSTS_REQUEST,\n          lastId: mainPosts[mainPosts.length - 1].id,\n          data: tag\n        });\n      }\n    }\n\n    ;\n  }, [hasMorePost, mainPosts.length]);\n  useEffect(function () {\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      // 이렇게 해야 호출될때 아래가 실행됨, 본 컴포넌트 나갈때 실행됨\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length]); //  빈 deps [], 는 처음 로딩될때 한 번만 호출됨\n\n  return __jsx(\"div\", null, mainPosts.map(function (c) {\n    return __jsx(PostCard, {\n      key: c.id,\n      post: c\n    });\n  }));\n};\n\nHashtag.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var tag;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            tag = context.query.tag; //console.log('hashtag getInitialProps', context.query.tag);\n\n            context.store.dispatch({\n              type: LOAD_HASHTAG_POSTS_REQUEST,\n              data: tag\n            });\n            return _context.abrupt(\"return\", {\n              tag: tag\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Hashtag;","map":{"version":3,"sources":["/app/frontend/pages/hashtag.js"],"names":["React","useEffect","useCallback","PostCard","useDispatch","useSelector","LOAD_HASHTAG_POSTS_REQUEST","Hashtag","tag","console","log","dispatch","state","post","mainPosts","hasMorePost","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","type","lastId","length","id","data","addEventListener","removeEventListener","map","c","getInitialProps","context","query","store"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AAEA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAAQC,0BAAR,QAAyC,kBAAzC;;AAIA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAa;AAAA,MAAVC,GAAU,QAAVA,GAAU;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,GAAtB;AACA,MAAMG,QAAQ,GAAGP,WAAW,EAA5B;;AAFyB,qBAGSC,WAAW,CAAE,UAAAO,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAP,CAHpB;AAAA,MAGlBC,SAHkB,gBAGlBA,SAHkB;AAAA,MAGPC,WAHO,gBAGPA,WAHO;;AAKzB,MAAMC,QAAQ,GAAGd,WAAW,CAAE,YAAM;AAChC,QAAIe,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GACEF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAD9C,EACoD;AAC5C,UAAIP,WAAJ,EAAiB;AACbJ,QAAAA,QAAQ,CAAC;AACLY,UAAAA,IAAI,EAAEjB,0BADD;AAELkB,UAAAA,MAAM,EAAEV,SAAS,CAACA,SAAS,CAACW,MAAV,GAAmB,CAApB,CAAT,CAAiCC,EAFpC;AAGLC,UAAAA,IAAI,EAAEnB;AAHD,SAAD,CAAR;AAKH;AACJ;;AAAA;AACR,GAX2B,EAWzB,CAACO,WAAD,EAAcD,SAAS,CAACW,MAAxB,CAXyB,CAA5B;AAaAxB,EAAAA,SAAS,CAAE,YAAM;AACbgB,IAAAA,MAAM,CAACW,gBAAP,CAAwB,QAAxB,EAAkCZ,QAAlC;AACA,WAAO,YAAM;AAAG;AACZC,MAAAA,MAAM,CAACY,mBAAP,CAA2B,QAA3B,EAAqCb,QAArC;AACH,KAFD;AAGH,GALQ,EAKN,CAACF,SAAS,CAACW,MAAX,CALM,CAAT,CAlByB,CAuBD;;AAExB,SACI,mBACKX,SAAS,CAACgB,GAAV,CAAc,UAAAC,CAAC;AAAA,WACZ,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,CAAC,CAACL,EAAjB;AAAqB,MAAA,IAAI,EAAEK;AAA3B,MADY;AAAA,GAAf,CADL,CADJ;AAOH,CAhCD;;AAsCAxB,OAAO,CAACyB,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA0B,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBzB,YAAAA,GADgB,GACVyB,OAAO,CAACC,KAAR,CAAc1B,GADJ,EAEtB;;AACAyB,YAAAA,OAAO,CAACE,KAAR,CAAcxB,QAAd,CAAuB;AACnBY,cAAAA,IAAI,EAAEjB,0BADa;AAEnBqB,cAAAA,IAAI,EAAEnB;AAFa,aAAvB;AAHsB,6CAOf;AAAEA,cAAAA,GAAG,EAAHA;AAAF,aAPe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;;AAUA,eAAeD,OAAf","sourcesContent":["import React, { useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport PostCard from '../containers/PostCard'\nimport {useDispatch, useSelector } from 'react-redux';\nimport {LOAD_HASHTAG_POSTS_REQUEST} from '../reducers/post';\n\n\n \nconst Hashtag = ({ tag }) => {\n    console.log(\"tag : \", tag);\n    const dispatch = useDispatch();\n    const {mainPosts, hasMorePost } = useSelector( state => state.post );\n\n    const onScroll = useCallback( () => {\n        if (window.scrollY + document.documentElement.clientHeight \n            > document.documentElement.scrollHeight - 300 ) {\n                if (hasMorePost) {\n                    dispatch({\n                        type: LOAD_HASHTAG_POSTS_REQUEST,\n                        lastId: mainPosts[mainPosts.length - 1 ].id,\n                        data: tag\n                    })\n                }\n            };\n    }, [hasMorePost, mainPosts.length]);\n\n    useEffect( () => {\n        window.addEventListener('scroll', onScroll);\n        return () => {  // 이렇게 해야 호출될때 아래가 실행됨, 본 컴포넌트 나갈때 실행됨\n            window.removeEventListener('scroll', onScroll);\n        }\n    }, [mainPosts.length]); //  빈 deps [], 는 처음 로딩될때 한 번만 호출됨\n\n    return (\n        <div>\n            {mainPosts.map(c => (\n                <PostCard key={c.id} post={c} />\n            ))}\n        </div>\n    );\n};\n\nHashtag.propTypes = {\n    tag: PropTypes.string.isRequired,\n};\n\nHashtag.getInitialProps = async (context) => {\n    const tag = context.query.tag;\n    //console.log('hashtag getInitialProps', context.query.tag);\n    context.store.dispatch({\n        type: LOAD_HASHTAG_POSTS_REQUEST,\n        data: tag,\n    })\n    return { tag };\n}\n\nexport default Hashtag;"]},"metadata":{},"sourceType":"module"}