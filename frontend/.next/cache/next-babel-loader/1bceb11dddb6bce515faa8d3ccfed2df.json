{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useCallback, useState } from 'react';\nimport { Form, Button, List, Card, Icon, Input } from 'antd';\nimport PostCard from '../containers/PostCard';\nimport { useDispatch, useSelector } from 'react-redux';\nimport NicknameEditForm from '../containers/NicknameEditForm';\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, UNFOLLOW_USER_REQUEST, REMOVE_FOLLOWER_REQUEST } from '../reducers/user';\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\n\nvar Profile = function Profile() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me,\n      followerList = _useSelector.followerList,\n      followingList = _useSelector.followingList,\n      hasMoreFollower = _useSelector.hasMoreFollower,\n      hasMoreFollowing = _useSelector.hasMoreFollowing;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts; // useEffect ( () => {\n  //     if (me) {\n  //     }\n  // }, [me && me.id ]);\n\n\n  var onUnfollow = useCallback(function (userId) {\n    return function () {\n      dispatch({\n        type: UNFOLLOW_USER_REQUEST,\n        data: userId\n      });\n    };\n  }, []);\n  var onRemoveFollower = useCallback(function (userId) {\n    return function () {\n      dispatch({\n        type: REMOVE_FOLLOWER_REQUEST,\n        data: userId\n      });\n    };\n  }, []);\n  var loadMoreFollowings = useCallback(function () {\n    dispatch({\n      type: LOAD_FOLLOWINGS_REQUEST,\n      offset: followingList.length\n    });\n  }, [followingList.length]);\n  var loadMoreFollowers = useCallback(function () {\n    dispatch({\n      type: LOAD_FOLLOWERS_REQUEST,\n      offset: followerList.length\n    });\n  }, [followerList.length]);\n  return __jsx(\"div\", null, __jsx(NicknameEditForm, null), __jsx(List, {\n    style: {\n      marginBottom: '20px'\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: __jsx(\"div\", null, \" \\uD314\\uB85C\\uC719 \\uBAA9\\uB85D \"),\n    loadMore: hasMoreFollowing && __jsx(Button, {\n      style: {\n        width: '100%'\n      },\n      onClick: loadMoreFollowings\n    }, \" \\uB354 \\uBCF4\\uAE30 \"),\n    dataSource: followingList,\n    renderItem: function renderItem(item) {\n      return __jsx(List.Item, {\n        style: {\n          marginTop: '20px'\n        }\n      }, __jsx(Card, {\n        actions: [__jsx(Icon, {\n          key: \"icon\",\n          type: \"stop\"\n        })],\n        onClick: onUnfollow(item.id)\n      }, __jsx(Card.Meta, {\n        description: item.nickname\n      })));\n    }\n  }), __jsx(List, {\n    style: {\n      marginBottom: '20px'\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: __jsx(\"div\", null, \" \\uD314\\uB85C\\uC6CC \\uBAA9\\uB85D \"),\n    loadMore: hasMoreFollower && __jsx(Button, {\n      style: {\n        width: '100%'\n      },\n      onClick: loadMoreFollowers\n    }, \" \\uB354 \\uBCF4\\uAE30 \"),\n    dataSource: followerList,\n    renderItem: function renderItem(item) {\n      return __jsx(List.Item, {\n        style: {\n          marginTop: '20px'\n        }\n      }, __jsx(Card, {\n        actions: [__jsx(Icon, {\n          key: \"icon\",\n          type: \"stop\"\n        })],\n        onClick: onRemoveFollower(item.id)\n      }, __jsx(Card.Meta, {\n        description: item.nickname\n      })));\n    }\n  }), __jsx(\"div\", null, mainPosts.map(function (c) {\n    return __jsx(PostCard, {\n      key: +c.createdAt,\n      post: c\n    });\n  })));\n};\n\nProfile.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var state;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            state = context.store.getState(); // 이 직전에 LOAD_USERS_REQUEST  가 완료돼야함\n            // 따라서 me = null 이면 나로 인식하게 아래 reducer 를 처리하다\n\n            context.store.dispatch({\n              type: LOAD_FOLLOWERS_REQUEST,\n              data: state.user.me && state.user.me.id\n            });\n            context.store.dispatch({\n              type: LOAD_FOLLOWINGS_REQUEST,\n              data: state.user.me && state.user.me.id\n            });\n            context.store.dispatch({\n              type: LOAD_USER_POSTS_REQUEST,\n              data: state.user.me && state.user.me.id\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Profile;","map":{"version":3,"sources":["/app/frontend/pages/profile.js"],"names":["React","useEffect","useCallback","useState","Form","Button","List","Card","Icon","Input","PostCard","useDispatch","useSelector","NicknameEditForm","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWINGS_REQUEST","UNFOLLOW_USER_REQUEST","REMOVE_FOLLOWER_REQUEST","LOAD_USER_POSTS_REQUEST","Profile","dispatch","state","user","me","followerList","followingList","hasMoreFollower","hasMoreFollowing","post","mainPosts","onUnfollow","userId","type","data","onRemoveFollower","loadMoreFollowings","offset","length","loadMoreFollowers","marginBottom","gutter","xs","md","width","item","marginTop","id","nickname","map","c","createdAt","getInitialProps","context","store","getState"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useState } from 'react';\nimport { Form, Button, List, Card, Icon, Input } from 'antd';\nimport PostCard from '../containers/PostCard';\nimport { useDispatch, useSelector } from 'react-redux';\nimport NicknameEditForm from '../containers/NicknameEditForm';\n\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, UNFOLLOW_USER_REQUEST, \n    REMOVE_FOLLOWER_REQUEST } from '../reducers/user';\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\n \n\nconst Profile = () => {\n    const dispatch = useDispatch();\n    const { me, followerList, followingList, hasMoreFollower, hasMoreFollowing } = useSelector( state => state.user );\n    const { mainPosts,  } = useSelector ( state => state.post );\n    // useEffect ( () => {\n    //     if (me) {\n    //     }\n    // }, [me && me.id ]);\n\n    const onUnfollow = useCallback(userId => () => {\n        dispatch({\n            type: UNFOLLOW_USER_REQUEST,\n            data: userId,\n        });\n    }, []);\n\n    const onRemoveFollower = useCallback( userId => () => {\n        dispatch({\n            type: REMOVE_FOLLOWER_REQUEST,\n            data: userId,\n        });\n    }, []);\n\n    const loadMoreFollowings = useCallback( () => {\n        dispatch({\n            type: LOAD_FOLLOWINGS_REQUEST,\n            offset: followingList.length,\n        });\n    }, [followingList.length])\n\n    const loadMoreFollowers = useCallback( () => {\n        dispatch({\n            type: LOAD_FOLLOWERS_REQUEST,\n            offset: followerList.length,\n        });\n    }, [followerList.length]);\n\n    return (\n    <div>\n        <NicknameEditForm />\n        <List\n            style={{ marginBottom: '20px' }}\n            grid={{ gutter: 4, xs: 2, md: 3 }}\n            size=\"small\"\n            header={<div> 팔로윙 목록 </div> }\n            loadMore={hasMoreFollowing &&  <Button style={{ width: '100%' }} onClick={loadMoreFollowings}> 더 보기 </Button>}\n            dataSource={followingList}\n            renderItem={item => (\n                <List.Item style={{ marginTop: '20px' }}>\n                    <Card actions={[<Icon key='icon' type=\"stop\" />]} onClick={onUnfollow(item.id)}>\n                        <Card.Meta description={item.nickname} />\n                    </Card>\n                </List.Item>\n            )}\n        />\n        <List\n            style={{ marginBottom: '20px' }}\n            grid={{ gutter: 4, xs: 2, md: 3 }}\n            size=\"small\"\n            header={<div> 팔로워 목록 </div> }\n            loadMore={hasMoreFollower && <Button style={{ width: '100%' }} onClick={loadMoreFollowers}> 더 보기 </Button>}\n            dataSource={followerList}\n            renderItem={item => (\n                <List.Item style={{ marginTop: '20px' }}>\n                    <Card actions={[<Icon key='icon' type=\"stop\" />]} onClick={onRemoveFollower(item.id)}>\n                        <Card.Meta description={item.nickname} />\n                    </Card>\n                </List.Item>\n            )}\n        />\n        <div>\n            {mainPosts.map(c => (\n                <PostCard key={+c.createdAt} post={c} />\n            ))}\n        </div>\n    </div>\n    );\n};\n\nProfile.getInitialProps = async (context) => {\n    const state = context.store.getState();\n    // 이 직전에 LOAD_USERS_REQUEST  가 완료돼야함\n    // 따라서 me = null 이면 나로 인식하게 아래 reducer 를 처리하다\n    context.store.dispatch({\n            type: LOAD_FOLLOWERS_REQUEST,\n            data: state.user.me && state.user.me.id,\n    });\n    context.store.dispatch({\n            type: LOAD_FOLLOWINGS_REQUEST,\n            data: state.user.me && state.user.me.id,\n    });\n    context.store.dispatch({\n            type: LOAD_USER_POSTS_REQUEST,\n            data: state.user.me && state.user.me.id,\n    });\n}\nexport default Profile;"]},"metadata":{},"sourceType":"module"}