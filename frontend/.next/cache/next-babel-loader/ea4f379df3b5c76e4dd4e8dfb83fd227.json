{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(logIn),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLogIn),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(signUp),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchSignUp),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(logOut),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLogOut),\n    _marked7 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadUser),\n    _marked8 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLoadUser),\n    _marked9 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(follow),\n    _marked10 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchFollow),\n    _marked11 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(unfollow),\n    _marked12 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchUnfollow),\n    _marked13 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadFollowers),\n    _marked14 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLoadFollowers),\n    _marked15 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadFollowings),\n    _marked16 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLoadFollowings),\n    _marked17 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(removeFollowers),\n    _marked18 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchRemoveFollowers),\n    _marked19 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(userSaga),\n    _marked20 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(helloSaga),\n    _marked21 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchHello);\n\nimport { all, fork, takeLatest, takeEvery, call, put, take, delay } from 'redux-saga/effects';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE, FOLLOW_USER_REQUEST, FOLLOW_USER_SUCCESS, FOLLOW_USER_FAILURE, UNFOLLOW_USER_REQUEST, UNFOLLOW_USER_SUCCESS, UNFOLLOW_USER_FAILURE } from '../reducers/user';\nimport axios from 'axios'; // const HELLO_SAGA = 'HELLO_SAGA';\n\nfunction logInAPI(logInData) {\n  // 서버에 요청 보내는 부분\n  return axios.post('/user/login', logInData, {\n    withCredentials: true //  쿠키 교환 with backend \n\n  });\n}\n\nfunction logIn(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function logIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          // yield fork(logger);    // 로그 기록하는 기능 예제\n          // yield call(loginAPI);       // call 동기 호출\n          //yield delay( 2000);\n          console.log(\"before logInAPI() in Saga\");\n          _context.next = 4;\n          return call(logInAPI, action.data);\n\n        case 4:\n          result = _context.sent;\n          _context.next = 7;\n          return put({\n            // put 은 dispatch 와 동일\n            type: LOG_IN_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context.next = 14;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 14;\n          return put({\n            type: LOG_IN_FAILURE,\n            error: _context.t0\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 9]]);\n}\n\nfunction watchLogIn() {\n  return _regeneratorRuntime.wrap(function watchLogIn$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(LOG_IN_REQUEST, logIn);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction signUpAPI(signUpData) {\n  // 서버에 요청 보내는 부분\n  return axios.post('/user/', signUpData);\n}\n\nfunction signUp(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function signUp$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(signUpAPI, action.data);\n\n        case 3:\n          result = _context3.sent;\n          //throw new Error('에러 발생');\n          console.log(\"result : \", result);\n          _context3.next = 7;\n          return put({\n            // put 은 dispatch 와 동일\n            type: SIGN_UP_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context3.next = 14;\n          break;\n\n        case 9:\n          _context3.prev = 9;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          _context3.next = 14;\n          return put({\n            type: SIGN_UP_FAILURE\n          });\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 9]]);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction logOutAPI() {\n  // 서버에 요청 보내는 부분\n  return axios.post('/user/logout', {}, {\n    withCredentials: true\n  });\n}\n\nfunction logOut(action) {\n  return _regeneratorRuntime.wrap(function logOut$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(logOutAPI);\n\n        case 3:\n          _context5.next = 5;\n          return put({\n            // put 은 dispatch 와 동일\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 5:\n          _context5.next = 12;\n          break;\n\n        case 7:\n          _context5.prev = 7;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.error(_context5.t0);\n          _context5.next = 12;\n          return put({\n            type: LOG_OUT_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 7]]);\n}\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(LOG_OUT_REQUEST, logOut);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction loadUserAPI(userId) {\n  return axios.get(userId ? \"/user/\".concat(userId) : '/user/', {\n    withCredentials: true\n  });\n}\n\nfunction loadUser(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadUser$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(loadUserAPI, action.data);\n\n        case 3:\n          result = _context7.sent;\n          _context7.next = 6;\n          return put({\n            // put 은 dispatch 와 동일\n            type: LOAD_USER_SUCCESS,\n            data: result.data,\n            me: !action.data\n          });\n\n        case 6:\n          _context7.next = 13;\n          break;\n\n        case 8:\n          _context7.prev = 8;\n          _context7.t0 = _context7[\"catch\"](0);\n          console.error(_context7.t0);\n          _context7.next = 13;\n          return put({\n            type: LOAD_USER_FAILURE,\n            error: _context7.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 8]]);\n}\n\nfunction watchLoadUser() {\n  return _regeneratorRuntime.wrap(function watchLoadUser$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeEvery(LOAD_USER_REQUEST, loadUser);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction followAPI(userId) {\n  return axios.post(\"/user/\".concat(userId, \"/follow\"), {}, {\n    withCredentials: true\n  });\n}\n\nfunction follow(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function follow$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return call(followAPI, action.data);\n\n        case 3:\n          result = _context9.sent;\n          _context9.next = 6;\n          return put({\n            // put 은 dispatch 와 동일\n            type: FOLLOW_USER_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context9.next = 13;\n          break;\n\n        case 8:\n          _context9.prev = 8;\n          _context9.t0 = _context9[\"catch\"](0);\n          console.error(_context9.t0);\n          _context9.next = 13;\n          return put({\n            type: FOLLOW_USER_FAILURE,\n            error: _context9.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 8]]);\n}\n\nfunction watchFollow() {\n  return _regeneratorRuntime.wrap(function watchFollow$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeEvery(FOLLOW_USER_REQUEST, follow);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nfunction unfollowAPI(userId) {\n  return axios[\"delete\"](\"/user/\".concat(userId, \"/follow\"), {}, {\n    withCredentials: true\n  });\n}\n\nfunction unfollow(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function unfollow$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.prev = 0;\n          _context11.next = 3;\n          return call(unfollowAPI, action.data);\n\n        case 3:\n          result = _context11.sent;\n          _context11.next = 6;\n          return put({\n            // put 은 dispatch 와 동일\n            type: UNFOLLOW_USER_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context11.next = 13;\n          break;\n\n        case 8:\n          _context11.prev = 8;\n          _context11.t0 = _context11[\"catch\"](0);\n          console.error(_context11.t0);\n          _context11.next = 13;\n          return put({\n            type: UNFOLLOW_USER_FAILURE,\n            error: _context11.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11, null, [[0, 8]]);\n}\n\nfunction watchUnfollow() {\n  return _regeneratorRuntime.wrap(function watchUnfollow$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeEvery(UNFOLLOW_USER_REQUEST, unfollow);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nfunction loadFollowersAPI(userId) {\n  return axios.get(\"/user/\".concat(userId, \"/followers\"), {}, {\n    withCredentials: true\n  });\n}\n\nfunction loadFollowers(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadFollowers$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.prev = 0;\n          _context13.next = 3;\n          return call(loadFollowersAPI, action.data);\n\n        case 3:\n          result = _context13.sent;\n          _context13.next = 6;\n          return put({\n            // put 은 dispatch 와 동일\n            type: LOAD_FOLLOWERS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context13.next = 13;\n          break;\n\n        case 8:\n          _context13.prev = 8;\n          _context13.t0 = _context13[\"catch\"](0);\n          console.error(_context13.t0);\n          _context13.next = 13;\n          return put({\n            type: LOAD_FOLLOWERS_FAILURE,\n            error: _context13.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13, null, [[0, 8]]);\n}\n\nfunction watchLoadFollowers() {\n  return _regeneratorRuntime.wrap(function watchLoadFollowers$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return takeEvery(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n\n        case 2:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14);\n}\n\nfunction loadFollowingsAPI(userId) {\n  return axios.get(\"/user/\".concat(userId, \"/followings\"), {}, {\n    withCredentials: true\n  });\n}\n\nfunction loadFollowings(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadFollowings$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.prev = 0;\n          _context15.next = 3;\n          return call(loadFollowingsAPI, action.data);\n\n        case 3:\n          result = _context15.sent;\n          _context15.next = 6;\n          return put({\n            // put 은 dispatch 와 동일\n            type: LOAD_FOLLOWINGS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context15.next = 13;\n          break;\n\n        case 8:\n          _context15.prev = 8;\n          _context15.t0 = _context15[\"catch\"](0);\n          console.error(_context15.t0);\n          _context15.next = 13;\n          return put({\n            type: LOAD_FOLLOWINGS_FAILURE,\n            error: _context15.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15, null, [[0, 8]]);\n}\n\nfunction watchLoadFollowings() {\n  return _regeneratorRuntime.wrap(function watchLoadFollowings$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return takeEvery(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n\n        case 2:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked16);\n}\n\nfunction removeFollowersAPI(userId) {\n  return axios.get(\"/user/\".concat(userId, \"/followings\"), {}, {\n    withCredentials: true\n  });\n}\n\nfunction removeFollowers(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function removeFollowers$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.prev = 0;\n          _context17.next = 3;\n          return call(loadFollowingsAPI, action.data);\n\n        case 3:\n          result = _context17.sent;\n          _context17.next = 6;\n          return put({\n            // put 은 dispatch 와 동일\n            type: LOAD_FOLLOWERS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context17.next = 13;\n          break;\n\n        case 8:\n          _context17.prev = 8;\n          _context17.t0 = _context17[\"catch\"](0);\n          console.error(_context17.t0);\n          _context17.next = 13;\n          return put({\n            type: LOAD_FOLLOWERS_FAILURE,\n            error: _context17.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _marked17, null, [[0, 8]]);\n}\n\nfunction watchRemoveFollowers() {\n  return _regeneratorRuntime.wrap(function watchRemoveFollowers$(_context18) {\n    while (1) {\n      switch (_context18.prev = _context18.next) {\n        case 0:\n          _context18.next = 2;\n          return takeEvery(LOAD_FOLLOWERS_REQUEST, removeFollowers);\n\n        case 2:\n        case \"end\":\n          return _context18.stop();\n      }\n    }\n  }, _marked18);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context19) {\n    while (1) {\n      switch (_context19.prev = _context19.next) {\n        case 0:\n          _context19.next = 2;\n          return all([fork(watchLogIn), // 이벤트 리스너로 이해, 순서 의미 없음\n          fork(watchSignUp), fork(watchLogOut), fork(watchLoadUser), fork(watchFollow), fork(watchUnfollow), fork(watchLoadFollowings), fork(watchLoadFollowers), fork(watchRemoveFollowers) // call()   // 동기 호출\n          // fork()   // 비동기 호출\n          // watchHello(),\n          // //helloSaga(),\n          // watchLogin(),\n          // watchSignup(),\n          ]);\n\n        case 2:\n        case \"end\":\n          return _context19.stop();\n      }\n    }\n  }, _marked19);\n} // function* watchHello() {\n//     yield takeEvery(HELLO_SAGA, function*() {\n//         console.log(1);\n//         console.log(2);\n//         console.log(3);\n//         console.log(4);\n//     })\n// }\n// function* watchHello() {\n//     console.log(\"Before Saga\");\n//     while(true) {\n//         yield take(HELLO_SAGA);\n//     console.log(\"Hello Saga\");\n//     }\n// }\n\nfunction helloSaga() {\n  return _regeneratorRuntime.wrap(function helloSaga$(_context20) {\n    while (1) {\n      switch (_context20.prev = _context20.next) {\n        case 0:\n          //yield take(HELLO_SAGA);\n          //yield takeLatest(HELLO_SAGA, hello);\n          console.log(\"Before Saga\");\n\n        case 1:\n          if (!true) {\n            _context20.next = 7;\n            break;\n          }\n\n          _context20.next = 4;\n          return take(HELLO_SAGA);\n\n        case 4:\n          console.log(\"Hello Saga\");\n          _context20.next = 1;\n          break;\n\n        case 7:\n        case \"end\":\n          return _context20.stop();\n      }\n    }\n  }, _marked20);\n}\n\nfunction watchHello() {\n  return _regeneratorRuntime.wrap(function watchHello$(_context22) {\n    while (1) {\n      switch (_context22.prev = _context22.next) {\n        case 0:\n          _context22.next = 2;\n          return takeLatest(HELLO_SAGA,\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee() {\n            return _regeneratorRuntime.wrap(function _callee$(_context21) {\n              while (1) {\n                switch (_context21.prev = _context21.next) {\n                  case 0:\n                    _context21.next = 2;\n                    return delay(1000);\n\n                  case 2:\n                    _context21.next = 4;\n                    return put({\n                      type: 'BYE_SAGA'\n                    });\n\n                  case 4:\n                  case \"end\":\n                    return _context21.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context22.stop();\n      }\n    }\n  }, _marked21);\n}","map":{"version":3,"sources":["/app/frontend/sagas/user.js"],"names":["logIn","watchLogIn","signUp","watchSignUp","logOut","watchLogOut","loadUser","watchLoadUser","follow","watchFollow","unfollow","watchUnfollow","loadFollowers","watchLoadFollowers","loadFollowings","watchLoadFollowings","removeFollowers","watchRemoveFollowers","userSaga","helloSaga","watchHello","all","fork","takeLatest","takeEvery","call","put","take","delay","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","FOLLOW_USER_REQUEST","FOLLOW_USER_SUCCESS","FOLLOW_USER_FAILURE","UNFOLLOW_USER_REQUEST","UNFOLLOW_USER_SUCCESS","UNFOLLOW_USER_FAILURE","axios","logInAPI","logInData","post","withCredentials","action","console","log","data","result","type","error","signUpAPI","signUpData","logOutAPI","loadUserAPI","userId","get","me","followAPI","unfollowAPI","loadFollowersAPI","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWERS_REQUEST","loadFollowingsAPI","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","LOAD_FOLLOWINGS_REQUEST","removeFollowersAPI","HELLO_SAGA"],"mappings":"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","sourcesContent":["import { all, fork, takeLatest, takeEvery, call, put, take, delay, } from 'redux-saga/effects';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, \n    SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE,\n    LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE,\n    LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE,\n    FOLLOW_USER_REQUEST, FOLLOW_USER_SUCCESS, FOLLOW_USER_FAILURE,\n    UNFOLLOW_USER_REQUEST, UNFOLLOW_USER_SUCCESS, UNFOLLOW_USER_FAILURE,\n} from '../reducers/user'\nimport axios from 'axios';\n// const HELLO_SAGA = 'HELLO_SAGA';\n\n\nfunction logInAPI(logInData) {\n// 서버에 요청 보내는 부분\n    return axios.post('/user/login', logInData, {\n        withCredentials: true,      //  쿠키 교환 with backend \n    });\n}\n\nfunction* logIn(action) {\n    try {\n        // yield fork(logger);    // 로그 기록하는 기능 예제\n        // yield call(loginAPI);       // call 동기 호출\n        //yield delay( 2000);\n        console.log(\"before logInAPI() in Saga\")\n        const result = yield call(logInAPI, action.data);\n        yield put( {            // put 은 dispatch 와 동일\n            type: LOG_IN_SUCCESS,\n            data: result.data,\n        });\n    } catch (e) {\n        console.error(e);\n        yield put( {\n            type: LOG_IN_FAILURE,\n            error: e,\n        });\n    }\n}\n\nfunction* watchLogIn() {\n    yield takeEvery(LOG_IN_REQUEST, logIn);\n    // while(true){\n    //     yield take(LOG_IN_REQUEST, login)    // take 안에 gernerater.next() 기능이 있음\n    //     yield put( {            // put 은 redux 에 dispatch 와 동일\n    //         type: LOG_IN_SUCCESS,\n    //     });\n    // }\n}\n\nfunction signUpAPI(signUpData) {\n    // 서버에 요청 보내는 부분\n    return axios.post('/user/', signUpData);\n}\n\nfunction* signUp(action) {\n    try {\n        // yield fork(logger);    // 로그 기록하는 기능 예제\n        //yield call(signUpAPI);       // call 동기 호출\n        //yield delay(2000);\n        const result = yield call(signUpAPI, action.data);\n        //throw new Error('에러 발생');\n        console.log(\"result : \", result);\n        yield put( {            // put 은 dispatch 와 동일\n            type: SIGN_UP_SUCCESS,\n            data: result.data,\n        });\n    } catch (e) {\n        console.error(e);\n        yield put( {\n            type: SIGN_UP_FAILURE,\n        });\n    }\n}\n\nfunction* watchSignUp() {\n    yield takeEvery(SIGN_UP_REQUEST, signUp);\n}\n\nfunction logOutAPI() {\n    // 서버에 요청 보내는 부분\n    return axios.post('/user/logout', {}, {\n        withCredentials: true,\n    });\n}\n\nfunction* logOut(action) {\n    try {\n        yield call(logOutAPI);\n        yield put( {            // put 은 dispatch 와 동일\n            type: LOG_OUT_SUCCESS,\n        });\n    } catch (e) {\n        console.error(e);\n        yield put( {\n            type: LOG_OUT_FAILURE,\n        });\n    }\n}\n\nfunction* watchLogOut() {\n    yield takeEvery(LOG_OUT_REQUEST, logOut);\n}\n\nfunction loadUserAPI(userId) {\n    \n    return axios.get( userId ? `/user/${userId}` : '/user/',  {\n        withCredentials: true,\n    });\n}\n\nfunction* loadUser(action) {\n    try {\n        const result = yield call(loadUserAPI, action.data);\n        yield put( {            // put 은 dispatch 와 동일\n            type: LOAD_USER_SUCCESS,\n            data: result.data,\n            me: !action.data,\n        });\n    } catch (e) {\n        console.error(e);\n        yield put( {\n            type: LOAD_USER_FAILURE,\n            error: e,\n        });\n    }\n}\n\nfunction* watchLoadUser() {\n    yield takeEvery(LOAD_USER_REQUEST, loadUser);\n}\n\nfunction followAPI(userId) {\n    \n    return axios.post( `/user/${userId}/follow`, {}, {\n        withCredentials: true,\n    });\n}\n\nfunction* follow(action) {\n    try {\n        const result = yield call(followAPI, action.data);\n        yield put( {            // put 은 dispatch 와 동일\n            type: FOLLOW_USER_SUCCESS,\n            data: result.data,\n        });\n    } catch (e) {\n        console.error(e);\n        yield put( {\n            type: FOLLOW_USER_FAILURE,\n            error: e,\n        });\n    }\n}\n\nfunction* watchFollow() {\n    yield takeEvery(FOLLOW_USER_REQUEST, follow);\n}\n\nfunction unfollowAPI(userId) {\n    \n    return axios.delete( `/user/${userId}/follow`, {}, {\n        withCredentials: true,\n    });\n}\n\nfunction* unfollow(action) {\n    try {\n        const result = yield call(unfollowAPI, action.data);\n        yield put( {            // put 은 dispatch 와 동일\n            type: UNFOLLOW_USER_SUCCESS,\n            data: result.data,\n        });\n    } catch (e) {\n        console.error(e);\n        yield put( {\n            type: UNFOLLOW_USER_FAILURE,\n            error: e,\n        });\n    }\n}\n\nfunction* watchUnfollow() {\n    yield takeEvery(UNFOLLOW_USER_REQUEST, unfollow);\n}\n\nfunction loadFollowersAPI(userId) {\n    \n    return axios.get( `/user/${userId}/followers`, {}, {\n        withCredentials: true,\n    });\n}\n\nfunction* loadFollowers(action) {\n    try {\n        const result = yield call(loadFollowersAPI, action.data);\n        yield put( {            // put 은 dispatch 와 동일\n            type: LOAD_FOLLOWERS_SUCCESS,\n            data: result.data,\n        });\n    } catch (e) {\n        console.error(e);\n        yield put( {\n            type: LOAD_FOLLOWERS_FAILURE,\n            error: e,\n        });\n    }\n}\n\nfunction* watchLoadFollowers() {\n    yield takeEvery(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n}\n\nfunction loadFollowingsAPI(userId) {\n    \n    return axios.get( `/user/${userId}/followings`, {}, {\n        withCredentials: true,\n    });\n}\n\nfunction* loadFollowings(action) {\n    try {\n        const result = yield call(loadFollowingsAPI, action.data);\n        yield put( {            // put 은 dispatch 와 동일\n            type: LOAD_FOLLOWINGS_SUCCESS,\n            data: result.data,\n        });\n    } catch (e) {\n        console.error(e);\n        yield put( {\n            type: LOAD_FOLLOWINGS_FAILURE,\n            error: e,\n        });\n    }\n}\n\nfunction* watchLoadFollowings() {\n    yield takeEvery(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n}\n\nfunction removeFollowersAPI(userId) {\n    \n    return axios.get( `/user/${userId}/followings`, {}, {\n        withCredentials: true,\n    });\n}\n\nfunction* removeFollowers(action) {\n    try {\n        const result = yield call(loadFollowingsAPI, action.data);\n        yield put( {            // put 은 dispatch 와 동일\n            type: LOAD_FOLLOWERS_SUCCESS,\n            data: result.data,\n        });\n    } catch (e) {\n        console.error(e);\n        yield put( {\n            type: LOAD_FOLLOWERS_FAILURE,\n            error: e,\n        });\n    }\n}\n\nfunction* watchRemoveFollowers() {\n    yield takeEvery(LOAD_FOLLOWERS_REQUEST, removeFollowers);\n}\n\nexport default function* userSaga() {\n    yield all([\n        fork(watchLogIn),       // 이벤트 리스너로 이해, 순서 의미 없음\n        fork(watchSignUp),\n        fork(watchLogOut),\n        fork(watchLoadUser),\n        fork(watchFollow),\n        fork(watchUnfollow),\n        fork(watchLoadFollowings),\n        fork(watchLoadFollowers),\n        fork(watchRemoveFollowers),\n\n        // call()   // 동기 호출\n        // fork()   // 비동기 호출\n        // watchHello(),\n        // //helloSaga(),\n        // watchLogin(),\n        // watchSignup(),\n    ]);\n}\n\n// function* watchHello() {\n//     yield takeEvery(HELLO_SAGA, function*() {\n//         console.log(1);\n//         console.log(2);\n//         console.log(3);\n//         console.log(4);\n//     })\n// }\n\n// function* watchHello() {\n//     console.log(\"Before Saga\");\n//     while(true) {\n//         yield take(HELLO_SAGA);\n//     console.log(\"Hello Saga\");\n//     }\n// }\n\n\nfunction* helloSaga() {\n    //yield take(HELLO_SAGA);\n    //yield takeLatest(HELLO_SAGA, hello);\n    console.log(\"Before Saga\");\n    while(true) {\n        yield take(HELLO_SAGA);\n    console.log(\"Hello Saga\");\n    }\n}\n\nfunction* watchHello() {\n    yield takeLatest(HELLO_SAGA, function*() {\n        yield delay( 1000 );\n        yield put({\n            type: 'BYE_SAGA'\n        });\n    });\n}"]},"metadata":{},"sourceType":"module"}