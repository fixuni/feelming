{"ast":null,"code":"var _jsxFileName = \"/app/frontend/containers/PostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect, useRef } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_POST_REQUEST, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE } from '../reducers/post';\n\nvar PostForm = function PostForm() {\n  //const { imagePaths } = useSelector( state => state.post);\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      isAddingPost = _useSelector.isAddingPost,\n      postAdded = _useSelector.postAdded;\n\n  var imageInput = useRef();\n  useEffect(function () {\n    if (postAdded) {\n      setText('');\n    }\n  }, [postAdded]);\n  var onSubmitForm = useCallback(function (e) {\n    e.preventDefault(); ///  안 넣으면 새 페이지로 넘어감\n\n    if (!text && !text.trim()) {\n      return alert('게시글을 작성하세요');\n    }\n\n    var formData = new FormData();\n    imagePaths.forEach(function (i) {\n      formData.append('image', i);\n    });\n    formData.append('content', text);\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData\n    });\n  }, [text, imagePaths]); //const [id, setId ] = useState('');\n\n  var onChangeText = useCallback(function (e) {\n    // e.preventDefault();\n    setText(e.target.value);\n  }, []);\n  var onChangeImages = useCallback(function (e) {\n    console.log(e.target.files);\n    var imageFormData = new FormData();\n    [].forEach.call(e.target.files, function (f) {\n      imageFormData.append('image', f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  }, []);\n  var onClickImageUpload = useCallback(function () {\n    console.log(\"imageInput.current : \", imageInput.current);\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var onRemoveImage = useCallback(function (index) {\n    return function () {\n      dispatch({\n        type: REMOVE_IMAGE,\n        index: index\n      });\n    };\n  }, []);\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onSubmit: onSubmitForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(Input.TextArea, {\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    value: text,\n    onChange: onChangeText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    onChange: onChangeImages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \" \\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      \"float\": 'right'\n    },\n    htmlType: \"submit\",\n    isloading: isAddingPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"\\uC0C9\\uC0C9\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, imagePaths.map(function (v, i) {\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        display: 'inline-block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: \"http://localhost:3065/\".concat(v),\n      style: {\n        width: '200px'\n      },\n      alt: v,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, __jsx(Button, {\n      onClick: onRemoveImage(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"\\uC81C\\uAC70\")));\n  })));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["/app/frontend/containers/PostForm.js"],"names":["React","useCallback","useState","useEffect","useRef","Form","Input","Button","useSelector","useDispatch","ADD_POST_REQUEST","UPLOAD_IMAGES_REQUEST","REMOVE_IMAGE","PostForm","dispatch","text","setText","state","post","imagePaths","isAddingPost","postAdded","imageInput","onSubmitForm","e","preventDefault","trim","alert","formData","FormData","forEach","i","append","type","data","onChangeText","target","value","onChangeImages","console","log","files","imageFormData","call","f","onClickImageUpload","current","click","onRemoveImage","index","margin","map","v","display","width"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect, useRef} from 'react';\nimport { Form, Input, Button} from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_POST_REQUEST, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE } from '../reducers/post';\n\n\n\nconst PostForm = () => {\n    //const { imagePaths } = useSelector( state => state.post);\n    const dispatch = useDispatch();\n    const [ text, setText ] = useState('');\n    const { imagePaths, isAddingPost, postAdded } = useSelector( state => state.post );\n    const imageInput = useRef();\n\n    useEffect( () => {\n        if (postAdded) {\n            setText('');\n        }\n    }, [postAdded]);\n\n    \n    const onSubmitForm = useCallback( (e) => {\n        e.preventDefault();   ///  안 넣으면 새 페이지로 넘어감\n        if (!text && !text.trim()) {\n            return alert('게시글을 작성하세요');\n        }\n\n        const formData = new FormData();\n        imagePaths.forEach((i) => {\n            formData.append('image', i);\n        });\n        formData.append('content', text);\n        dispatch({\n            type: ADD_POST_REQUEST,\n            data: formData,\n        });\n    }, [text, imagePaths]);\n\n    //const [id, setId ] = useState('');\n    const onChangeText = useCallback( (e) => {\n       // e.preventDefault();\n        setText(e.target.value);\n    }, []);\n\n    const onChangeImages = useCallback( (e) => {\n        console.log(e.target.files);\n        const imageFormData = new FormData();\n        [].forEach.call(e.target.files, (f) => {\n            imageFormData.append( 'image', f);\n        });\n        dispatch({\n            type: UPLOAD_IMAGES_REQUEST,\n            data: imageFormData,\n        });\n    }, []);\n\n    const onClickImageUpload = useCallback(() => {\n        console.log(\"imageInput.current : \", imageInput.current);\n        imageInput.current.click();\n    }, [imageInput.current]);\n\n    const onRemoveImage = useCallback( (index) => () => {\n        dispatch({\n            type : REMOVE_IMAGE,\n            index,\n        });\n    }, []);\n\n    return (\n        <Form style={{ margin: '10px 0 20px'  }} encType=\"multipart/form-data\" onSubmit={onSubmitForm}>\n            <Input.TextArea maxLength={140} placeholder=\"어떤 신기한 일이 있었나요?\" value={text} onChange={onChangeText}/>\n            <div>\n                <input type=\"file\" multiple hidden ref={imageInput} onChange={onChangeImages} />\n                <Button onClick={onClickImageUpload}> 이미지 업로드</Button>\n                <Button type=\"primary\" style={{ float: 'right'}} htmlType=\"submit\" isloading={isAddingPost}>색색</Button>\n            </div>\n            <div>\n                {imagePaths.map( (v, i) => (\n                        <div key={v} style={{ display: 'inline-block'}}>\n                            <img src={`http://localhost:3065/${v}` } style={{ width: '200px' }} alt={v} />\n                            <div>\n                                <Button onClick={onRemoveImage(i)}>제거</Button>\n                            </div>\n                        </div>\n                    )\n                )}\n            </div>\n        </Form>\n    );\n};\n\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}