{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useCallback, useState } from 'react';\nimport { Form, Button, List, Card, Icon, Input } from 'antd';\nimport PostCard from '../containers/PostCard';\nimport { useDispatch, useSelector } from 'react-redux';\nimport NicknameEditForm from '../containers/NicknameEditForm';\nimport FollowList from '../components/FollowList';\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, UNFOLLOW_USER_REQUEST, REMOVE_FOLLOWER_REQUEST } from '../reducers/user';\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const {\n    me,\n    followerList,\n    followingList,\n    hasMoreFollower,\n    hasMoreFollowing\n  } = useSelector(state => state.user);\n  const {\n    mainPosts\n  } = useSelector(state => state.post); // useEffect ( () => {\n  //     if (me) {\n  //     }\n  // }, [me && me.id ]);\n\n  const onUnfollow = useCallback(userId => () => {\n    dispatch({\n      type: UNFOLLOW_USER_REQUEST,\n      data: userId\n    });\n  }, []);\n  const onRemoveFollower = useCallback(userId => () => {\n    dispatch({\n      type: REMOVE_FOLLOWER_REQUEST,\n      data: userId\n    });\n  }, []);\n  const loadMoreFollowings = useCallback(() => {\n    dispatch({\n      type: LOAD_FOLLOWINGS_REQUEST,\n      offset: followingList.length\n    });\n  }, [followingList.length]);\n  const loadMoreFollowers = useCallback(() => {\n    dispatch({\n      type: LOAD_FOLLOWERS_REQUEST,\n      offset: followerList.length\n    });\n  }, [followerList.length]);\n  return __jsx(\"div\", null, __jsx(NicknameEditForm, null), __jsx(FollowList, {\n    header: \"\\uD314\\uB85C\\uC789 \\uBAA9\\uB85D\",\n    hasMore: hasMoreFollowing,\n    onClickMore: loadMoreFollowings,\n    data: followingList,\n    onClickStop: onUnfollow\n  }), __jsx(FollowList, {\n    header: \"\\uD314\\uB85C\\uC6CC \\uBAA9\\uB85D\",\n    hasMore: hasMoreFollower,\n    onClickMore: loadMoreFollowers,\n    data: followerList,\n    onClickStop: onUnfollow\n  }), __jsx(\"div\", null, mainPosts.map(c => __jsx(PostCard, {\n    key: +c.createdAt,\n    post: c\n  }))));\n};\n\nProfile.getInitialProps = async context => {\n  const state = context.store.getState(); // 이 직전에 LOAD_USERS_REQUEST  가 완료돼야함\n  // 따라서 me = null 이면 나로 인식하게 아래 reducer 를 처리하다\n\n  context.store.dispatch({\n    type: LOAD_FOLLOWERS_REQUEST,\n    data: state.user.me && state.user.me.id\n  });\n  context.store.dispatch({\n    type: LOAD_FOLLOWINGS_REQUEST,\n    data: state.user.me && state.user.me.id\n  });\n  context.store.dispatch({\n    type: LOAD_USER_POSTS_REQUEST,\n    data: state.user.me && state.user.me.id\n  });\n};\n\nexport default Profile;","map":{"version":3,"sources":["/app/frontend/pages/profile.js"],"names":["React","useEffect","useCallback","useState","Form","Button","List","Card","Icon","Input","PostCard","useDispatch","useSelector","NicknameEditForm","FollowList","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWINGS_REQUEST","UNFOLLOW_USER_REQUEST","REMOVE_FOLLOWER_REQUEST","LOAD_USER_POSTS_REQUEST","Profile","dispatch","me","followerList","followingList","hasMoreFollower","hasMoreFollowing","state","user","mainPosts","post","onUnfollow","userId","type","data","onRemoveFollower","loadMoreFollowings","offset","length","loadMoreFollowers","map","c","createdAt","getInitialProps","context","store","getState","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useState } from 'react';\nimport { Form, Button, List, Card, Icon, Input } from 'antd';\nimport PostCard from '../containers/PostCard';\nimport { useDispatch, useSelector } from 'react-redux';\nimport NicknameEditForm from '../containers/NicknameEditForm';\nimport FollowList from '../components/FollowList';\n\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, UNFOLLOW_USER_REQUEST, \n    REMOVE_FOLLOWER_REQUEST } from '../reducers/user';\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\n \n\nconst Profile = () => {\n    const dispatch = useDispatch();\n    const { me, followerList, followingList, hasMoreFollower, hasMoreFollowing } = useSelector( state => state.user );\n    const { mainPosts,  } = useSelector ( state => state.post );\n    // useEffect ( () => {\n    //     if (me) {\n    //     }\n    // }, [me && me.id ]);\n\n    const onUnfollow = useCallback(userId => () => {\n        dispatch({\n            type: UNFOLLOW_USER_REQUEST,\n            data: userId,\n        });\n    }, []);\n\n    const onRemoveFollower = useCallback( userId => () => {\n        dispatch({\n            type: REMOVE_FOLLOWER_REQUEST,\n            data: userId,\n        });\n    }, []);\n\n    const loadMoreFollowings = useCallback( () => {\n        dispatch({\n            type: LOAD_FOLLOWINGS_REQUEST,\n            offset: followingList.length,\n        });\n    }, [followingList.length])\n\n    const loadMoreFollowers = useCallback( () => {\n        dispatch({\n            type: LOAD_FOLLOWERS_REQUEST,\n            offset: followerList.length,\n        });\n    }, [followerList.length]);\n\n    return (\n    <div>\n        <NicknameEditForm />\n        <FollowList\n            header=\"팔로잉 목록\"\n            hasMore={hasMoreFollowing}\n            onClickMore={loadMoreFollowings}\n            data={followingList}\n            onClickStop={onUnfollow}\n        />\n        <FollowList\n            header=\"팔로워 목록\"\n            hasMore={hasMoreFollower}\n            onClickMore={loadMoreFollowers}\n            data={followerList}\n            onClickStop={onUnfollow}\n        />\n        <div>\n            {mainPosts.map(c => (\n                <PostCard key={+c.createdAt} post={c} />\n            ))}\n        </div>\n    </div>\n    );\n};\n\nProfile.getInitialProps = async (context) => {\n    const state = context.store.getState();\n    // 이 직전에 LOAD_USERS_REQUEST  가 완료돼야함\n    // 따라서 me = null 이면 나로 인식하게 아래 reducer 를 처리하다\n    context.store.dispatch({\n            type: LOAD_FOLLOWERS_REQUEST,\n            data: state.user.me && state.user.me.id,\n    });\n    context.store.dispatch({\n            type: LOAD_FOLLOWINGS_REQUEST,\n            data: state.user.me && state.user.me.id,\n    });\n    context.store.dispatch({\n            type: LOAD_USER_POSTS_REQUEST,\n            data: state.user.me && state.user.me.id,\n    });\n}\nexport default Profile;"]},"metadata":{},"sourceType":"module"}