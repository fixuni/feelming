{"ast":null,"code":"var _jsxFileName = \"/Users/mac/work/feelming/frontend/components/PostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_POST_SUCCESS, ADD_POST_REQUEST } from '../reducers/post';\n\nconst PostForm = () => {\n  //const { imagePaths } = useSelector( state => state.post);\n  const dispatch = useDispatch();\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const {\n    imagePaths,\n    isAddingPost,\n    postAdded\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    if (postAdded) {\n      setText('');\n    }\n  }, [postAdded]);\n  const onSubmitForm = useCallback(e => {\n    e.preventDefault(); ///  안 넣으면 새 페이지로 넘어감\n\n    if (!text && !text.trim()) {\n      return alert('게시글을 작성하세요');\n    }\n\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        content: text.trim()\n      }\n    });\n    console.log('onSubmitForm() text : ', text);\n  }, [text]); //const [id, setId ] = useState('');\n\n  const onChangeText = useCallback(e => {\n    // e.preventDefault();\n    setText(e.target.value);\n  }, []);\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onSubmit: onSubmitForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(Input.TextArea, {\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    value: text,\n    onChange: onChangeText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(Input, {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), __jsx(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \" \\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      float: 'right'\n    },\n    htmlType: \"submit\",\n    isLoading: isAddingPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"\\uC0C9\\uC0C9\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, imagePaths.map((v, i) => __jsx(\"div\", {\n    key: v,\n    style: {\n      display: 'inline-block'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: `http://localhsot:3065/${v}`,\n    style: {\n      width: '200px',\n      height: '100px'\n    },\n    alt: v,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"\\uC81C\\uAC70\"))))));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["/Users/mac/work/feelming/frontend/components/PostForm.js"],"names":["React","useCallback","useState","useEffect","Form","Input","Button","useSelector","useDispatch","ADD_POST_SUCCESS","ADD_POST_REQUEST","PostForm","dispatch","text","setText","imagePaths","isAddingPost","postAdded","state","post","onSubmitForm","e","preventDefault","trim","alert","type","data","content","console","log","onChangeText","target","value","margin","float","map","v","i","display","width","height"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect} from 'react';\nimport { Form, Input, Button} from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_POST_SUCCESS, ADD_POST_REQUEST } from '../reducers/post';\n\n\n\nconst PostForm = () => {\n    //const { imagePaths } = useSelector( state => state.post);\n    const dispatch = useDispatch();\n    const [ text, setText ] = useState('');\n    const { imagePaths, isAddingPost, postAdded } = useSelector( state => state.post );\n\n    useEffect( () => {\n        if (postAdded) {\n            setText('');\n        }\n    }, [postAdded]);\n\n    \n    const onSubmitForm = useCallback( (e) => {\n        e.preventDefault();   ///  안 넣으면 새 페이지로 넘어감\n        if (!text && !text.trim()) {\n            return alert('게시글을 작성하세요');\n        }\n        dispatch({\n            type: ADD_POST_REQUEST,\n            data: {\n                content: text.trim(),\n            },\n        });\n        console.log('onSubmitForm() text : ', text);\n    }, [text]);\n\n    //const [id, setId ] = useState('');\n    const onChangeText = useCallback( (e) => {\n       // e.preventDefault();\n        setText(e.target.value);\n    }, []);\n\n    return (\n        <Form style={{ margin: '10px 0 20px'  }} encType=\"multipart/form-data\" onSubmit={onSubmitForm}>\n            <Input.TextArea maxLength={140} placeholder=\"어떤 신기한 일이 있었나요?\" value={text} onChange={onChangeText}/>\n            <div>\n                <Input type=\"file\" multiple hidden />\n                <Button> 이미지 업로드</Button>\n                <Button type=\"primary\" style={{ float: 'right'}} htmlType=\"submit\" isLoading={isAddingPost}>색색</Button>\n            </div>\n            <div>\n                {imagePaths.map( (v, i) => (\n                    \n                        <div key={v} style={{ display: 'inline-block'}}>\n                            <img src={`http://localhsot:3065/${v}` } style={{ width: '200px', height: '100px' }} alt={v} />\n                            <div>\n                                <Button>제거</Button>\n                            </div>\n                        </div>\n                    )\n                )}\n            </div>\n        </Form>\n    );\n};\n\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}