{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport Helmet from 'react-helmet';\nimport { LOAD_POST_REQUEST } from '../reducers/post';\n\nconst SingePost = ({\n  id\n}) => {\n  const {\n    singlePost\n  } = useSelector(state => state.post);\n  return __jsx(React.Fragment, null, __jsx(Helmet, {\n    title: `${singlePost.User.nickname}님의 글`,\n    description: singlePost.content,\n    meta: [{\n      name: 'description',\n      content: singlePost.content\n    }, {\n      property: 'og:title',\n      content: `${singlePost.User.nickname}님의 게시글`\n    }, {\n      property: 'og:description',\n      content: singlePost.content\n    }, {\n      property: 'og:image',\n      content: singlePost.Images[0] && `http://localhost:3065/${singlePost.Images[0].src}`\n    }, {\n      property: 'og:url',\n      content: `http://localhost:3060/post/${id}`\n    }]\n  }), __jsx(\"div\", null, singlePost.content), __jsx(\"div\", null, singlePost.User.nickname), __jsx(\"div\", null, singlePost.Images[0] && __jsx(\"img\", {\n    src: `http://localhost:3065/${singlePost.Images[0].src}`\n  })));\n};\n\nSingePost.getInitialProps = async context => {\n  console.log(\" check InitialProps context.query.id : \", context.query.id);\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: context.query.id\n  });\n  return {\n    id: _parseInt(context.query.id, 10)\n  };\n};\n\nexport default SingePost;","map":{"version":3,"sources":["/app/frontend/pages/singlePost.js"],"names":["React","useSelector","Helmet","LOAD_POST_REQUEST","SingePost","id","singlePost","state","post","User","nickname","content","name","property","Images","src","getInitialProps","context","console","log","query","store","dispatch","type","data"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;;AAEA,MAAMC,SAAS,GAAG,CAAE;AAAEC,EAAAA;AAAF,CAAF,KAAa;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAiBL,WAAW,CAAEM,KAAK,IAAIA,KAAK,CAACC,IAAjB,CAAlC;AACA,SACI,4BACI,MAAC,MAAD;AACI,IAAA,KAAK,EAAG,GAAEF,UAAU,CAACG,IAAX,CAAgBC,QAAS,MADvC;AAEI,IAAA,WAAW,EAAEJ,UAAU,CAACK,OAF5B;AAGI,IAAA,IAAI,EAAE,CAAC;AACHC,MAAAA,IAAI,EAAE,aADH;AACkBD,MAAAA,OAAO,EAAEL,UAAU,CAACK;AADtC,KAAD,EAEJ;AACEE,MAAAA,QAAQ,EAAE,UADZ;AACwBF,MAAAA,OAAO,EAAG,GAAEL,UAAU,CAACG,IAAX,CAAgBC,QAAS;AAD7D,KAFI,EAIJ;AACEG,MAAAA,QAAQ,EAAE,gBADZ;AAC8BF,MAAAA,OAAO,EAAEL,UAAU,CAACK;AADlD,KAJI,EAMJ;AACEE,MAAAA,QAAQ,EAAE,UADZ;AACwBF,MAAAA,OAAO,EAAEL,UAAU,CAACQ,MAAX,CAAkB,CAAlB,KAAyB,yBAAwBR,UAAU,CAACQ,MAAX,CAAkB,CAAlB,EAAqBC,GAAI;AAD3G,KANI,EAQJ;AACEF,MAAAA,QAAQ,EAAE,QADZ;AACsBF,MAAAA,OAAO,EAAG,8BAA6BN,EAAG;AADhE,KARI;AAHV,IADJ,EAgBI,mBAAMC,UAAU,CAACK,OAAjB,CAhBJ,EAiBI,mBAAML,UAAU,CAACG,IAAX,CAAgBC,QAAtB,CAjBJ,EAkBI,mBACKJ,UAAU,CAACQ,MAAX,CAAkB,CAAlB,KAAwB;AAAK,IAAA,GAAG,EAAG,yBAAwBR,UAAU,CAACQ,MAAX,CAAkB,CAAlB,EAAqBC,GAAI;AAA5D,IAD7B,CAlBJ,CADJ;AAwBH,CA1BD;;AA4BAX,SAAS,CAACY,eAAV,GAA4B,MAAOC,OAAP,IAAmB;AAC3CC,EAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ,EAAuDF,OAAO,CAACG,KAAR,CAAcf,EAArE;AACAY,EAAAA,OAAO,CAACI,KAAR,CAAcC,QAAd,CAAuB;AACnBC,IAAAA,IAAI,EAAEpB,iBADa;AAEnBqB,IAAAA,IAAI,EAAEP,OAAO,CAACG,KAAR,CAAcf;AAFD,GAAvB;AAIA,SAAO;AAAEA,IAAAA,EAAE,EAAE,UAASY,OAAO,CAACG,KAAR,CAAcf,EAAvB,EAA2B,EAA3B;AAAN,GAAP;AACH,CAPD;;AAaA,eAAeD,SAAf","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { LOAD_POST_REQUEST } from '../reducers/post';\n\nconst SingePost = ( { id }) => {\n    const { singlePost } = useSelector( state => state.post );\n    return (\n        <>\n            <Helmet\n                title={`${singlePost.User.nickname}님의 글`}\n                description={singlePost.content}\n                meta={[{\n                    name: 'description', content: singlePost.content,\n                },{\n                    property: 'og:title', content: `${singlePost.User.nickname}님의 게시글`,\n                },{\n                    property: 'og:description', content: singlePost.content,\n                },{\n                    property: 'og:image', content: singlePost.Images[0] && `http://localhost:3065/${singlePost.Images[0].src}`,\n                },{\n                    property: 'og:url', content: `http://localhost:3060/post/${id}`,\n                }]}\n            />\n            <div>{singlePost.content}</div> \n            <div>{singlePost.User.nickname}</div>\n            <div>\n                {singlePost.Images[0] && <img src={`http://localhost:3065/${singlePost.Images[0].src}`} />}\n            </div>\n        </>\n    );\n};\n\nSingePost.getInitialProps = async (context) => {\n    console.log(\" check InitialProps context.query.id : \", context.query.id);\n    context.store.dispatch({\n        type: LOAD_POST_REQUEST,\n        data: context.query.id,\n    });\n    return { id: parseInt(context.query.id, 10)}\n};\n\nSingePost.propTypes = {\n    id: PropTypes.number.isRequired,\n}\n\nexport default SingePost;"]},"metadata":{},"sourceType":"module"}