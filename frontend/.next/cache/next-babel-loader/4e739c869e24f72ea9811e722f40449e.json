{"ast":null,"code":"var _jsxFileName = \"/app/frontend/components/PostImages.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'antd';\nimport ImagesZoom from './ImagesZoom';\n\nconst PostImages = ({\n  images\n}) => {\n  const {\n    0: showImagesZoom,\n    1: setShowImagesZoom\n  } = useState(false);\n  const onZoom = useCallback(() => {\n    setShowImagesZoom(true);\n  }, []);\n  const onClose = useCallback(() => {\n    setShowImagesZoom(false);\n  }, []);\n\n  if (images.length === 1) {\n    return __jsx(React.Fragment, null, __jsx(\"img\", {\n      src: `http://localhost:3065/${images[0].src}`,\n      onClick: onZoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), showImagesZoom && __jsx(ImagesZoom, {\n      images: images,\n      onClose: onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }));\n  }\n\n  if (images.length === 2) {\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: `http://localhost:3065/${images[0].src}`,\n      width: \"50%\",\n      onClick: onZoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), __jsx(\"img\", {\n      src: `http://localhost:3065/${images[1].src}`,\n      width: \"50%\",\n      onClick: onZoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })), showImagesZoom && __jsx(ImagesZoom, {\n      images: images,\n      onClose: onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }));\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: `http://localhost:3065/${images[0].src}`,\n    width: \"50%\",\n    onClick: onZoom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    style: {\n      display: 'inline-block',\n      width: '50%',\n      textAlign: 'center',\n      verticalAlign: 'middle'\n    },\n    onClick: onZoom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(Icon, {\n    type: \"plus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), images.length - 1, \"\\uAC1C\\uC758 \\uC0AC\\uC9C4 \\uB354\\uBCF4\\uAE30\")), showImagesZoom && __jsx(ImagesZoom, {\n    images: images,\n    onClose: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }));\n};\n\nPostImages.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string\n  })).isRequired\n};\nexport default PostImages;","map":{"version":3,"sources":["/app/frontend/components/PostImages.js"],"names":["React","useCallback","useState","PropTypes","Icon","ImagesZoom","PostImages","images","showImagesZoom","setShowImagesZoom","onZoom","onClose","length","src","display","width","textAlign","verticalAlign","propTypes","arrayOf","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'antd';\nimport ImagesZoom from './ImagesZoom';\n\nconst PostImages = ({ images }) => {\n    const [showImagesZoom, setShowImagesZoom] = useState(false);\n    const onZoom = useCallback( () => {\n        setShowImagesZoom(true);\n    }, []);\n\n    const onClose = useCallback( () => {\n        setShowImagesZoom(false);\n    }, []);\n\n    if (images.length === 1) {\n        return (\n            <>\n            <img src={`http://localhost:3065/${images[0].src}`} onClick={onZoom} />\n            {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\n            </>\n        )\n    }\n    if (images.length === 2) {\n        return (\n            <>\n            <div>\n                <img src={`http://localhost:3065/${images[0].src}`} width=\"50%\" onClick={onZoom} />\n                <img src={`http://localhost:3065/${images[1].src}`} width=\"50%\" onClick={onZoom}/>\n            </div>\n            {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\n            </>\n        )\n    }\n    return (\n        <>\n        <div>\n            <img src={`http://localhost:3065/${images[0].src}`} width=\"50%\" onClick={onZoom} />\n            <div style={{ display: 'inline-block', width: '50%', textAlign: 'center', verticalAlign: 'middle' }} onClick={onZoom}>\n                <Icon type=\"plus\" />\n                <br />\n                {images.length - 1}\n                개의 사진 더보기\n            </div>\n        </div>\n        {showImagesZoom && <ImagesZoom images={images}  onClose={onClose}/>}\n        </>\n    ) \n}\n\nPostImages.propTypes = {\n    images: PropTypes.arrayOf(PropTypes.shape({\n        src: PropTypes.string,\n\n    })).isRequired,\n}\n\nexport default PostImages;"]},"metadata":{},"sourceType":"module"}