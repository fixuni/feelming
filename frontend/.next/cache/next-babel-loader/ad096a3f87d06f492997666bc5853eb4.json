{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/app/frontend/pages/_app.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Head from 'next/head';\nimport Helmet from 'react-helmet';\nimport App, { Container } from 'next/app';\nimport PropTypes from 'prop-types';\nimport AppLayout from '../components/AppLayout';\nimport reducer from '../reducers';\nimport withRedux from 'next-redux-wrapper';\nimport withReduxSaga from 'next-redux-saga';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\nimport { Provider } from 'react-redux';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { initialState } from '../reducers/user';\nimport { composeWithDevTools } from 'remote-redux-devtools';\nimport axios from 'axios';\nimport { LOAD_USER_REQUEST } from '../reducers/user'; // class Feelming extends App {\n//     static getInitialProps(content) {\n//     }\n//     render() {\n//     }\n// }\n\nvar Feelming = function Feelming(_ref) {\n  var Component = _ref.Component,\n      store = _ref.store,\n      pageProps = _ref.pageProps;\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(Helmet, {\n    title: \"Feelming\",\n    htmlAttributes: {\n      lang: 'ko'\n    },\n    meta: [{\n      charset: 'UTF-8'\n    }, {\n      name: 'viewport',\n      content: 'width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=yes,viewport-fit=cover'\n    }, {\n      'http-equiv': 'X-UA-Compatible',\n      content: 'IE=edge'\n    }, {\n      name: 'description',\n      content: 'Feelming SNS'\n    }, {\n      name: 'og:title',\n      content: 'Feelming'\n    }, {\n      name: 'og:description',\n      content: 'Feelming SNS'\n    }, {\n      property: 'og:type',\n      content: 'website'\n    }],\n    link: [{\n      rel: 'shortcut icon',\n      href: '/favicon.png'\n    }, {\n      rel: 'stylesheet',\n      href: 'https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.css'\n    }, {\n      rel: 'stylesheet',\n      href: 'https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css'\n    }, {\n      rel: 'stylesheet',\n      href: 'https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), __jsx(AppLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(Component, _extends({}, pageProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })))));\n};\n\nFeelming.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  store: PropTypes.object.isRequired,\n  pageProps: PropTypes.object.isRequired\n};\n\nFeelming.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var ctx, Component, pageProps, state, cookie;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            //console.log(context);\n            ctx = context.ctx, Component = context.Component;\n            pageProps = {};\n            state = ctx.store.getState(); // 로그인 정보 호출하는 부분\n\n            cookie = ctx.isServer ? ctx.req.headers.cookies : '';\n\n            if (ctx.isServer && cookie) {\n              axios.defaults.headers.Cookie = cookie;\n            }\n\n            if (!state.user.me) {\n              ctx.store.dispatch({\n                type: LOAD_USER_REQUEST\n              });\n            } // 메인 포스트 가져오는 부분\n\n\n            if (!Component.getInitialProps) {\n              _context.next = 13;\n              break;\n            }\n\n            _context.next = 9;\n            return context.Component.getInitialProps(ctx);\n\n          case 9:\n            _context.t0 = _context.sent;\n\n            if (_context.t0) {\n              _context.next = 12;\n              break;\n            }\n\n            _context.t0 = {};\n\n          case 12:\n            pageProps = _context.t0;\n\n          case 13:\n            return _context.abrupt(\"return\", {\n              pageProps: pageProps\n            });\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar configureStore = function configureStore(initialState, options) {\n  var sagaMiddleware = createSagaMiddleware(); //const middlewares = [sagaMiddleware];\n\n  var middlewares = [sagaMiddleware, function (store) {\n    return function (next) {\n      return function (action) {\n        // saga log 파일 보기\n        //    console.log(action);\n        next(action);\n      };\n    };\n  }];\n  var enhancer = process.env.NODE_DEV === 'production' ? compose(applyMiddleware.apply(void 0, middlewares)) : compose(applyMiddleware.apply(void 0, middlewares), // typeof window !== 'undefined'\n  !options.isServer && window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : function (f) {\n    return f;\n  });\n  var store = createStore(reducer, initialState, enhancer); //sagaMiddleware.run(rootSaga);\n\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default withRedux(configureStore)(withReduxSaga(Feelming)); // _document.js      html, head, body\n// _app.js           root\n// pages             실제 컴포넌트\n//  _error.js    \n\n/*\n// curring 기법,  인자를 넣어주고 결과로 함수를 받음\nconst middlewares = (store) => (next) => (action) => {\n   console.log(action);\n   next(action);\n}\nconst hoc = (mapStateToProps) => (Component) => () => {\n   console.log(\"I am hoc\");\n   return (\n       <Component props={mapStateToProps()} />\n   )\n}\n \n// 하이 오더 컴포넌트\nhoc(Component)\nconnect(mapStateToProps)(Component);\n*/","map":null,"metadata":{},"sourceType":"module"}