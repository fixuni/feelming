{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/app/frontend/pages/_app.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Head from 'next/head';\nimport Helmet from 'react-helmet';\nimport App, { Container } from 'next/app';\nimport PropTypes from 'prop-types';\nimport AppLayout from '../components/AppLayout';\nimport reducer from '../reducers';\nimport withRedux from 'next-redux-wrapper';\nimport withReduxSaga from 'next-redux-saga';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\nimport { Provider } from 'react-redux';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { initialState } from '../reducers/user';\nimport { composeWithDevTools } from 'remote-redux-devtools';\nimport axios from 'axios';\nimport { LOAD_USER_REQUEST } from '../reducers/user'; // class Feelming extends App {\n//     static getInitialProps(content) {\n//     }\n//     render() {\n//     }\n// }\n\nconst Feelming = ({\n  Component,\n  store,\n  pageProps\n}) => {\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(Helmet, {\n    title: \"Feelming\",\n    htmlAttributes: {\n      lang: 'ko'\n    },\n    meta: [{\n      charset: 'UTF-8'\n    }, {\n      name: 'viewport',\n      content: 'width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=yes,viewport-fit=cover'\n    }, {\n      'http-equiv': 'X-UA-Compatible',\n      content: 'IE=edge'\n    }, {\n      name: 'description',\n      content: 'Feelming SNS'\n    }, {\n      name: 'og:title',\n      content: 'Feelming'\n    }, {\n      name: 'og:description',\n      content: 'Feelming SNS'\n    }, {\n      property: 'og:type',\n      content: 'website'\n    }],\n    link: [{\n      rel: 'shortcut icon',\n      href: '/favicon.png'\n    }, {\n      rel: 'stylesheet',\n      href: 'https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.css'\n    }, {\n      rel: 'stylesheet',\n      href: 'https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css'\n    }, {\n      rel: 'stylesheet',\n      href: 'https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), __jsx(AppLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(Component, _extends({}, pageProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })))));\n};\n\nFeelming.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  store: PropTypes.object.isRequired,\n  pageProps: PropTypes.object.isRequired\n};\n\nFeelming.getInitialProps = async context => {\n  //console.log(context);\n  const {\n    ctx,\n    Component\n  } = context;\n  let pageProps = {};\n  const state = ctx.store.getState(); // 로그인 정보 호출하는 부분\n\n  const cookie = ctx.isServer ? ctx.req.headers.cookies : '';\n\n  if (ctx.isServer && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  if (!state.user.me) {\n    ctx.store.dispatch({\n      type: LOAD_USER_REQUEST\n    });\n  } // 메인 포스트 가져오는 부분\n\n\n  if (Component.getInitialProps) {\n    pageProps = (await context.Component.getInitialProps(ctx)) || {};\n  }\n\n  return {\n    pageProps\n  };\n};\n\nconst configureStore = (initialState, options) => {\n  const sagaMiddleware = createSagaMiddleware(); //const middlewares = [sagaMiddleware];\n\n  const middlewares = [sagaMiddleware, store => next => action => {\n    // saga log 파일 보기\n    //    console.log(action);\n    next(action);\n  }];\n  const enhancer = process.env.NODE_DEV === 'production' ? compose(applyMiddleware(...middlewares)) : compose(applyMiddleware(...middlewares), // typeof window !== 'undefined'\n  !options.isServer && window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f);\n  const store = createStore(reducer, initialState, enhancer); //sagaMiddleware.run(rootSaga);\n\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default withRedux(configureStore)(withReduxSaga(Feelming)); // _document.js      html, head, body\n// _app.js           root\n// pages             실제 컴포넌트\n//  _error.js    \n\n/*\n// curring 기법,  인자를 넣어주고 결과로 함수를 받음\nconst middlewares = (store) => (next) => (action) => {\n   console.log(action);\n   next(action);\n}\nconst hoc = (mapStateToProps) => (Component) => () => {\n   console.log(\"I am hoc\");\n   return (\n       <Component props={mapStateToProps()} />\n   )\n}\n \n// 하이 오더 컴포넌트\nhoc(Component)\nconnect(mapStateToProps)(Component);\n*/","map":{"version":3,"sources":["/app/frontend/pages/_app.js"],"names":["React","Component","Head","Helmet","App","Container","PropTypes","AppLayout","reducer","withRedux","withReduxSaga","createSagaMiddleware","rootSaga","Provider","createStore","compose","applyMiddleware","initialState","composeWithDevTools","axios","LOAD_USER_REQUEST","Feelming","store","pageProps","lang","charset","name","content","property","rel","href","propTypes","elementType","isRequired","object","getInitialProps","context","ctx","state","getState","cookie","isServer","req","headers","cookies","defaults","Cookie","user","me","dispatch","type","configureStore","options","sagaMiddleware","middlewares","next","action","enhancer","process","env","NODE_DEV","window","__REDUX_DEVTOOLS_EXTENSION__","f","sagaTask","run"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Head from 'next/head';\nimport Helmet from 'react-helmet';\nimport App, { Container } from 'next/app';\n\nimport PropTypes from 'prop-types';\nimport AppLayout from '../components/AppLayout';\nimport reducer from '../reducers';\nimport withRedux from 'next-redux-wrapper';\nimport withReduxSaga from 'next-redux-saga';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\nimport { Provider } from 'react-redux';\nimport {createStore, compose, applyMiddleware } from 'redux';\nimport { initialState } from '../reducers/user';\nimport { composeWithDevTools } from 'remote-redux-devtools';\nimport axios from 'axios';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\n\n// class Feelming extends App {\n//     static getInitialProps(content) {\n//     }\n//     render() {\n//     }\n// }\n\nconst Feelming = ({ Component, store, pageProps }) => {\n    return (\n        <Container>\n        <Provider store={store} >\n            <Helmet\n                title=\"Feelming\"\n                htmlAttributes={{ lang: 'ko' }}\n                meta={[{\n                    charset: 'UTF-8',\n                }, {\n                    name: 'viewport', \n                    content: 'width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=yes,viewport-fit=cover',\n                }, {\n                    'http-equiv': 'X-UA-Compatible', content: 'IE=edge',\n                }, {\n                    name: 'description', content: 'Feelming SNS',\n                }, {\n                    name: 'og:title', content: 'Feelming',\n                }, {\n                    name: 'og:description', content: 'Feelming SNS',\n                }, {\n                    property: 'og:type', content: 'website',\n                }]}\n                link={[{\n                    rel: 'shortcut icon', href: '/favicon.png',\n                    }, {\n                        rel: 'stylesheet', href: 'https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.css',\n                    }, {\n                        rel: 'stylesheet', href: 'https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css',\n                    }, {\n                        rel: 'stylesheet', href: 'https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css',\n                }]}\n            />\n            <AppLayout>\n                <Component {...pageProps} />\n            </AppLayout>\n        </Provider>\n        </Container>\n    );\n};\n\nFeelming.propTypes = {\n    Component: PropTypes.elementType.isRequired,\n    store: PropTypes.object.isRequired,\n    pageProps: PropTypes.object.isRequired,\n};\n\nFeelming.getInitialProps = async (context) => {\n    //console.log(context);\n    const { ctx, Component } = context;\n    let pageProps = {};\n    const state = ctx.store.getState();\n\n    // 로그인 정보 호출하는 부분\n    const cookie = ctx.isServer ?  ctx.req.headers.cookies : '';\n    if (ctx.isServer && cookie) {\n        axios.defaults.headers.Cookie = cookie;\n    }\n    if (!state.user.me) {\n        ctx.store.dispatch( {\n            type: LOAD_USER_REQUEST,\n        })\n    }\n    // 메인 포스트 가져오는 부분\n    if (Component.getInitialProps) {\n        pageProps = await context.Component.getInitialProps(ctx) || {};\n    }\n    \n    return { pageProps };\n};\n\nconst configureStore = (initialState, options ) => {\n    const sagaMiddleware = createSagaMiddleware();\n    //const middlewares = [sagaMiddleware];\n    const middlewares = [sagaMiddleware, (store) => (next) => (action) => {\n        // saga log 파일 보기\n        //    console.log(action);\n        next(action);\n    }];\n    const enhancer = process.env.NODE_DEV === 'production'\n        ? compose( applyMiddleware(...middlewares))\n        : compose(\n          applyMiddleware(...middlewares),   // typeof window !== 'undefined'\n          !options.isServer && window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f) => f,\n        );\n\n    const store = createStore(reducer, initialState, enhancer);\n    //sagaMiddleware.run(rootSaga);\n    store.sagaTask = sagaMiddleware.run(rootSaga);\n    return store;\n};\n\nexport default withRedux(configureStore)(withReduxSaga(Feelming));\n\n // _document.js      html, head, body\n // _app.js           root\n // pages             실제 컴포넌트\n\n //  _error.js    \n\n\n\n /*\n// curring 기법,  인자를 넣어주고 결과로 함수를 받음\nconst middlewares = (store) => (next) => (action) => {\n    console.log(action);\n    next(action);\n}\n\nconst hoc = (mapStateToProps) => (Component) => () => {\n    console.log(\"I am hoc\");\n    return (\n        <Component props={mapStateToProps()} />\n    )\n}\n\n \n// 하이 오더 컴포넌트\nhoc(Component)\nconnect(mapStateToProps)(Component);\n*/"]},"metadata":{},"sourceType":"module"}