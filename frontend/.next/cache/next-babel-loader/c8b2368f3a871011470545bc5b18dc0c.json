{"ast":null,"code":"var _jsxFileName = \"/app/frontend/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport PostCard from '../components/PostCard';\nimport PostForm from '../components/PostForm';\nimport { useDispatch, useSelector, connect } from 'react-redux';\nimport { LOAD_MAIN_POSTS_REQUEST } from '../reducers/post';\n\nvar Home = function Home() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts;\n\n  useEffect(function () {\n    dispatch({\n      type: LOAD_MAIN_POSTS_REQUEST\n    });\n  }, []);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, me && __jsx(PostForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), mainPosts.map(function (c, index) {\n    return __jsx(PostCard, {\n      key: index,\n      post: c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    });\n  }));\n}; // function mapStateToProps(state) {\n//     return {\n//         user: state.user,\n//     };\n// }\n// function mapDispatchToProps(dispatch) {\n//     return {\n//         login: () => dispatch(loginAction),\n//         logout: () => dispatch(logoutAction)\n//     };\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(Home);\n\n\nexport default Home;\n/*\n Docker 실행 명령어\n docker mysql 실행\n docker run --name mysql -e MYSQL_ROOT_PASSWORD=mypass -d -p 3306:3306 mysql\n\n\n mysql 컨테이너에 접속하기\n docker exec -it mysql /bin/bash\n\n mysql 데이터베이스에 접근하기\n mysql -u root -p password\n\n\n\n\n Nodejs 서버 + mysql 연결하여  실행 \n docker run -it -p 3060:3060 -p 3065:3065 --volume=$(pwd):/app/  --name web --link mysql-db  -d node  \n\n NodeJs 컨테이너에 접속하기 \n docker exec -it web /bin/bash\n\n mysql 컨테이너 접속 아이피 찾기\n docker inspect bridge\n\n 찾은 아이피를 백엔드 db 설정 파일에 적는다\n /backend/config/config.js\n\n 백엔드와 프런트 서버를 각각 가동한다.\n \n\n*/","map":{"version":3,"sources":["/app/frontend/pages/index.js"],"names":["React","useEffect","PostCard","PostForm","useDispatch","useSelector","connect","LOAD_MAIN_POSTS_REQUEST","Home","dispatch","state","user","me","post","mainPosts","type","map","c","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,OAAnC,QAAkD,aAAlD;AACA,SAASC,uBAAT,QAAwC,kBAAxC;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACf,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;;AADe,qBAEAC,WAAW,CAAE,UAAAK,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAP,CAFX;AAAA,MAEPC,EAFO,gBAEPA,EAFO;;AAAA,sBAGOP,WAAW,CAAE,UAAAK,KAAK;AAAA,WAAIA,KAAK,CAACG,IAAV;AAAA,GAAP,CAHlB;AAAA,MAGPC,SAHO,iBAGPA,SAHO;;AAKfb,EAAAA,SAAS,CAAE,YAAM;AACbQ,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAER;AADD,KAAD,CAAR;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKK,EAAE,IAAI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADX,EAEKE,SAAS,CAACE,GAAV,CAAe,UAACC,CAAD,EAAGC,KAAH,EAAa;AACzB,WACI,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,KAAf;AAAsB,MAAA,IAAI,EAAED,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH,GAJA,CAFL,CADJ;AAUH,CArBD,C,CAwBA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeT,IAAf;AAIA","sourcesContent":["import React, { useEffect } from 'react';\nimport PostCard from '../components/PostCard';\nimport PostForm from '../components/PostForm';\nimport { useDispatch, useSelector, connect } from 'react-redux';\nimport { LOAD_MAIN_POSTS_REQUEST } from '../reducers/post';\n\n\nconst Home = () => {\n    const dispatch = useDispatch();\n    const { me } = useSelector( state => state.user );\n    const { mainPosts } = useSelector( state => state.post );\n\n    useEffect( () => {\n        dispatch({\n            type: LOAD_MAIN_POSTS_REQUEST,\n        });\n    }, []);\n\n    return (\n        <div>\n            {me && <PostForm /> }\n            {mainPosts.map( (c,index) => {\n                return (\n                    <PostCard key={index} post={c} />\n                );\n            })}\n        </div>\n    );\n};\n\n\n// function mapStateToProps(state) {\n//     return {\n//         user: state.user,\n//     };\n// }\n\n// function mapDispatchToProps(dispatch) {\n//     return {\n//         login: () => dispatch(loginAction),\n//         logout: () => dispatch(logoutAction)\n//     };\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(Home);\n\nexport default Home;\n\n\n\n/*\n Docker 실행 명령어\n docker mysql 실행\n docker run --name mysql -e MYSQL_ROOT_PASSWORD=mypass -d -p 3306:3306 mysql\n\n\n mysql 컨테이너에 접속하기\n docker exec -it mysql /bin/bash\n\n mysql 데이터베이스에 접근하기\n mysql -u root -p password\n\n\n\n\n Nodejs 서버 + mysql 연결하여  실행 \n docker run -it -p 3060:3060 -p 3065:3065 --volume=$(pwd):/app/  --name web --link mysql-db  -d node  \n\n NodeJs 컨테이너에 접속하기 \n docker exec -it web /bin/bash\n\n mysql 컨테이너 접속 아이피 찾기\n docker inspect bridge\n\n 찾은 아이피를 백엔드 db 설정 파일에 적는다\n /backend/config/config.js\n\n 백엔드와 프런트 서버를 각각 가동한다.\n \n\n*/"]},"metadata":{},"sourceType":"module"}