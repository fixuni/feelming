{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/app/frontend/pages/user.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\nimport PostCard from '../components/PostCard';\nimport { Avatar, Card } from 'antd';\n\nvar User = function User(_ref) {\n  var id = _ref.id;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      userInfo = _useSelector2.userInfo;\n\n  useEffect(function () {\n    dispatch({\n      type: LOAD_USER_REQUEST,\n      data: id\n    });\n    dispatch({\n      type: LOAD_USER_POSTS_REQUEST,\n      data: id\n    });\n  }, []);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, userInfo ? __jsx(Card, {\n    action: [__jsx(\"div\", {\n      key: \"twit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"\\uC9F9\\uC9F9\", __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), userInfo.Posts), __jsx(\"div\", {\n      key: \"following\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"\\uD314\\uB85C\\uC789\", __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), userInfo.Followings), __jsx(\"div\", {\n      key: \"followers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"\\uD314\\uB85C\\uC6CC\", __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), userInfo.Followers)],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, userInfo.nickname[0]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })) : null, mainPosts.map(function (c) {\n    __jsx(PostCard, {\n      key: +c.createdAt,\n      post: c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    });\n  }));\n};\n\nUser.propTyps = {\n  id: PropTypes.number.isRequired\n};\n\nUser.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            User.log('hashtag getInitialProps', context.query.tag);\n            return _context.abrupt(\"return\", {\n              id: _parseInt(context.query.id, 10)\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default User;","map":{"version":3,"sources":["/app/frontend/pages/user.js"],"names":["React","useEffect","PropTypes","useDispatch","useSelector","LOAD_USER_POSTS_REQUEST","LOAD_USER_REQUEST","PostCard","Avatar","Card","User","id","dispatch","state","post","mainPosts","user","userInfo","type","data","Posts","Followings","Followers","nickname","map","c","createdAt","propTyps","number","isRequired","getInitialProps","context","log","query","tag"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {useDispatch, useSelector } from 'react-redux';\nimport {LOAD_USER_POSTS_REQUEST} from '../reducers/post';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\nimport PostCard from '../components/PostCard';\nimport { Avatar, Card } from 'antd';\n\nconst User = ( { id } ) => {\n  \n    const dispatch = useDispatch();\n    const {mainPosts } = useSelector( state => state.post );\n    const {userInfo } = useSelector( state => state.user );\n\n    useEffect( () => {\n        dispatch({\n            type: LOAD_USER_REQUEST,\n            data: id,\n        });\n        dispatch({\n            type: LOAD_USER_POSTS_REQUEST,\n            data: id,\n        });\n    }, []);\n    return (\n        <div>\n            {userInfo \n            ? <Card\n                action={[\n                    <div key='twit'>\n                        짹짹\n                        <br />\n                        {userInfo.Posts}\n                    </div>,\n                    <div key='following'>\n                        팔로잉\n                        <br />\n                        {userInfo.Followings}\n                    </div>,\n                    <div key=\"followers\">\n                        팔로워\n                        <br />\n                        {userInfo.Followers}\n                    </div>,\n                ]}\n                >\n                    <Card.Meta \n                        avatar={<Avatar>{userInfo.nickname[0]}</Avatar>}\n                    />\n            </Card>\n            : null }\n            {mainPosts.map( c => {\n                <PostCard key={+c.createdAt} post={c} />\n            })}\n        </div>\n    );\n}\n\nUser.propTyps = {\n    id: PropTypes.number.isRequired,\n}\n\nUser.getInitialProps = async (context) => {\n    User.log('hashtag getInitialProps', context.query.tag);\n    return { id: parseInt(context.query.id, 10) }\n};\n\n\nexport default User;"]},"metadata":{},"sourceType":"module"}