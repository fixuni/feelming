{"ast":null,"code":"var _jsxFileName = \"/app/frontend/pages/hashtag.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport PostCard from '../containers/PostCard';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../reducers/post';\n\nconst Hashtag = ({\n  tag\n}) => {\n  // console.log(\"tag : \", tag);\n  const dispatch = useDispatch();\n  const {\n    mainPosts,\n    hasMorePost\n  } = useSelector(state => state.post);\n  const onScroll = useCallback(() => {\n    if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n      if (hasMorePost) {\n        dispatch({\n          type: LOAD_HASHTAG_POSTS_REQUEST,\n          lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\n          data: tag\n        });\n      }\n    }\n\n    ;\n  }, [hasMorePost, mainPosts.length]);\n  useEffect(() => {\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      // 이렇게 해야 호출될때 아래가 실행됨, 본 컴포넌트 나갈때 실행됨\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length]); //  빈 deps [], 는 처음 로딩될때 한 번만 호출됨\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, mainPosts.map(c => __jsx(PostCard, {\n    key: c.id,\n    post: c,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })));\n};\n\nHashtag.propTypes = {\n  tag: PropTypes.string.isRequired\n};\n\nHashtag.getInitialProps = async context => {\n  const tag = context.query.tag; //console.log('hashtag getInitialProps', context.query.tag);\n\n  context.store.dispatch({\n    type: LOAD_HASHTAG_POSTS_REQUEST,\n    data: tag\n  });\n  return {\n    tag\n  };\n};\n\nexport default Hashtag;","map":null,"metadata":{},"sourceType":"module"}