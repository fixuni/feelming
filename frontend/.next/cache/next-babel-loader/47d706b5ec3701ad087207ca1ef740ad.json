{"ast":null,"code":"import { all, fork, put, takeLatest, delay } from 'redux-saga/effects';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, LOAD_MAIN_POSTS_REQUEST, LOAD_MAIN_POSTS_SUCCESS, LOAD_MAIN_POSTS_FAILURE } from '../reducers/post';\nimport axios from 'axios';\n\nfunction addPostAPI(postData) {\n  console.log(\" addPostAPI() : \", postData);\n  return axios.post('/post', postData, {\n    withCredentials: true\n  });\n}\n\nfunction* addPost(action) {\n  try {\n    //yield delay(2000);\n    console.log('in addPost Saga : ', action);\n    const result = yield call(addPostAPI, action.data);\n    console.log(\"chk result : \", result);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction addCommentAPI() {}\n\nfunction* addComment(action) {\n  try {\n    yield delay(2000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: {\n        postId: action.data.postId\n      }\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction loadMainPostsAPI() {\n  return axios.get('/posts');\n}\n\nfunction* loadMainPosts(action) {\n  try {\n    const result = yield call(loadMainPostsAPI);\n    yield put({\n      type: LOAD_MAIN_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: LOAD_MAIN_POSTS_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadMainPosts() {\n  yield takeLatest(LOAD_MAIN_POSTS_REQUEST, loadMainPosts);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchLoadMainPosts), fork(watchAddPost), // 이벤트 리스너로 이해, 순서 의미 없음\n  fork(watchAddComment)]);\n}","map":{"version":3,"sources":["/Users/mac/work/feelming/frontend/sagas/post.js"],"names":["all","fork","put","takeLatest","delay","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LOAD_MAIN_POSTS_REQUEST","LOAD_MAIN_POSTS_SUCCESS","LOAD_MAIN_POSTS_FAILURE","axios","addPostAPI","postData","console","log","post","withCredentials","addPost","action","result","call","data","type","e","error","watchAddPost","addCommentAPI","addComment","postId","watchAddComment","loadMainPostsAPI","get","loadMainPosts","watchLoadMainPosts","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,KAArC,QAAkD,oBAAlD;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,EAA6CC,gBAA7C,EACIC,mBADJ,EACyBC,mBADzB,EAC8CC,mBAD9C,EAEIC,uBAFJ,EAE6BC,uBAF7B,EAEsDC,uBAFtD,QAEqF,kBAFrF;AAGA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,UAAT,CAAoBC,QAApB,EAA8B;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,QAAhC;AACA,SAAOF,KAAK,CAACK,IAAN,CAAW,OAAX,EAAoBH,QAApB,EAA8B;AACjCI,IAAAA,eAAe,EAAE;AADgB,GAA9B,CAAP;AAGH;;AAED,UAAUC,OAAV,CAAkBC,MAAlB,EAA0B;AACtB,MAAG;AACC;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCI,MAAlC;AACA,UAAMC,MAAM,GAAG,MAAMC,IAAI,CAACT,UAAD,EAAaO,MAAM,CAACG,IAApB,CAAzB;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BK,MAA7B;AACA,UAAMrB,GAAG,CAAC;AACNwB,MAAAA,IAAI,EAAEpB,gBADA;AAENmB,MAAAA,IAAI,EAAEF,MAAM,CAACE;AAFP,KAAD,CAAT;AAIH,GATD,CASC,OAAOE,CAAP,EAAU;AACP,UAAMzB,GAAG,CAAC;AACNwB,MAAAA,IAAI,EAAEnB,gBADA;AAENqB,MAAAA,KAAK,EAAED;AAFD,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUE,YAAV,GAAyB;AACrB,QAAM1B,UAAU,CAACE,gBAAD,EAAmBgB,OAAnB,CAAhB;AACH;;AAED,SAASS,aAAT,GAAyB,CAExB;;AAED,UAAUC,UAAV,CAAqBT,MAArB,EAA6B;AACzB,MAAG;AACC,UAAMlB,KAAK,CAAC,IAAD,CAAX;AACA,UAAMF,GAAG,CAAC;AACNwB,MAAAA,IAAI,EAAEjB,mBADA;AAENgB,MAAAA,IAAI,EAAE;AACFO,QAAAA,MAAM,EAAEV,MAAM,CAACG,IAAP,CAAYO;AADlB;AAFA,KAAD,CAAT;AAMH,GARD,CAQC,OAAOL,CAAP,EAAU;AACP,UAAMzB,GAAG,CAAC;AACNwB,MAAAA,IAAI,EAAEhB,mBADA;AAENkB,MAAAA,KAAK,EAAED;AAFD,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUM,eAAV,GAA4B;AACxB,QAAM9B,UAAU,CAACK,mBAAD,EAAsBuB,UAAtB,CAAhB;AACH;;AAED,SAASG,gBAAT,GAA4B;AACxB,SAAOpB,KAAK,CAACqB,GAAN,CAAU,QAAV,CAAP;AACH;;AAED,UAAUC,aAAV,CAAwBd,MAAxB,EAAgC;AAC5B,MAAG;AACC,UAAMC,MAAM,GAAG,MAAMC,IAAI,CAACU,gBAAD,CAAzB;AACA,UAAMhC,GAAG,CAAC;AACNwB,MAAAA,IAAI,EAAEd,uBADA;AAENa,MAAAA,IAAI,EAAEF,MAAM,CAACE;AAFP,KAAD,CAAT;AAIH,GAND,CAMC,OAAOE,CAAP,EAAU;AACP,UAAMzB,GAAG,CAAC;AACNwB,MAAAA,IAAI,EAAEb,uBADA;AAENe,MAAAA,KAAK,EAAED;AAFD,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUU,kBAAV,GAA+B;AAC3B,QAAMlC,UAAU,CAACQ,uBAAD,EAA0ByB,aAA1B,CAAhB;AACH;;AAGD,eAAe,UAAUE,QAAV,GAAqB;AAChC,QAAMtC,GAAG,CAAC,CACNC,IAAI,CAACoC,kBAAD,CADE,EAENpC,IAAI,CAAC4B,YAAD,CAFE,EAEoB;AAC1B5B,EAAAA,IAAI,CAACgC,eAAD,CAHE,CAAD,CAAT;AAKH","sourcesContent":["import { all, fork, put, takeLatest, delay } from 'redux-saga/effects';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE,\n    ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE,\n    LOAD_MAIN_POSTS_REQUEST, LOAD_MAIN_POSTS_SUCCESS, LOAD_MAIN_POSTS_FAILURE } from '../reducers/post';\nimport axios from 'axios';\n\nfunction addPostAPI(postData) {\n    console.log(\" addPostAPI() : \", postData)\n    return axios.post('/post', postData, {\n        withCredentials: true,\n    });\n}\n\nfunction* addPost(action) {\n    try{\n        //yield delay(2000);\n        console.log('in addPost Saga : ', action)\n        const result = yield call(addPostAPI, action.data);\n        console.log(\"chk result : \", result)\n        yield put({\n            type: ADD_POST_SUCCESS,\n            data: result.data,\n        });\n    }catch (e) {\n        yield put({\n            type: ADD_POST_FAILURE,\n            error: e,\n        })\n    }\n}\n\nfunction* watchAddPost() {\n    yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction addCommentAPI() {\n\n}\n\nfunction* addComment(action) {\n    try{\n        yield delay(2000);\n        yield put({\n            type: ADD_COMMENT_SUCCESS,\n            data: {\n                postId: action.data.postId,\n            },\n        });\n    }catch (e) {\n        yield put({\n            type: ADD_COMMENT_FAILURE,\n            error: e,\n        })\n    }\n}\n\nfunction* watchAddComment() {\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction loadMainPostsAPI() {\n    return axios.get('/posts');\n}\n\nfunction* loadMainPosts(action) {\n    try{\n        const result = yield call(loadMainPostsAPI);\n        yield put({\n            type: LOAD_MAIN_POSTS_SUCCESS,\n            data: result.data,\n        });\n    }catch (e) {\n        yield put({\n            type: LOAD_MAIN_POSTS_FAILURE,\n            error: e,\n        })\n    }\n}\n\nfunction* watchLoadMainPosts() {\n    yield takeLatest(LOAD_MAIN_POSTS_REQUEST, loadMainPosts);\n}\n\n\nexport default function* postSaga() {\n    yield all([\n        fork(watchLoadMainPosts),\n        fork(watchAddPost),       // 이벤트 리스너로 이해, 순서 의미 없음\n        fork(watchAddComment),\n    ]);\n}"]},"metadata":{},"sourceType":"module"}