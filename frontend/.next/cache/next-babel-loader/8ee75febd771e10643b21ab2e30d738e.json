{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\n// export const initialState = {\n//     mainPosts: [{\n//         // id: 1,\n//         // User: {\n//         //     id: 1,\n//         //     nickname: \"코드\",\n//         // },\n//         // content: \"첫 번째 게시글\",\n//         // img: \"https://blog.yena.io/assets/post-img/171123-nachoi-300.jpg\",\n//         // Comments: [],\n//     }],                 // 화면에 보일 포스트들\n//     imagePaths: [],     // 미리보기 이미지 경로\n//     addPostErrorReason:'',  // 포스트 업로드 실패 사유\n//     isAddingPost: false,        // 포스트 업로드 중\n//     postAdded: false,           // 포스트 업로드 성공,\n//     isAddingComment:false,\n//     addCommentErrorReason: '',\n//     commentAdded: false,\n// };\n// const dummyPost = {\n//     id: 2,\n//     User: {\n//         id: 1,\n//         nickname: '코드',\n//     },\n//     content: '나는 더미입니다',\n//     Comments: [],\n// }\n// const dummyComment = {\n//     id: 1,\n//     User: {\n//         id: 1,\n//         nickname: 2,\n//     },\n//     createdAt: new Date(),\n//     content: '더미 댓글입니다',\n// }\nexport var initialState = {\n  mainPosts: [],\n  // 화면에 보일 포스트들\n  imagePaths: [],\n  // 미리보기 이미지 경로\n  addPostErrorReason: '',\n  // 포스트 업로드 실패 사유\n  isAddingPost: false,\n  // 포스트 업로드 중\n  postAdded: false,\n  // 포스트 업로드 성공\n  isAddingComment: false,\n  addCommentErrorReason: '',\n  commentAdded: false,\n  singlePost: null\n};\nexport var LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\nexport var LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\nexport var LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\nexport var LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport var LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport var LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\nexport var LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport var LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport var LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\nexport var UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport var UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport var UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport var REMOVE_IMAGE = 'REMOVE_IMAGE';\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport var LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport var LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport var UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport var UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport var UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport var LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST';\nexport var LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\nexport var LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE';\nexport var RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport var RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport var RETWEET_FAILURE = 'RETWEET_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOAD_HASHTAG_POSTS_REQUEST:\n    case LOAD_USER_POSTS_REQUEST:\n    case LOAD_MAIN_POSTS_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: []\n        });\n      }\n\n    case LOAD_USER_POSTS_SUCCESS:\n    case LOAD_HASHTAG_POSTS_SUCCESS:\n    case LOAD_MAIN_POSTS_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: action.data\n        });\n      }\n\n    case LOAD_HASHTAG_POSTS_FAILURE:\n    case LOAD_USER_POSTS_FAILURE:\n    case LOAD_MAIN_POSTS_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_POST_REQUEST:\n      {\n        //console.log(\" in Reducuer ADD_POST_REQUEST : \", action)\n        return _objectSpread({}, state, {\n          isAddingPost: true,\n          addPostErrorReason: '',\n          postAdded: false\n        });\n      }\n\n    case ADD_POST_SUCCESS:\n      {\n        //console.log(\" in Reducuer ADD_POST_SUCCESS : \", action)\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          //mainPosts: [dummyPost, ...state.mainPosts],\n          mainPosts: [action.data].concat(_toConsumableArray(state.mainPosts)),\n          postAdded: true,\n          imagePaths: []\n        });\n      }\n\n    case ADD_POST_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          addPostErrorReason: action.error\n        });\n      }\n\n    case ADD_COMMENT_REQUEST:\n      {\n        console.log(\" in Reducuer ADD_COMMENT_REQUEST :  \", action);\n        return _objectSpread({}, state, {\n          isAddingComment: true,\n          addCommentErrorReason: '',\n          commentAdded: false\n        });\n      }\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        console.log(\" in Reducuer ADD_COMMENT_SUCCESS :  \", action);\n        console.log(\" chk state : \", state);\n        console.log(\" state.mainPosts[0] : \", state.mainPosts[0]);\n\n        try {\n          var postIndex = state.mainPosts.findIndex(function (v) {\n            return v.id === action.data.postId;\n          });\n          console.log('postIndex : ', postIndex);\n          var post = state.mainPosts[postIndex];\n          console.log('post : ', post); //const Comments = [...post.Comments, dummyComment];\n          //const Comments = [...post.Comments, action.data.comment];\n\n          var Comments = [action.data.comment];\n          console.log('Comments : ', Comments);\n\n          var _mainPosts = _toConsumableArray(state.mainPosts);\n\n          console.log('mainPosts : ', _mainPosts);\n          _mainPosts[postIndex] = _objectSpread({}, post, {\n            Comments: Comments\n          });\n          console.log('mainPosts[postIndex] : ', _mainPosts[postIndex]);\n        } catch (e) {\n          console.log(\"reducer error : \", e);\n        }\n\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          //mainPosts,\n          commentAdded: true\n        });\n      }\n\n    case ADD_COMMENT_FAILURE:\n      {\n        console.log(\" in Reducuer ADD_COMMENT_FAILURE :  \", action);\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          addCommentErrorReason: action.error\n        });\n      }\n\n    case LOAD_COMMENTS_SUCCESS:\n      {\n        try {\n          var _postIndex = state.mainPosts.findIndex(function (v) {\n            return v.id === action.data.postId;\n          });\n\n          var _post = state.mainPosts[_postIndex];\n          var _Comments = action.data.comments;\n\n          var _mainPosts2 = _toConsumableArray(state.mainPosts);\n\n          _mainPosts2[_postIndex] = _objectSpread({}, _post, {\n            Comments: _Comments\n          });\n        } catch (e) {\n          console.log(\"reducer error : \", e);\n        }\n\n        return _objectSpread({}, state, {\n          mainPosts: mainPosts\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mac/work/feelming/frontend/reducers/post.js"],"names":["initialState","mainPosts","imagePaths","addPostErrorReason","isAddingPost","postAdded","isAddingComment","addCommentErrorReason","commentAdded","singlePost","LOAD_MAIN_POSTS_REQUEST","LOAD_MAIN_POSTS_SUCCESS","LOAD_MAIN_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","REMOVE_IMAGE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_COMMENTS_REQUEST","LOAD_COMMENTS_SUCCESS","LOAD_COMMENTS_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","reducer","state","action","type","data","error","console","log","postIndex","findIndex","v","id","postId","post","Comments","comment","e","comments"],"mappings":"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","sourcesContent":["// export const initialState = {\n//     mainPosts: [{\n//         // id: 1,\n//         // User: {\n//         //     id: 1,\n//         //     nickname: \"코드\",\n//         // },\n//         // content: \"첫 번째 게시글\",\n//         // img: \"https://blog.yena.io/assets/post-img/171123-nachoi-300.jpg\",\n//         // Comments: [],\n//     }],                 // 화면에 보일 포스트들\n//     imagePaths: [],     // 미리보기 이미지 경로\n//     addPostErrorReason:'',  // 포스트 업로드 실패 사유\n//     isAddingPost: false,        // 포스트 업로드 중\n//     postAdded: false,           // 포스트 업로드 성공,\n//     isAddingComment:false,\n//     addCommentErrorReason: '',\n//     commentAdded: false,\n// };\n\n// const dummyPost = {\n//     id: 2,\n//     User: {\n//         id: 1,\n//         nickname: '코드',\n//     },\n//     content: '나는 더미입니다',\n//     Comments: [],\n// }\n\n// const dummyComment = {\n//     id: 1,\n//     User: {\n//         id: 1,\n//         nickname: 2,\n//     },\n//     createdAt: new Date(),\n//     content: '더미 댓글입니다',\n// }\n\nexport const initialState = {\n    mainPosts: [], // 화면에 보일 포스트들\n    imagePaths: [], // 미리보기 이미지 경로\n    addPostErrorReason: '', // 포스트 업로드 실패 사유\n    isAddingPost: false, // 포스트 업로드 중\n    postAdded: false, // 포스트 업로드 성공\n    isAddingComment: false,\n    addCommentErrorReason: '',\n    commentAdded: false,\n    singlePost: null,\n  };\n\nexport const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\nexport const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\nexport const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\n\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\n\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\n\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\n\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\n\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\n\nexport const LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST';\nexport const LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\nexport const LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE';\n\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\n\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case LOAD_HASHTAG_POSTS_REQUEST:\n        case LOAD_USER_POSTS_REQUEST:\n        case LOAD_MAIN_POSTS_REQUEST: {\n            return {\n                ...state,\n                mainPosts: [],\n            };\n        }\n        case LOAD_USER_POSTS_SUCCESS:\n        case LOAD_HASHTAG_POSTS_SUCCESS:\n        case LOAD_MAIN_POSTS_SUCCESS: {\n            return {\n                ...state,     \n                mainPosts: action.data,\n \n            };\n        }\n        case LOAD_HASHTAG_POSTS_FAILURE:\n        case LOAD_USER_POSTS_FAILURE:\n        case LOAD_MAIN_POSTS_FAILURE: {\n            return {\n                ...state,\n            };\n        }\n        case ADD_POST_REQUEST: {\n            //console.log(\" in Reducuer ADD_POST_REQUEST : \", action)\n            return {\n                ...state,\n                isAddingPost: true,\n                addPostErrorReason: '',\n                postAdded: false,\n            };\n        }\n        case ADD_POST_SUCCESS: {\n            //console.log(\" in Reducuer ADD_POST_SUCCESS : \", action)\n            return {\n                ...state,\n                isAddingPost: false,\n                //mainPosts: [dummyPost, ...state.mainPosts],\n                mainPosts: [action.data, ...state.mainPosts],\n                postAdded: true,\n                imagePaths: [],\n            };\n        }\n        case ADD_POST_FAILURE: {\n            return {\n                ...state,\n                isAddingPost: false,\n                addPostErrorReason: action.error,\n            };\n        }\n        case ADD_COMMENT_REQUEST: {\n            console.log(\" in Reducuer ADD_COMMENT_REQUEST :  \", action)\n            return {\n                ...state,\n                isAddingComment: true,\n                addCommentErrorReason: '',\n                commentAdded: false,\n            };\n        }\n        case ADD_COMMENT_SUCCESS: {\n            console.log(\" in Reducuer ADD_COMMENT_SUCCESS :  \", action)\n            console.log(\" chk state : \", state)\n            console.log(\" state.mainPosts[0] : \", state.mainPosts[0]);\n\n            try {   \n                const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n                console.log('postIndex : ', postIndex);\n                const post = state.mainPosts[postIndex];\n                console.log('post : ', post);\n                //const Comments = [...post.Comments, dummyComment];\n                //const Comments = [...post.Comments, action.data.comment];\n                const Comments = [action.data.comment]\n                console.log('Comments : ', Comments);\n                const mainPosts = [...state.mainPosts];\n                console.log('mainPosts : ', mainPosts)\n                mainPosts[postIndex] = {...post, Comments };\n                console.log('mainPosts[postIndex] : ', mainPosts[postIndex]);\n\n            } catch (e) {\n                console.log(\"reducer error : \", e);\n            }\n            \n            return {\n                ...state,\n                isAddingComment: false,\n                //mainPosts,\n                commentAdded: true,\n            };\n        }\n        case ADD_COMMENT_FAILURE: {\n            console.log(\" in Reducuer ADD_COMMENT_FAILURE :  \", action)\n            return {\n                ...state,\n                isAddingComment: false,\n                addCommentErrorReason: action.error,\n            };\n        }\n        case LOAD_COMMENTS_SUCCESS: {\n           try {\n                const postIndex = state.mainPosts.findIndex( v=> v.id === action.data.postId);\n                const post = state.mainPosts[postIndex];\n                const Comments = action.data.comments;\n                const mainPosts = [...state.mainPosts];\n                mainPosts[postIndex] = { ...post, Comments};\n            } catch (e){\n                console.log(\"reducer error : \", e);\n            }\n            \n            return {\n                ...state,\n                mainPosts,\n            }\n        }\n        default: {\n            return {\n                ...state,\n            }\n        }\n    }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}