{"version":3,"file":"static/webpack/static/development/pages/_app.js.97022f916baad3591bbc.hot-update.js","sources":["webpack:///./components/AppLayout.js","webpack:///./containers/LoginForm.js","webpack:///./containers/UserProfile.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\nimport { Menu, Input, Button, Row, Col, Avatar, Card } from 'antd';\nimport LoginForm from '../containers/LoginForm';\nimport UserProfile from '../containers/UserProfile';\nimport Router from 'next/router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\n\n\nconst AppLayout = ({ children }) => {\n    const { isLoggedIn, me } = useSelector( state => state.user );\n    const dispatch = useDispatch();\n\n    // useEffect( () => {\n    //     if (!me) {\n    //         dispatch({\n    //             type: LOAD_USER_REQUEST,\n    //         });\n    //     }\n    // }, [me]);\n    const onSearch = (value) => {\n        console.log('search Value : ', value);\n                       // 내부 주소                                      // 외부  주소\n        Router.push({ pathname: '/hashtag', query: { tag: value }}, `/hashtag/${value}`);\n    }\n\n    return (\n        <div>\n            <Menu mode=\"horizontal\">\n                <Menu.Item key='home'><Link href=\"/\"><a>Feelming</a></Link></Menu.Item>\n                <Menu.Item key='profile'><Link href=\"/profile\"><a>프로필</a></Link></Menu.Item>\n                <Menu.Item key='mail'>\n                    <Input.Search \n                        enterButton \n                        style={{ verticalAlign: 'middle'}}\n                        onSearch={onSearch} \n                    />\n                </Menu.Item>\n            </Menu>\n            <Row gutter={8} >\n                <Col xs={24} md={6}>\n                    {me   // isLoggedIn \n                        ? <UserProfile />\n                        : <LoginForm />\n                    }\n                </Col>\n                <Col xs={24} md={12}> \n                    {children}\n                </Col>\n                <Col xs={24} md={6}>\n                    <a target=\"_blank\">Made by kcod</a>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nAppLayout.protTypes = {\n    children: PropTypes.node,\n};\n\nexport default AppLayout;","import React, { useState, useCallback } from 'react';\nimport { Button, Input, Form } from 'antd';\nimport Link from 'next/link';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {useInput } from '../pages/signup';\nimport { LOG_IN_REQUEST } from '../reducers/user';\n\nconst LoginForm = () => {\n    const [id, onChangeId] = useInput('');\n    const [password, onChangePassword] = useInput('');\n    const { isLoggingIn } = useSelector( state => state.user);\n    const dispatch = useDispatch();\n\n\n    const onSubmitForm = useCallback((e) => {\n        e.preventDefault();\n        dispatch({\n            type: LOG_IN_REQUEST,\n            data: {\n                userId : id,\n                password,\n            },\n        });\n    }, [id, password] );\n\n    return (\n        <Form onSubmit={ onSubmitForm} >\n            <div>\n                <label htmlFor=\"user-id\">아이디</label>\n                <br />\n                <input name=\"user-id\" value={id} onChange={onChangeId} required />\n            </div>\n            <div>\n                <label htmlFor=\"user-password\">비밀번호</label>\n                <br />\n                <input name=\"user-password\" type=\"password\" value={password} onChange={onChangePassword} required />\n            </div>\n            <div>\n                <Button type=\"primary\" htmlType=\"submit\" loading={isLoggingIn}>로그인</Button>\n                <Link href=\"/signup\"><a><Button>회원가입</Button></a></Link>\n            </div>\n        </Form>\n    );\n};\n\nexport default LoginForm;","import React, { useCallback } from 'react';\nimport { Card, Avatar, Button } from 'antd';\nimport Link from 'next/link';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { LOG_OUT_REQUEST } from '../reducers/user';\n\nconst UserProfile = () => {\n    \n    const dispatch = useDispatch();\n    const { me } = useSelector( state => state.user );\n\n    const onLogout = useCallback(() => {\n        dispatch({\n            type: LOG_OUT_REQUEST,\n        });\n    }, []);\n\n     console.log(\" UserProfile me : \", me)\n \n    return (\n        <Card \n            actions={[\n                <Link href='/profile' key='twit'>\n                    <a>\n                       <div key=\"twit\">포스트<br/> {me.Posts && me.Posts.length}</div>\n                    </a>\n                </Link>,\n                <Link href='profile' key='following'>\n                    <a>\n                        <div key=\"followings\">팔로잉<br/> { me.Followings && me.Followings.length}</div>\n                    </a>\n                </Link>,\n                <Link href='/profile' key='follower'>\n                    <a>\n                        <div key=\"followers\">팔로워<br/> {me.Followings && me.Followers.length}</div>\n                    </a>\n                </Link>,\n            ]}\n        >\n            <Card.Meta\n                 avatar={<Avatar>{me.nickname && me.nickname[0]}</Avatar>}\n                 title={me.nickname}\n            />\n            <Button onClick={onLogout}>로그아웃</Button>\n        </Card>\n    );\n};\n\nexport default UserProfile;"],"mappings":"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","sourceRoot":""}