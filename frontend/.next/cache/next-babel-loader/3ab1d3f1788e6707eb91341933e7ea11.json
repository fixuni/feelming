{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/app/frontend/pages/_error.js\";\nvar __jsx = React.createElement;\nimport Error from 'next/error';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar MyError = function MyError(statusCode) {\n  //console.log(\"Error\", props);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, statusCode, \" \\uC5D0\\uB7EC \\uBC1C\\uC0DD \"), __jsx(Error, {\n    statusCode: statusCode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }));\n};\n\nMyError.propTypes = {\n  statusCode: PropTypes.number\n};\nMyError.defaultProps = {\n  statusCode: 400\n};\n\nMyError.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var statusCode;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            statusCode = context.res ? context.res.statusCode : context.err ? context.err.statusCode : null;\n            return _context.abrupt(\"return\", {\n              statusCode: statusCode\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default MyError;","map":null,"metadata":{},"sourceType":"module"}