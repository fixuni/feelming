{"version":3,"file":"static/webpack/static/development/pages/_app.js.d27e4de3ca5c19084689.hot-update.js","sources":["webpack:///./containers/UserProfile.js"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { Card, Avatar, Button } from 'antd';\nimport Link from 'next/link';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { LOG_OUT_REQUEST } from '../reducers/user';\n\nconst UserProfile = () => {\n    \n    const dispatch = useDispatch();\n    const { me } = useSelector( state => state.user );\n\n    const onLogout = useCallback(() => {\n        dispatch({\n            type: LOG_OUT_REQUEST,\n        });\n    }, []);\n\n     console.log(\" UserProfile me : \", me)\n\n    \n    //  next.js  prefetch   기능 추가함. 사용자가 자주 사용하는 링크 파일을 prefetch 적용해 놓으면, 한번 불러올때 한꺼번에 관련 링크를 가져옴\n    //  따라서 사용자 경험이 좋으나, 실질적인 테스트는 배포하고 확인해 볼 수 있음\n \n    return (\n        <Card \n            actions={[\n                <Link href='/profile'  prefetch  key='twit'>\n                    <a>\n                       <div key=\"twit\">포스트<br/> {me.Posts && me.Posts.length}</div>\n                    </a>\n                </Link>,\n                <Link href='profile' prefetch  key='following'>\n                    <a>\n                        <div key=\"followings\">팔로잉<br/> { me.Followings && me.Followings.length}</div>\n                    </a>\n                </Link>,\n                <Link href='/profile' prefetch  key='follower'>\n                    <a>\n                        <div key=\"followers\">팔로워<br/> {me.Followings && me.Followers.length}</div>\n                    </a>\n                </Link>,\n            ]}\n        >\n            <Card.Meta\n                 avatar={<Avatar>{me.nickname && me.nickname[0]}</Avatar>}\n                 title={me.nickname}\n            />\n            <Button onClick={onLogout}>로그아웃</Button>\n        </Card>\n    );\n};\n\nexport default UserProfile;"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAGA;AAAA;AAHA;AACA;AAIA;AACA;AACA;AADA;AAGA;AAEA;AAIA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}