{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\n// const dummyUser = {\n//     nickname: '코드',\n//     Post: [],\n//     Followings: [],\n//     Followers: [],\n//     id: 1,  \n// };\nexport const initialState = {\n  // isLoggedIn: false,\n  isLoggingOut: false,\n  // 로그아웃 시도중\n  isLoggingIn: false,\n  // 로그인 시도중\n  logInErrorReason: '',\n  // 로그인 실퍠 상유\n  signedUp: false,\n  // 회원가입 성공\n  isSigningUp: false,\n  // 회원가입 시도중\n  signUpErrorReason: '',\n  // 회원가입 실패 사유\n  me: null,\n  followingList: [],\n  // 팔로잉 리스트\n  followerList: [],\n  // 팔로워 리스트\n  userInfo: null,\n  // 남의 정보\n  isEditingNickname: false,\n  editNicknameErrorReason: ''\n};\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE';\nexport const LOAD_FOLLOW_REQUEST = 'LOAD_FOLLOW_REQUEST';\nexport const LOAD_FOLLOW_SUCCESS = 'LOAD_FOLLOW_SUCCESS';\nexport const LOAD_FOLLOW_FAILURE = 'LOAD_FOLLOW_FAILURE';\nexport const FOLLOW_USER_REQUEST = 'FOLLOW_USER_REQUEST';\nexport const FOLLOW_USER_SUCCESS = 'FOLLOW_USER_SUCCESS';\nexport const FOLLOW_USER_FAILURE = 'FOLLOW_USER_FAILURE';\nexport const UNFOLLOW_USER_REQUEST = 'UNFOLLOW_USER_REQUEST';\nexport const UNFOLLOW_USER_SUCCESS = 'UNFOLLOW_USER_SUCCESS';\nexport const UNFOLLOW_USER_FAILURE = 'UNFOLLOW_USER_FAILURE';\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME'; // post reducier 를 호출하는 부분 (다른 리듀서 호출)\n\nexport const EDIT_NICKNAME_REQUEST = 'EDIT_NICKNAME_REQUEST';\nexport const EDIT_NICKNAME_SUCCESS = 'EDIT_NICKNAME_SUCCESS';\nexport const EDIT_NICKNAME_FAILURE = 'EDIT_NICKNAME_FAILURE'; // export const loginAction = {\n//     type: LOG_IN_REQUEST,\n// };\n// export const logoutAction = {\n//     type: LOG_OUT_REQUEST,\n// }\n\nexport const signupAction = data => ({\n  type: SIGN_UP_REQUEST,\n  data: data\n}); // export const signupAction = (data) => {\n//     return {\n//         type: SIGN_UP_REQUEST,\n//         data: data,\n//     };\n// };\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_TO_ME:\n      {\n        return _objectSpread({}, state, {\n          me: _objectSpread({}, state.me, {\n            Posts: [{\n              id: action.data\n            }, ...state.me.Posts]\n          })\n        });\n      }\n      ;\n\n    case LOG_IN_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: true\n        });\n      }\n\n    case LOG_IN_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: false,\n          //isLoggedIn: true,\n          //me: dummyUser,\n          me: action.data,\n          isLoading: false\n        });\n      }\n\n    case LOG_IN_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: false,\n          //isLoggedIn: false,\n          logInErrorReason: action.error,\n          me: null\n        });\n      }\n\n    case LOG_OUT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggingOut: true\n        });\n      }\n\n    case LOG_OUT_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoggingOut: false,\n          //isLoggedIn: false,\n          me: null\n        });\n      }\n\n    case SIGN_UP_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isSigningUp: true,\n          isSignedUp: false,\n          signUpErrorReason: ''\n        });\n      }\n\n    case SIGN_UP_SUCCESS:\n      {\n        console.log(\" result in reducers of SIGN_UP_SUCCESS : \", action.data);\n        return _objectSpread({}, state, {\n          isSigningUp: false,\n          isSignedUp: true,\n          me: {\n            nickname: action.nickname,\n            // Post: [],\n            // Followings: [],\n            // Followers: [],\n            id: action.id,\n            userId: action.userId\n          }\n        });\n      }\n\n    case SIGN_UP_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isSigningUp: false,\n          signUpErrorReason: action.error\n        });\n      }\n\n    case LOAD_USER_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_USER_SUCCESS:\n      {\n        if (action.me) {\n          return _objectSpread({}, state, {\n            me: action.data\n          });\n        }\n\n        return _objectSpread({}, state, {\n          userInfo: action.data\n        });\n      }\n\n    case LOAD_USER_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case FOLLOW_USER_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case FOLLOW_USER_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          me: _objectSpread({}, state.me, {\n            Followings: [{\n              id: action.data\n            }, ...state.me.Followings]\n          })\n        });\n      }\n\n    case FOLLOW_USER_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UNFOLLOW_USER_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UNFOLLOW_USER_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          me: _objectSpread({}, state.me, {\n            Followings: state.me.Followings.filter(v => v.id !== action.data)\n          }),\n          followingList: state.followingList.filter(v => v.id !== action.data)\n        });\n      }\n\n    case UNFOLLOW_USER_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_FOLLOWERS_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_FOLLOWERS_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          followerList: action.data\n        });\n      }\n\n    case LOAD_FOLLOWERS_FAILURE:\n      {\n        console.log(\"LOAD_FOLLOWERS_FAILURE : \", action.data);\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_FOLLOWINGS_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_FOLLOWINGS_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          followingList: action.data\n        });\n      }\n\n    case LOAD_FOLLOWINGS_FAILURE:\n      {\n        console.log(\"LOAD_FOLLOWINGS_FAILURE : \", action.data);\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_FOLLOWER_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_FOLLOWER_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          me: _objectSpread({}, state.me, {\n            Followers: state.me.Followers.filter(v => v.id !== action.data)\n          }),\n          followerList: state.followerList.filter(v => v.id !== action.data)\n        });\n      }\n\n    case REMOVE_FOLLOWER_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case EDIT_NICKNAME_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isEditingNickname: true,\n          editNicknameErrorReason: ''\n        });\n      }\n\n    case EDIT_NICKNAME_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isEditingNickname: false,\n          me: _objectSpread({}, state.me, {\n            nickname: action.data\n          })\n        });\n      }\n\n    case EDIT_NICKNAME_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          editNicknameErrorReason: action.error\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/app/frontend/reducers/user.js"],"names":["initialState","isLoggingOut","isLoggingIn","logInErrorReason","signedUp","isSigningUp","signUpErrorReason","me","followingList","followerList","userInfo","isEditingNickname","editNicknameErrorReason","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","LOAD_FOLLOW_REQUEST","LOAD_FOLLOW_SUCCESS","LOAD_FOLLOW_FAILURE","FOLLOW_USER_REQUEST","FOLLOW_USER_SUCCESS","FOLLOW_USER_FAILURE","UNFOLLOW_USER_REQUEST","UNFOLLOW_USER_SUCCESS","UNFOLLOW_USER_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","ADD_POST_TO_ME","EDIT_NICKNAME_REQUEST","EDIT_NICKNAME_SUCCESS","EDIT_NICKNAME_FAILURE","signupAction","data","type","reducer","state","action","Posts","id","isLoading","error","isSignedUp","console","log","nickname","userId","Followings","filter","v","Followers"],"mappings":"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","sourcesContent":["// const dummyUser = {\n//     nickname: '코드',\n//     Post: [],\n//     Followings: [],\n//     Followers: [],\n//     id: 1,  \n// };\n\nexport const initialState = {\n   // isLoggedIn: false,\n    isLoggingOut: false,   // 로그아웃 시도중\n    isLoggingIn: false,    // 로그인 시도중\n    logInErrorReason: '',  // 로그인 실퍠 상유\n    signedUp: false,      // 회원가입 성공\n    isSigningUp: false,   // 회원가입 시도중\n    signUpErrorReason: '', // 회원가입 실패 사유\n    me: null,\n    followingList: [],     // 팔로잉 리스트\n    followerList: [],     // 팔로워 리스트\n    userInfo: null,        // 남의 정보\n    isEditingNickname: false,\n    editNicknameErrorReason: ''\n};\n\n\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\n\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\n\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\n\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\n\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE';\n\nexport const LOAD_FOLLOW_REQUEST = 'LOAD_FOLLOW_REQUEST';\nexport const LOAD_FOLLOW_SUCCESS = 'LOAD_FOLLOW_SUCCESS';\nexport const LOAD_FOLLOW_FAILURE = 'LOAD_FOLLOW_FAILURE';\n\nexport const FOLLOW_USER_REQUEST = 'FOLLOW_USER_REQUEST';\nexport const FOLLOW_USER_SUCCESS = 'FOLLOW_USER_SUCCESS';\nexport const FOLLOW_USER_FAILURE = 'FOLLOW_USER_FAILURE';\n\nexport const UNFOLLOW_USER_REQUEST = 'UNFOLLOW_USER_REQUEST';\nexport const UNFOLLOW_USER_SUCCESS = 'UNFOLLOW_USER_SUCCESS';\nexport const UNFOLLOW_USER_FAILURE = 'UNFOLLOW_USER_FAILURE';\n\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\n\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';     // post reducier 를 호출하는 부분 (다른 리듀서 호출)\n\nexport const EDIT_NICKNAME_REQUEST = 'EDIT_NICKNAME_REQUEST';\nexport const EDIT_NICKNAME_SUCCESS = 'EDIT_NICKNAME_SUCCESS';\nexport const EDIT_NICKNAME_FAILURE = 'EDIT_NICKNAME_FAILURE';\n\n// export const loginAction = {\n//     type: LOG_IN_REQUEST,\n// };\n\n// export const logoutAction = {\n//     type: LOG_OUT_REQUEST,\n// }\n\nexport const signupAction = (data) => ({\n    type: SIGN_UP_REQUEST,\n    data: data,\n});\n// export const signupAction = (data) => {\n//     return {\n//         type: SIGN_UP_REQUEST,\n//         data: data,\n//     };\n// };\n\nconst reducer = (state = initialState, action ) => {\n    switch (action.type) {\n        case ADD_POST_TO_ME: {\n            return {\n                ...state,\n                me: {\n                    ...state.me,\n                    Posts: [{ id: action.data }, ...state.me.Posts],\n                },\n            };\n        };\n        case LOG_IN_REQUEST: {\n            return {\n                ...state,\n                isLoggingIn: true,\n            }\n        }\n        case LOG_IN_SUCCESS: {\n            return {\n                ...state,\n                isLoggingIn: false,\n                //isLoggedIn: true,\n                //me: dummyUser,\n                me: action.data,\n                isLoading: false,\n            }\n        }\n        case LOG_IN_FAILURE: {\n            return {\n                ...state,\n                isLoggingIn: false,\n                //isLoggedIn: false,\n                logInErrorReason: action.error,\n                me: null,\n            }\n        }\n        case LOG_OUT_REQUEST: {\n            return {\n                ...state,\n                isLoggingOut: true,\n            };\n        }\n        case LOG_OUT_SUCCESS: {\n            return {\n                ...state,\n                isLoggingOut: false,\n                //isLoggedIn: false,\n                me: null,\n            }\n        }\n        case SIGN_UP_REQUEST: {\n            return {\n                ...state,\n                isSigningUp: true,\n                isSignedUp: false,\n                signUpErrorReason: '',\n            }\n        }\n        case SIGN_UP_SUCCESS: {\n            console.log(\" result in reducers of SIGN_UP_SUCCESS : \", action.data)\n            return {\n                ...state,\n                isSigningUp: false,\n                isSignedUp: true,\n                me : {\n                    nickname: action.nickname,\n                    // Post: [],\n                    // Followings: [],\n                    // Followers: [],\n                    id: action.id,\n                    userId: action.userId, \n                }\n            };\n        }\n        case SIGN_UP_FAILURE: {\n            return {\n                ...state,\n                isSigningUp: false,\n                signUpErrorReason: action.error,\n            };\n        }\n        case LOAD_USER_REQUEST: {\n            return {\n                ...state,\n            }\n        }\n        case LOAD_USER_SUCCESS: {\n            if(action.me){\n                return {\n                    ...state,\n                    me: action.data,\n                };    \n            }\n            return {\n                ...state,\n                userInfo: action.data,\n            }\n        }\n        case LOAD_USER_FAILURE: {\n            return {\n                ...state,\n            };\n        }\n        case FOLLOW_USER_REQUEST: {\n            return {\n                ...state,\n            }\n        }\n        case FOLLOW_USER_SUCCESS: {\n            return {\n              ...state,\n              me: {\n                ...state.me,\n                Followings: [{ id: action.data }, ...state.me.Followings],\n              },\n            };\n          }\n        case FOLLOW_USER_FAILURE: {\n            return {\n                ...state,\n            }\n        }\n        case UNFOLLOW_USER_REQUEST: {\n            return {\n                ...state,\n            }\n        }\n        case UNFOLLOW_USER_SUCCESS: {\n            return {\n              ...state,\n              me: {\n                ...state.me,\n                Followings: state.me.Followings.filter(v => v.id !== action.data),\n              },\n              followingList: state.followingList.filter(v => v.id !== action.data),\n            };\n          }\n        case UNFOLLOW_USER_FAILURE: {\n            return {\n                ...state,\n            }\n        }\n        case LOAD_FOLLOWERS_REQUEST: {\n            return {\n                ...state,\n            }\n        }\n        case LOAD_FOLLOWERS_SUCCESS: {\n            return {\n              ...state,\n              followerList: action.data,\n            };\n          }\n        case LOAD_FOLLOWERS_FAILURE: {\n            console.log(\"LOAD_FOLLOWERS_FAILURE : \", action.data)\n            return {\n                ...state,\n            }\n        }\n        case LOAD_FOLLOWINGS_REQUEST: {\n            return {\n                ...state,\n            }\n        }\n        case LOAD_FOLLOWINGS_SUCCESS: {\n            return {\n              ...state,\n              followingList: action.data,\n            };\n          }\n        case LOAD_FOLLOWINGS_FAILURE: {\n            console.log(\"LOAD_FOLLOWINGS_FAILURE : \", action.data)\n            return {\n                ...state,\n            }\n        }\n        case REMOVE_FOLLOWER_REQUEST: {\n            return {\n                ...state,\n            }\n        }\n        case REMOVE_FOLLOWER_SUCCESS: {\n            return {\n              ...state,\n              me: {\n                  ...state.me,\n                  Followers: state.me.Followers.filter( v=> v.id !== action.data),\n              },\n              followerList: state.followerList.filter(v => v.id !== action.data),\n            };\n          }\n        case REMOVE_FOLLOWER_FAILURE: {\n            return {\n                ...state,\n            }\n        }\n        case EDIT_NICKNAME_REQUEST: {\n            return {\n                ...state,\n                isEditingNickname: true,\n                editNicknameErrorReason: '',\n            }\n        }\n        case EDIT_NICKNAME_SUCCESS: {\n            return {\n              ...state,\n              isEditingNickname: false,\n              me: {\n                  ...state.me,\n                  nickname: action.data,\n              },\n            };\n          }\n        case EDIT_NICKNAME_FAILURE: {\n            return {\n                ...state,\n                editNicknameErrorReason: action.error,\n            }\n        }\n        default: {\n            return {\n                ...state,\n            }\n        }\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}