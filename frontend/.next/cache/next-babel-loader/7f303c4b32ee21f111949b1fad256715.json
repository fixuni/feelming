{"ast":null,"code":"var _jsxFileName = \"/app/frontend/pages/hashtag.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport PostCard from '../components/PostCard';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../reducers/post';\n\nconst Hashtag = ({\n  tag\n}) => {\n  console.log(\"tag : \", tag);\n  const dispatch = useDispatch();\n  const {\n    mainPosts,\n    hasMorePost\n  } = useSelector(state => state.post);\n  const onScroll = useCallback(() => {\n    if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n      if (hasMorePost) {\n        dispatch({\n          type: LOAD_HASHTAG_POSTS_REQUEST,\n          lastId: mainPosts[mainPosts.length - 1].id,\n          data: tag\n        });\n      }\n    }\n\n    ;\n  }, [hasMorePost, mainPosts.length]);\n  useEffect(() => {\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      // 이렇게 해야 호출될때 아래가 실행됨, 본 컴포넌트 나갈때 실행됨\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length]); //  빈 deps [], 는 처음 로딩될때 한 번만 호출됨\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, mainPosts.map(c => __jsx(PostCard, {\n    key: c.id,\n    post: c,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })));\n};\n\nHashtag.propTypes = {\n  tag: PropTypes.string.isRequired\n};\n\nHashtag.getInitialProps = async context => {\n  const tag = context.query.tag; //console.log('hashtag getInitialProps', context.query.tag);\n\n  context.store.dispatch({\n    type: LOAD_HASHTAG_POSTS_REQUEST,\n    data: tag\n  });\n  return {\n    tag\n  };\n};\n\nexport default Hashtag;","map":{"version":3,"sources":["/app/frontend/pages/hashtag.js"],"names":["React","useEffect","useCallback","PropTypes","PostCard","useDispatch","useSelector","LOAD_HASHTAG_POSTS_REQUEST","Hashtag","tag","console","log","dispatch","mainPosts","hasMorePost","state","post","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","type","lastId","length","id","data","addEventListener","removeEventListener","map","c","propTypes","string","isRequired","getInitialProps","context","query","store"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAAQC,0BAAR,QAAyC,kBAAzC;;AAIA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,GAAtB;AACA,QAAMG,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM;AAACQ,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,MAA4BR,WAAW,CAAES,KAAK,IAAIA,KAAK,CAACC,IAAjB,CAA7C;AAEA,QAAMC,QAAQ,GAAGf,WAAW,CAAE,MAAM;AAChC,QAAIgB,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GACEF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAD9C,EACoD;AAC5C,UAAIT,WAAJ,EAAiB;AACbF,QAAAA,QAAQ,CAAC;AACLY,UAAAA,IAAI,EAAEjB,0BADD;AAELkB,UAAAA,MAAM,EAAEZ,SAAS,CAACA,SAAS,CAACa,MAAV,GAAmB,CAApB,CAAT,CAAiCC,EAFpC;AAGLC,UAAAA,IAAI,EAAEnB;AAHD,SAAD,CAAR;AAKH;AACJ;;AAAA;AACR,GAX2B,EAWzB,CAACK,WAAD,EAAcD,SAAS,CAACa,MAAxB,CAXyB,CAA5B;AAaAzB,EAAAA,SAAS,CAAE,MAAM;AACbiB,IAAAA,MAAM,CAACW,gBAAP,CAAwB,QAAxB,EAAkCZ,QAAlC;AACA,WAAO,MAAM;AAAG;AACZC,MAAAA,MAAM,CAACY,mBAAP,CAA2B,QAA3B,EAAqCb,QAArC;AACH,KAFD;AAGH,GALQ,EAKN,CAACJ,SAAS,CAACa,MAAX,CALM,CAAT,CAlByB,CAuBD;;AAExB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKb,SAAS,CAACkB,GAAV,CAAcC,CAAC,IACZ,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,CAAC,CAACL,EAAjB;AAAqB,IAAA,IAAI,EAAEK,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CADJ;AAOH,CAhCD;;AAkCAxB,OAAO,CAACyB,SAAR,GAAoB;AAChBxB,EAAAA,GAAG,EAAEN,SAAS,CAAC+B,MAAV,CAAiBC;AADN,CAApB;;AAIA3B,OAAO,CAAC4B,eAAR,GAA0B,MAAOC,OAAP,IAAmB;AACzC,QAAM5B,GAAG,GAAG4B,OAAO,CAACC,KAAR,CAAc7B,GAA1B,CADyC,CAEzC;;AACA4B,EAAAA,OAAO,CAACE,KAAR,CAAc3B,QAAd,CAAuB;AACnBY,IAAAA,IAAI,EAAEjB,0BADa;AAEnBqB,IAAAA,IAAI,EAAEnB;AAFa,GAAvB;AAIA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACH,CARD;;AAUA,eAAeD,OAAf","sourcesContent":["import React, { useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport PostCard from '../components/PostCard'\nimport {useDispatch, useSelector } from 'react-redux';\nimport {LOAD_HASHTAG_POSTS_REQUEST} from '../reducers/post';\n\n\n \nconst Hashtag = ({ tag }) => {\n    console.log(\"tag : \", tag);\n    const dispatch = useDispatch();\n    const {mainPosts, hasMorePost } = useSelector( state => state.post );\n\n    const onScroll = useCallback( () => {\n        if (window.scrollY + document.documentElement.clientHeight \n            > document.documentElement.scrollHeight - 300 ) {\n                if (hasMorePost) {\n                    dispatch({\n                        type: LOAD_HASHTAG_POSTS_REQUEST,\n                        lastId: mainPosts[mainPosts.length - 1 ].id,\n                        data: tag\n                    })\n                }\n            };\n    }, [hasMorePost, mainPosts.length]);\n\n    useEffect( () => {\n        window.addEventListener('scroll', onScroll);\n        return () => {  // 이렇게 해야 호출될때 아래가 실행됨, 본 컴포넌트 나갈때 실행됨\n            window.removeEventListener('scroll', onScroll);\n        }\n    }, [mainPosts.length]); //  빈 deps [], 는 처음 로딩될때 한 번만 호출됨\n\n    return (\n        <div>\n            {mainPosts.map(c => (\n                <PostCard key={c.id} post={c} />\n            ))}\n        </div>\n    );\n};\n\nHashtag.propTypes = {\n    tag: PropTypes.string.isRequired,\n};\n\nHashtag.getInitialProps = async (context) => {\n    const tag = context.query.tag;\n    //console.log('hashtag getInitialProps', context.query.tag);\n    context.store.dispatch({\n        type: LOAD_HASHTAG_POSTS_REQUEST,\n        data: tag,\n    })\n    return { tag };\n}\n\nexport default Hashtag;"]},"metadata":{},"sourceType":"module"}