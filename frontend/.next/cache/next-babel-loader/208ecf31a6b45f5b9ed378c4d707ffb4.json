{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport Helmet from 'react-helmet';\nimport { LOAD_POST_REQUEST } from '../reducers/post';\n\nvar SingePost = function SingePost(_ref) {\n  var id = _ref.id;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      singlePost = _useSelector.singlePost;\n\n  return __jsx(React.Fragment, null, __jsx(Helmet, {\n    title: \"\".concat(singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAE00\"),\n    description: singlePost.content,\n    meta: [{\n      name: 'description',\n      content: singlePost.content\n    }, {\n      property: 'og:title',\n      content: \"\".concat(singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n    }, {\n      property: 'og:description',\n      content: singlePost.content\n    }, {\n      property: 'og:image',\n      content: singlePost.Images[0] && \"http://localhost:3065/\".concat(singlePost.Images[0].src)\n    }, {\n      property: 'og:url',\n      content: \"http://localhost:3060/post/\".concat(id)\n    }]\n  }), __jsx(\"div\", null, singlePost.content), __jsx(\"div\", null, singlePost.User.nickname), __jsx(\"div\", null, singlePost.Images[0] && __jsx(\"img\", {\n    src: \"http://localhost:3065/\".concat(singlePost.Images[0].src)\n  })));\n};\n\nSingePost.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\" check InitialProps context.query.id : \", context.query.id);\n            context.store.dispatch({\n              type: LOAD_POST_REQUEST,\n              data: context.query.id\n            });\n            return _context.abrupt(\"return\", {\n              id: _parseInt(context.query.id, 10)\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default SingePost;","map":{"version":3,"sources":["/app/frontend/pages/singlePost.js"],"names":["React","useSelector","Helmet","LOAD_POST_REQUEST","SingePost","id","state","post","singlePost","User","nickname","content","name","property","Images","src","getInitialProps","context","console","log","query","store","dispatch","type","data"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAa;AAAA,MAATC,EAAS,QAATA,EAAS;;AAAA,qBACJJ,WAAW,CAAE,UAAAK,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAP,CADP;AAAA,MACnBC,UADmB,gBACnBA,UADmB;;AAE3B,SACI,4BACI,MAAC,MAAD;AACI,IAAA,KAAK,YAAKA,UAAU,CAACC,IAAX,CAAgBC,QAArB,wBADT;AAEI,IAAA,WAAW,EAAEF,UAAU,CAACG,OAF5B;AAGI,IAAA,IAAI,EAAE,CAAC;AACHC,MAAAA,IAAI,EAAE,aADH;AACkBD,MAAAA,OAAO,EAAEH,UAAU,CAACG;AADtC,KAAD,EAEJ;AACEE,MAAAA,QAAQ,EAAE,UADZ;AACwBF,MAAAA,OAAO,YAAKH,UAAU,CAACC,IAAX,CAAgBC,QAArB;AAD/B,KAFI,EAIJ;AACEG,MAAAA,QAAQ,EAAE,gBADZ;AAC8BF,MAAAA,OAAO,EAAEH,UAAU,CAACG;AADlD,KAJI,EAMJ;AACEE,MAAAA,QAAQ,EAAE,UADZ;AACwBF,MAAAA,OAAO,EAAEH,UAAU,CAACM,MAAX,CAAkB,CAAlB,qCAAiDN,UAAU,CAACM,MAAX,CAAkB,CAAlB,EAAqBC,GAAtE;AADjC,KANI,EAQJ;AACEF,MAAAA,QAAQ,EAAE,QADZ;AACsBF,MAAAA,OAAO,uCAAgCN,EAAhC;AAD7B,KARI;AAHV,IADJ,EAgBI,mBAAMG,UAAU,CAACG,OAAjB,CAhBJ,EAiBI,mBAAMH,UAAU,CAACC,IAAX,CAAgBC,QAAtB,CAjBJ,EAkBI,mBACKF,UAAU,CAACM,MAAX,CAAkB,CAAlB,KAAwB;AAAK,IAAA,GAAG,kCAA2BN,UAAU,CAACM,MAAX,CAAkB,CAAlB,EAAqBC,GAAhD;AAAR,IAD7B,CAlBJ,CADJ;AAwBH,CA1BD;;AA4BAX,SAAS,CAACY,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA4B,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AACxBC,YAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ,EAAuDF,OAAO,CAACG,KAAR,CAAcf,EAArE;AACAY,YAAAA,OAAO,CAACI,KAAR,CAAcC,QAAd,CAAuB;AACnBC,cAAAA,IAAI,EAAEpB,iBADa;AAEnBqB,cAAAA,IAAI,EAAEP,OAAO,CAACG,KAAR,CAAcf;AAFD,aAAvB;AAFwB,6CAMjB;AAAEA,cAAAA,EAAE,EAAE,UAASY,OAAO,CAACG,KAAR,CAAcf,EAAvB,EAA2B,EAA3B;AAAN,aANiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA;;AAaA,eAAeD,SAAf","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { LOAD_POST_REQUEST } from '../reducers/post';\n\nconst SingePost = ( { id }) => {\n    const { singlePost } = useSelector( state => state.post );\n    return (\n        <>\n            <Helmet\n                title={`${singlePost.User.nickname}님의 글`}\n                description={singlePost.content}\n                meta={[{\n                    name: 'description', content: singlePost.content,\n                },{\n                    property: 'og:title', content: `${singlePost.User.nickname}님의 게시글`,\n                },{\n                    property: 'og:description', content: singlePost.content,\n                },{\n                    property: 'og:image', content: singlePost.Images[0] && `http://localhost:3065/${singlePost.Images[0].src}`,\n                },{\n                    property: 'og:url', content: `http://localhost:3060/post/${id}`,\n                }]}\n            />\n            <div>{singlePost.content}</div> \n            <div>{singlePost.User.nickname}</div>\n            <div>\n                {singlePost.Images[0] && <img src={`http://localhost:3065/${singlePost.Images[0].src}`} />}\n            </div>\n        </>\n    );\n};\n\nSingePost.getInitialProps = async (context) => {\n    console.log(\" check InitialProps context.query.id : \", context.query.id);\n    context.store.dispatch({\n        type: LOAD_POST_REQUEST,\n        data: context.query.id,\n    });\n    return { id: parseInt(context.query.id, 10)}\n};\n\nSingePost.propTypes = {\n    id: PropTypes.number.isRequired,\n}\n\nexport default SingePost;"]},"metadata":{},"sourceType":"module"}