{"ast":null,"code":"var _jsxFileName = \"/app/frontend/containers/ProfileImg.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect, useRef } from 'react';\nimport { Form, Input, Button, Card, Carousel, Upload, message, Icon, Avatar } from 'antd';\nimport Img from 'react-image';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { UPLOAD_PROFILE_IMAGES_REQUEST } from '../reducers/user';\n\nconst ProfileImg = () => {\n  const dispatch = useDispatch();\n  const {\n    0: which,\n    1: setWhich\n  } = useState(0);\n  const imageInput = useRef();\n  const {\n    profileImg,\n    me\n  } = useSelector(state => state.user);\n\n  function onChangeCarousel(which) {\n    console.log('which : ', which);\n    setWhich(which);\n  }\n\n  const onChangeImages = useCallback(e => {\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, f => {\n      console.log(\" in forEach() f : \", f);\n      imageFormData.append('image', f);\n    });\n    dispatch({\n      type: UPLOAD_PROFILE_IMAGES_REQUEST,\n      data: imageFormData,\n      userId: me.id //  whatType: \"image\",              // body 에서 처리 안됨(multer)\n      //  description: \"사용자 프로필 이미지\",\n\n    });\n  }, []);\n  const onClickImageUpload = useCallback(() => {\n    console.log(\"imageInput.current : \", imageInput.current);\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const onRemoveImage = useCallback(index => () => {\n    dispatch({\n      type: REMOVE_PROFILE_IMAGE,\n      index\n    });\n  }, []);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(Carousel, {\n    afterChange: onChangeCarousel,\n    style: {\n      width: 240,\n      padding: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    onChange: onChangeImages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, profileImg && profileImg.length >= which + 1 ? '이미지 바꾸기' : '이미지 업로드')), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    onChange: onChangeImages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, profileImg && profileImg.length >= which + 1 ? '이미지 바꾸기' : '이미지 업로드')), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    onChange: onChangeImages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, profileImg && profileImg.length >= which + 1 ? '이미지 바꾸기' : '이미지 업로드'))), profileImg.filter((v, i) => i === which).map((v, i) => __jsx(\"div\", {\n    key: v,\n    style: {\n      display: 'inline-block'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: `http://localhost:3065/${v}`,\n    style: {\n      width: '200px'\n    },\n    alt: v,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(Button, {\n    onClick: onRemoveImage(i),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"\\uC81C\\uAC70\")))));\n};\n\nexport default ProfileImg;","map":null,"metadata":{},"sourceType":"module"}