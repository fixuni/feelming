{"ast":null,"code":"import _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport Document, { Main, NextScript } from 'next/document';\nimport { ServerStyleSheet } from 'styled-components';\n\nclass MyDocument extends Document {\n  static getInitialProps(context) {\n    const sheet = new ServerStyleSheet();\n    const page = context.renderPage(App => props => sheet.collectStyles(__jsx(App, props)));\n    const styledTags = sheet.getStyleElement();\n    return _objectSpread({}, page, {\n      helmet: Helmet.renderStatic(),\n      styledTags\n    });\n  }\n\n  render() {\n    const _this$props$helmet = this.props.helmet,\n          {\n      htmlAttributes,\n      bodyAttributes\n    } = _this$props$helmet,\n          helmet = _objectWithoutProperties(_this$props$helmet, [\"htmlAttributes\", \"bodyAttributes\"]);\n\n    const htmlAttrs = htmlAttributes.toComponent();\n    const bodyAttrs = bodyAttributes.toComponent(); //console.log( \"helmet : \", helmet);\n\n    return __jsx(\"html\", htmlAttrs, __jsx(\"head\", null, this.props.styledTags, _Object$values(helmet).map(el => el.toComponent())), __jsx(\"body\", bodyAttrs, __jsx(Main, null), __jsx(NextScript, null)));\n  }\n\n}\n\nMyDocument.propTypes = {\n  helmet: PropTypes.object.isRequired,\n  styledTags: PropTypes.object.isRequired\n};\nexport default MyDocument;","map":null,"metadata":{},"sourceType":"module"}