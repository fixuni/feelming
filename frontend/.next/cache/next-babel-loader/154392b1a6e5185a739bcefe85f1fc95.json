{"ast":null,"code":"var _jsxFileName = \"/app/frontend/pages/profile.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useCallback, useState } from 'react';\nimport { Form, Button, List, Card, Icon, Input } from 'antd';\nimport PostCard from '../containers/PostCard';\nimport { useDispatch, useSelector } from 'react-redux';\nimport NicknameEditForm from '../containers/NicknameEditForm';\nimport FollowList from '../containers/FollowList';\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, UNFOLLOW_USER_REQUEST, REMOVE_FOLLOWER_REQUEST } from '../reducers/user';\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const {\n    me,\n    followerList,\n    followingList,\n    hasMoreFollower,\n    hasMoreFollowing\n  } = useSelector(state => state.user);\n  const {\n    mainPosts\n  } = useSelector(state => state.post); // useEffect ( () => {\n  //     if (me) {\n  //     }\n  // }, [me && me.id ]);\n\n  const onUnfollow = useCallback(userId => () => {\n    dispatch({\n      type: UNFOLLOW_USER_REQUEST,\n      data: userId\n    });\n  }, []);\n  const onRemoveFollower = useCallback(userId => () => {\n    dispatch({\n      type: REMOVE_FOLLOWER_REQUEST,\n      data: userId\n    });\n  }, []);\n  const loadMoreFollowings = useCallback(() => {\n    dispatch({\n      type: LOAD_FOLLOWINGS_REQUEST,\n      offset: followingList.length\n    });\n  }, [followingList.length]);\n  const loadMoreFollowers = useCallback(() => {\n    dispatch({\n      type: LOAD_FOLLOWERS_REQUEST,\n      offset: followerList.length\n    });\n  }, [followerList.length]);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(NicknameEditForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), __jsx(List, {\n    style: {\n      marginBottom: '20px'\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \" \\uD314\\uB85C\\uC719 \\uBAA9\\uB85D \"),\n    loadMore: hasMoreFollowing && __jsx(Button, {\n      style: {\n        width: '100%'\n      },\n      onClick: loadMoreFollowings,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \" \\uB354 \\uBCF4\\uAE30 \"),\n    dataSource: followingList,\n    renderItem: item => __jsx(List.Item, {\n      style: {\n        marginTop: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, __jsx(Card, {\n      actions: [__jsx(Icon, {\n        key: \"icon\",\n        type: \"stop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })],\n      onClick: onUnfollow(item.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, __jsx(Card.Meta, {\n      description: item.nickname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), __jsx(List, {\n    style: {\n      marginBottom: '20px'\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \" \\uD314\\uB85C\\uC6CC \\uBAA9\\uB85D \"),\n    loadMore: hasMoreFollower && __jsx(Button, {\n      style: {\n        width: '100%'\n      },\n      onClick: loadMoreFollowers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \" \\uB354 \\uBCF4\\uAE30 \"),\n    dataSource: followerList,\n    renderItem: item => __jsx(List.Item, {\n      style: {\n        marginTop: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, __jsx(Card, {\n      actions: [__jsx(Icon, {\n        key: \"icon\",\n        type: \"stop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })],\n      onClick: onRemoveFollower(item.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, __jsx(Card.Meta, {\n      description: item.nickname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, mainPosts.map(c => __jsx(PostCard, {\n    key: +c.createdAt,\n    post: c,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }))));\n};\n\nProfile.getInitialProps = async context => {\n  const state = context.store.getState(); // 이 직전에 LOAD_USERS_REQUEST  가 완료돼야함\n  // 따라서 me = null 이면 나로 인식하게 아래 reducer 를 처리하다\n\n  context.store.dispatch({\n    type: LOAD_FOLLOWERS_REQUEST,\n    data: state.user.me && state.user.me.id\n  });\n  context.store.dispatch({\n    type: LOAD_FOLLOWINGS_REQUEST,\n    data: state.user.me && state.user.me.id\n  });\n  context.store.dispatch({\n    type: LOAD_USER_POSTS_REQUEST,\n    data: state.user.me && state.user.me.id\n  });\n};\n\nexport default Profile;","map":null,"metadata":{},"sourceType":"module"}