{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/app/frontend/pages/_app.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Head from 'next/head';\nimport PropTypes from 'prop-types';\nimport AppLayout from '../components/AppLayout';\nimport reducer from '../reducers';\nimport withRedux from 'next-redux-wrapper';\nimport withReduxSaga from 'next-redux-saga';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\nimport { Provider } from 'react-redux';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { initialState } from '../reducers/user';\nimport { composeWithDevTools } from 'remote-redux-devtools';\nimport axios from 'axios';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\n\nconst Feelming = ({\n  Component,\n  store,\n  pageProps\n}) => {\n  return __jsx(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Feelming\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.23.2/antd.css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), __jsx(\"script\", {\n    src: \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.23.2/antd\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    type: \"text/css\",\n    charSet: \"UTF-8\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    type: \"text/css\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })), __jsx(AppLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(Component, _extends({}, pageProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }))));\n};\n\nFeelming.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  store: PropTypes.object.isRequired,\n  pageProps: PropTypes.object.isRequired\n};\n\nFeelming.getInitialProps = async context => {\n  //console.log(context);\n  const {\n    ctx\n  } = context;\n  let pageProps = {};\n  const state = ctx.store.getState(); // 로그인 정보 호출하는 부분\n\n  const cookie = ctx.isServer ? ctx.req.headers.cookies : '';\n\n  if (ctx.isServer && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  if (!state.user.me) {\n    ctx.store.dispatch({\n      type: LOAD_USER_REQUEST\n    });\n  } // 메인 포스트 가져오는 부분\n\n\n  if (context.Component.getInitialProps) {\n    pageProps = await context.Component.getInitialProps(ctx);\n  }\n\n  return {\n    pageProps\n  };\n};\n\nconst configureStore = (initialState, options) => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const enhancer = process.env.NODE_DEV === 'production' ? compose(applyMiddleware(...middlewares)) : compose(applyMiddleware(...middlewares), // typeof window !== 'undefined'\n  !options.isServer && window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f);\n  const store = createStore(reducer, initialState, enhancer); //sagaMiddleware.run(rootSaga);\n\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default withRedux(configureStore)(withReduxSaga(Feelming)); // _document.js      html, head, body\n// _app.js           root\n// pages             실제 컴포넌트\n//  _error.js    \n\n/*\n// curring 기법,  인자를 넣어주고 결과로 함수를 받음\nconst middlewares = (store) => (next) => (action) => {\n   console.log(action);\n   next(action);\n}\nconst hoc = (mapStateToProps) => (Component) => () => {\n   console.log(\"I am hoc\");\n   return (\n       <Component props={mapStateToProps()} />\n   )\n}\n \n// 하이 오더 컴포넌트\nhoc(Component)\nconnect(mapStateToProps)(Component);\n*/","map":{"version":3,"sources":["/app/frontend/pages/_app.js"],"names":["React","Component","Head","PropTypes","AppLayout","reducer","withRedux","withReduxSaga","createSagaMiddleware","rootSaga","Provider","createStore","compose","applyMiddleware","initialState","composeWithDevTools","axios","LOAD_USER_REQUEST","Feelming","store","pageProps","propTypes","elementType","isRequired","object","getInitialProps","context","ctx","state","getState","cookie","isServer","req","headers","cookies","defaults","Cookie","user","me","dispatch","type","configureStore","options","sagaMiddleware","middlewares","enhancer","process","env","NODE_DEV","window","__REDUX_DEVTOOLS_EXTENSION__","f","sagaTask","run"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Head from 'next/head';\nimport PropTypes from 'prop-types';\nimport AppLayout from '../components/AppLayout';\nimport reducer from '../reducers';\nimport withRedux from 'next-redux-wrapper';\nimport withReduxSaga from 'next-redux-saga';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\nimport { Provider } from 'react-redux';\nimport {createStore, compose, applyMiddleware } from 'redux';\nimport { initialState } from '../reducers/user';\nimport { composeWithDevTools } from 'remote-redux-devtools';\nimport axios from 'axios';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\n\n\nconst Feelming = ({ Component, store, pageProps }) => {\n    return (\n        <Provider store={store} >\n            <Head>\n                <title>Feelming</title>\n                <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.23.2/antd.css\" />\n                <script src=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.23.2/antd\" />\n                <link rel=\"stylesheet\" type=\"text/css\" charSet=\"UTF-8\" href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css\" />\n                <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css\" />\n            </Head>\n            <AppLayout>\n                <Component {...pageProps} />\n            </AppLayout>\n        </Provider>\n    );\n};\n\nFeelming.propTypes = {\n    Component: PropTypes.elementType.isRequired,\n    store: PropTypes.object.isRequired,\n    pageProps: PropTypes.object.isRequired,\n};\n\nFeelming.getInitialProps = async (context) => {\n    //console.log(context);\n    const { ctx } = context;\n    let pageProps = {};\n    const state = ctx.store.getState();\n\n    // 로그인 정보 호출하는 부분\n    const cookie = ctx.isServer ?  ctx.req.headers.cookies : '';\n    if (ctx.isServer && cookie) {\n        axios.defaults.headers.Cookie = cookie;\n    }\n    if (!state.user.me) {\n        ctx.store.dispatch( {\n            type: LOAD_USER_REQUEST,\n        })\n    }\n\n    // 메인 포스트 가져오는 부분\n    if (context.Component.getInitialProps) {\n        pageProps = await context.Component.getInitialProps(ctx);\n    }\n    \n    return { pageProps };\n};\n\nconst configureStore = (initialState, options ) => {\n    const sagaMiddleware = createSagaMiddleware();\n    const middlewares = [sagaMiddleware];\n    const enhancer = process.env.NODE_DEV === 'production'\n        ? compose( applyMiddleware(...middlewares))\n        : compose(\n          applyMiddleware(...middlewares),   // typeof window !== 'undefined'\n          !options.isServer && window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f) => f,\n        );\n\n    const store = createStore(reducer, initialState, enhancer);\n    //sagaMiddleware.run(rootSaga);\n    store.sagaTask = sagaMiddleware.run(rootSaga);\n    return store;\n};\n\nexport default withRedux(configureStore)(withReduxSaga(Feelming));\n\n // _document.js      html, head, body\n // _app.js           root\n // pages             실제 컴포넌트\n\n //  _error.js    \n\n\n\n /*\n// curring 기법,  인자를 넣어주고 결과로 함수를 받음\nconst middlewares = (store) => (next) => (action) => {\n    console.log(action);\n    next(action);\n}\n\nconst hoc = (mapStateToProps) => (Component) => () => {\n    console.log(\"I am hoc\");\n    return (\n        <Component props={mapStateToProps()} />\n    )\n}\n\n \n// 하이 오더 컴포넌트\nhoc(Component)\nconnect(mapStateToProps)(Component);\n*/"]},"metadata":{},"sourceType":"module"}