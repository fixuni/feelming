{"version":3,"file":"static/webpack/static/development/pages/index.js.6662512ef7685877abfb.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport PostCard from '../components/PostCard';\nimport PostForm from '../components/PostForm';\nimport { useDispatch, useSelector, connect } from 'react-redux';\nimport { LOAD_MAIN_POSTS_REQUEST } from '../reducers/post';\n\n\nconst Home = () => {\n    const dispatch = useDispatch();\n    const { me } = useSelector( state => state.user );\n    const { mainPosts } = useSelector( state => state.post );\n\n    // useEffect( () => {\n    //     dispatch({\n            \n    //     });\n    // }, []);\n\n    return (\n        <div>\n            {me && <PostForm /> }\n            {mainPosts.map( (c,index) => {\n                return (\n                    <PostCard key={index} post={c} />\n                );\n            })}\n        </div>\n    );\n};\n\nHome.getInitialProps = async (context) => {\n    context.store.dispatch({\n        type: LOAD_MAIN_POSTS_REQUEST,\n    })\n};\n\nexport default Home;\n\n// function mapStateToProps(state) {\n//     return {\n//         user: state.user,\n//     };\n// }\n\n// function mapDispatchToProps(dispatch) {\n//     return {\n//         login: () => dispatch(loginAction),\n//         logout: () => dispatch(logoutAction)\n//     };\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(Home);\n\n\n/*\n\n // Docker 재실행 방법\n docker ps          // 과거 실행 내역 조사 \n docker restart 이름,\n docker exec -it web(이름) /bin/bash\n npm run dev  // 백엔드 프런트엔드 각각 위치에서 실행 \n\n \n // Docker 초기 실행 방법\n Docker 실행 명령어\n docker mysql 실행\n docker run --name mysql -e MYSQL_ROOT_PASSWORD=mypass -d -p 3306:3306 mysql\n\n\n mysql 컨테이너에 접속하기\n docker exec -it mysql /bin/bash\n\n mysql 데이터베이스에 접근하기\n mysql -u root -p password\n\n\n\n\n Nodejs 서버 + mysql 연결하여  실행 \n docker run -it -p 3060:3060 -p 3065:3065 --volume=$(pwd):/app/  --name web --link mysql-db  -d node  \n\n NodeJs 컨테이너에 접속하기 \n docker exec -it web /bin/bash\n\n mysql 컨테이너 접속 아이피 찾기\n docker inspect bridge\n\n 찾은 아이피를 백엔드 db 설정 파일에 적는다\n /backend/config/config.js\n\n 백엔드와 프런트 서버를 각각 가동한다.\n\n\n\n \n Cube.js 가동하는 방법 on Docker\n\n 4000, 3050 포트를 호스트와 연결해 준다.\n \n\n*/"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAEA;AAAA;AAFA;AACA;AADA;AAGA;AAAA;AAHA;AAMA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAKA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}