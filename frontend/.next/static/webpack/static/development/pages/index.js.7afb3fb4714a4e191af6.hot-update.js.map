{"version":3,"file":"static/webpack/static/development/pages/index.js.7afb3fb4714a4e191af6.hot-update.js","sources":["webpack:///./reducers/user.js"],"sourcesContent":["import produce from 'immer';\n\n// const dummyUser = {\n//     nickname: '코드',\n//     Post: [],\n//     Followings: [],\n//     Followers: [],\n//     id: 1,  \n// };\n\n\n\nexport const initialState = {\n   // isLoggedIn: false,\n    isLoggingOut: false,   // 로그아웃 시도중\n    isLoggingIn: false,    // 로그인 시도중\n    logInErrorReason: '',  // 로그인 실퍠 상유\n    signedUp: false,      // 회원가입 성공\n    isSigningUp: false,   // 회원가입 시도중\n    signUpErrorReason: '', // 회원가입 실패 사유\n    me: null,\n    followingList: [],     // 팔로잉 리스트\n    followerList: [],     // 팔로워 리스트\n    userInfo: null,        // 남의 정보\n    isEditingNickname: false,\n    editNicknameErrorReason: '',\n    hasMoreFollower: false,\n    hasMoreFollowing: false,\n};\n\n\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\n\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\n\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\n\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\n\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE';\n\nexport const LOAD_FOLLOW_REQUEST = 'LOAD_FOLLOW_REQUEST';\nexport const LOAD_FOLLOW_SUCCESS = 'LOAD_FOLLOW_SUCCESS';\nexport const LOAD_FOLLOW_FAILURE = 'LOAD_FOLLOW_FAILURE';\n\nexport const FOLLOW_USER_REQUEST = 'FOLLOW_USER_REQUEST';\nexport const FOLLOW_USER_SUCCESS = 'FOLLOW_USER_SUCCESS';\nexport const FOLLOW_USER_FAILURE = 'FOLLOW_USER_FAILURE';\n\nexport const UNFOLLOW_USER_REQUEST = 'UNFOLLOW_USER_REQUEST';\nexport const UNFOLLOW_USER_SUCCESS = 'UNFOLLOW_USER_SUCCESS';\nexport const UNFOLLOW_USER_FAILURE = 'UNFOLLOW_USER_FAILURE';\n\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\n\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';     // post reducier 를 호출하는 부분 (다른 리듀서 호출)\n\nexport const EDIT_NICKNAME_REQUEST = 'EDIT_NICKNAME_REQUEST';\nexport const EDIT_NICKNAME_SUCCESS = 'EDIT_NICKNAME_SUCCESS';\nexport const EDIT_NICKNAME_FAILURE = 'EDIT_NICKNAME_FAILURE';\n\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\n\nexport const signupAction = (data) => ({\n    type: SIGN_UP_REQUEST,\n    data: data,\n});\n// export const signupAction = (data) => {\n//     return {\n//         type: SIGN_UP_REQUEST,\n//         data: data,\n//     };\n// };\n\nconst reducer = (state = initialState, action ) => {\n    return produce(state, (draft) => {\n    switch (action.type) {\n        case ADD_POST_TO_ME: {\n            draft.me.Posts.unshift({ id: action.data });\n            // return {\n            //     ...state,\n            //     me: {\n            //         ...state.me,\n            //         Posts: [{ id: action.data }, ...state.me.Posts],\n            //     },\n            // };\n        };\n        case LOG_IN_REQUEST: {\n            draft.isLoggingIn = true;\n            draft.logInErrorReason = '';\n            break;\n            // return {\n            //     ...state,\n            //     isLoggingIn: true,\n            // }\n        }\n        case LOG_IN_SUCCESS: {\n            draft.isLoggingIn = false;\n            draft.me = action.data;\n            draft.isLoading = false;\n            draft.logInErrorReason = '';\n            break;\n            // return {\n            //     ...state,\n            //     isLoggingIn: false,\n            //     //isLoggedIn: true,\n            //     //me: dummyUser,\n            //     me: action.data,\n            //     isLoading: false,\n            // }\n        }\n        case LOG_IN_FAILURE: {\n            draft.isLoggingIn =  false;\n            draft.logInErrorReason = action.error;\n            draft.me = null;\n            break;\n\n            // return {\n            //     ...state,\n            //     isLoggingIn: false,\n            //     //isLoggedIn: false,\n            //     logInErrorReason: action.error,\n            //     me: null,\n            // }\n        }\n        case LOG_OUT_REQUEST: {\n            draft.isLoggingOut = true;\n            break;\n        }\n        case LOG_OUT_SUCCESS: {\n            draft.isLoggingOut = true;\n            draft.me = null;\n            break;\n        }\n        case SIGN_UP_REQUEST: {\n            draft.isSigningUp = false;\n            draft.isSignedUp = true;\n            draft.signUpErrorReason = '';\n            break;\n        }\n        case SIGN_UP_SUCCESS: {\n            draft.isSigningUp = false;\n            draft.isSignedUp = true;\n            break;\n            // return {\n            //     ...state,\n            //     isSigningUp: false,\n            //     isSignedUp: true,\n            //     me : {\n            //         nickname: action.nickname,\n            //         // Post: [],\n            //         // Followings: [],\n            //         // Followers: [],\n            //         id: action.id,\n            //         userId: action.userId, \n            //     }\n            // };\n        }\n        case SIGN_UP_FAILURE: {\n            draft.isSigningUp = false;\n            draft.signUpErrorReason = action.error;\n            break;\n            // return {\n            //     ...state,\n            //     isSigningUp: false,\n            //     signUpErrorReason: action.error,\n            // };\n        }\n        case LOAD_USER_REQUEST: {\n            break;\n            // return {\n            //     ...state,\n            // }\n        }\n        case LOAD_USER_SUCCESS: {\n            if (action.me) {\n                draft.me = action.data;\n                break;\n            }\n            draft.userInfo = action.data;\n            break;\n            // if(action.me){\n            //     return {\n            //         ...state,\n            //         me: action.data,\n            //     };    \n            // }\n            // return {\n            //     ...state,\n            //     userInfo: action.data,\n            // }\n        }\n        case LOAD_USER_FAILURE: {\n            break;\n            // return {\n            //     ...state,\n            // };\n        }\n        case FOLLOW_USER_REQUEST: {\n            break;\n            // return {\n            //     ...state,\n            // }\n        }\n        case FOLLOW_USER_SUCCESS: {\n            draft.me.Followings.unshift({ id: action.data });\n            break;\n            // return {\n            //   ...state,\n            //   me: {\n            //     ...state.me,\n            //     Followings: [{ id: action.data }, ...state.me.Followings],\n            //   },\n            // };\n        }\n        case FOLLOW_USER_FAILURE: {\n            break;\n        }\n        case UNFOLLOW_USER_REQUEST: {\n            break;\n        }\n        case UNFOLLOW_USER_SUCCESS: {\n            const index = draft.me.Followings.findIndex( v => v.id === action.data);\n            draft.me.Followings.splice(index,1);\n            const index2 = draft.followingList.findIndex( v => v.id === action.data );\n            draft.followingList.splice(index2, 1);\n            break;\n            // return {\n            //   ...state,\n            //   me: {\n            //     ...state.me,\n            //     Followings: state.me.Followings.filter(v => v.id !== action.data),\n            //   },\n            //   followingList: state.followingList.filter(v => v.id !== action.data),\n            // };\n        }\n        case UNFOLLOW_USER_FAILURE: {\n            break;\n        }\n        case LOAD_FOLLOWERS_REQUEST: {\n            draft.followerList = !action.offset ? [] : draft.followerList;\n            draft.hasMoreFollower = action.offset ? draft.hasMoreFollower : true;\n            // return {\n            //     ...state,\n            //     // 처음 데이터를 가져올 때는 더보기 버튼을 보여준다\n            //     hasMoreFollower: action.offset ? state.hasMoreFollower : true,\n            // };\n        }\n        case LOAD_FOLLOWERS_SUCCESS: {\n            \n            // return {\n            //   ...state,\n            //   followerList: state.followerList.concat(action.data),\n            //   hasMoreFollower: action.data.length === 3, // true or false\n            // };\n          }\n        case LOAD_FOLLOWERS_FAILURE: {\n            break;\n        }\n        case LOAD_FOLLOWINGS_REQUEST: {\n            draft.followingList = !action.offset ? [] : draft.followingList;\n            draft.hasMoreFollowing = action.offset ? draft.hasMoreFollowing : true;\n            // return {\n            //     ...state,\n            //     hasMoreFollowing: action.offset ? state.hasMoreFollowing : true,\n            // }\n        }\n        case LOAD_FOLLOWINGS_SUCCESS: {\n            action.data.forEach((d) => {\n                draft.followingList.push(d);\n            });\n            draft.hasMoreFollowing = action.data.length === 3;\n            // return {\n            //   ...state,\n            //   followingList: state.followingList.concat(action.data),\n            //   hasMoreFollowing: action.data.length === 3, // true or false\n            // };\n        }\n        case LOAD_FOLLOWINGS_FAILURE: {\n            break;\n        }\n        case REMOVE_FOLLOWER_REQUEST: {\n            break;\n        }\n        case REMOVE_FOLLOWER_SUCCESS: {\n            return {\n              ...state,\n              me: {\n                  ...state.me,\n                  Followers: state.me.Followers.filter( v=> v.id !== action.data),\n              },\n              followerList: state.followerList.filter(v => v.id !== action.data),\n            };\n          }\n        case REMOVE_FOLLOWER_FAILURE: {\n            return {\n                ...state,\n            }\n        }\n        case EDIT_NICKNAME_REQUEST: {\n            return {\n                ...state,\n                isEditingNickname: true,\n                editNicknameErrorReason: '',\n            }\n        }\n        case EDIT_NICKNAME_SUCCESS: {\n            return {\n              ...state,\n              isEditingNickname: false,\n              me: {\n                  ...state.me,\n                  nickname: action.data,\n              },\n            };\n          }\n        case EDIT_NICKNAME_FAILURE: {\n            return {\n                ...state,\n                editNicknameErrorReason: action.error,\n            }\n        }\n        case REMOVE_POST_OF_ME: {\n            return {\n              ...state,\n              me: {\n                  ...state.me,\n                  Posts: state.me.Posts.filter( v=> v.id !== action.data),\n              },\n            };\n          }\n        default: {\n            return {\n                ...state,\n            }\n        }\n    }\n    });\n}\n\nexport default reducer;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAfA;AAmBA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AANA;AAQA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AAFA;AAHA;AAQA;AACA;AAAA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AAFA;AAFA;AAOA;AACA;AAAA;AAAA;AACA;AAGA;AAnQA;AAqQA;AACA;AACA;AACA;;;;A","sourceRoot":""}