{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\n// export const initialState = {\n//     mainPosts: [{\n//         // id: 1,\n//         // User: {\n//         //     id: 1,\n//         //     nickname: \"코드\",\n//         // },\n//         // content: \"첫 번째 게시글\",\n//         // img: \"https://blog.yena.io/assets/post-img/171123-nachoi-300.jpg\",\n//         // Comments: [],\n//     }],                 // 화면에 보일 포스트들\n//     imagePaths: [],     // 미리보기 이미지 경로\n//     addPostErrorReason:'',  // 포스트 업로드 실패 사유\n//     isAddingPost: false,        // 포스트 업로드 중\n//     postAdded: false,           // 포스트 업로드 성공,\n//     isAddingComment:false,\n//     addCommentErrorReason: '',\n//     commentAdded: false,\n// };\n// const dummyPost = {\n//     id: 2,\n//     User: {\n//         id: 1,\n//         nickname: '코드',\n//     },\n//     content: '나는 더미입니다',\n//     Comments: [],\n// }\n// const dummyComment = {\n//     id: 1,\n//     User: {\n//         id: 1,\n//         nickname: 2,\n//     },\n//     createdAt: new Date(),\n//     content: '더미 댓글입니다',\n// }\nexport const initialState = {\n  mainPosts: [],\n  // 화면에 보일 포스트들\n  imagePaths: [],\n  // 미리보기 이미지 경로\n  addPostErrorReason: '',\n  // 포스트 업로드 실패 사유\n  isAddingPost: false,\n  // 포스트 업로드 중\n  postAdded: false,\n  // 포스트 업로드 성공\n  isAddingComment: false,\n  addCommentErrorReason: '',\n  commentAdded: false,\n  singlePost: null\n};\nexport const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\nexport const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\nexport const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport const LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST';\nexport const LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\nexport const LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE';\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_COMMENTS_REQUEST:\n    case LOAD_HASHTAG_POSTS_REQUEST:\n    case LOAD_USER_POSTS_REQUEST:\n    case LOAD_MAIN_POSTS_REQUEST:\n      {\n        console.log(\"LOAD_  _REQUEST : \", action);\n        return _objectSpread({}, state, {\n          mainPosts: []\n        });\n      }\n\n    case LOAD_USER_POSTS_SUCCESS:\n    case LOAD_HASHTAG_POSTS_SUCCESS:\n    case LOAD_MAIN_POSTS_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: action.data\n        });\n      }\n\n    case LOAD_COMMENTS_FAILURE:\n    case LOAD_HASHTAG_POSTS_FAILURE:\n    case LOAD_USER_POSTS_FAILURE:\n    case LOAD_MAIN_POSTS_FAILURE:\n      {\n        console.log(\"LOAD_   _FAILURE : \", action);\n        return _objectSpread({}, state);\n      }\n\n    case ADD_POST_REQUEST:\n      {\n        //console.log(\" in Reducuer ADD_POST_REQUEST : \", action)\n        return _objectSpread({}, state, {\n          isAddingPost: true,\n          addPostErrorReason: '',\n          postAdded: false\n        });\n      }\n\n    case ADD_POST_SUCCESS:\n      {\n        //console.log(\" in Reducuer ADD_POST_SUCCESS : \", action)\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          //mainPosts: [dummyPost, ...state.mainPosts],\n          mainPosts: [action.data, ...state.mainPosts],\n          postAdded: true,\n          imagePaths: []\n        });\n      }\n\n    case ADD_POST_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          addPostErrorReason: action.error\n        });\n      }\n\n    case ADD_COMMENT_REQUEST:\n      {\n        // console.log(\" in Reducuer ADD_COMMENT_REQUEST :  \", action)\n        return _objectSpread({}, state, {\n          isAddingComment: true,\n          addCommentErrorReason: '',\n          commentAdded: false\n        });\n      }\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        // console.log(\" in Reducuer ADD_COMMENT_SUCCESS :  \", action)\n        // console.log(\" chk state : \", state)\n        // console.log(\" state.mainPosts[0] : \", state.mainPosts[0]);\n        // try {   \n        const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n        const post = state.mainPosts[postIndex];\n        const Comments = [...post.Comments, action.data.comment];\n        const mainPosts = [...state.mainPosts];\n        mainPosts[postIndex] = _objectSpread({}, post, {\n          Comments\n        }); // } catch (e) {\n        //     console.log(\"reducer error : \", e);\n        // }\n\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          mainPosts,\n          //mainPosts : mainPosts,\n          commentAdded: true\n        });\n      }\n\n    case ADD_COMMENT_FAILURE:\n      {\n        console.log(\" in Reducuer ADD_COMMENT_FAILURE :  \", action);\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          addCommentErrorReason: action.error\n        });\n      }\n\n    case LOAD_COMMENTS_SUCCESS:\n      {\n        // try {\n        const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n        const post = state.mainPosts[postIndex];\n        const Comments = action.data.comments;\n        const mainPosts = [...state.mainPosts];\n        mainPosts[postIndex] = _objectSpread({}, post, {\n          Comments\n        }); // } catch (e){\n        //     console.log(\"reducer error : \", e);\n        // }\n\n        console.log('LOAD_COMMENTS_SUCCESS state : ', state); //console.log('LOAD_COMMENTS_SUCCESS ...state : ', ...state)\n\n        return _objectSpread({}, state, {\n          mainPosts //mainPosts : mainPosts,\n\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mac/work/feelming/frontend/reducers/post.js"],"names":["initialState","mainPosts","imagePaths","addPostErrorReason","isAddingPost","postAdded","isAddingComment","addCommentErrorReason","commentAdded","singlePost","LOAD_MAIN_POSTS_REQUEST","LOAD_MAIN_POSTS_SUCCESS","LOAD_MAIN_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","REMOVE_IMAGE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_COMMENTS_REQUEST","LOAD_COMMENTS_SUCCESS","LOAD_COMMENTS_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","reducer","state","action","type","console","log","data","error","postIndex","findIndex","v","id","postId","post","Comments","comment","comments"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,SAAS,EAAE,EADa;AACT;AACfC,EAAAA,UAAU,EAAE,EAFY;AAER;AAChBC,EAAAA,kBAAkB,EAAE,EAHI;AAGA;AACxBC,EAAAA,YAAY,EAAE,KAJU;AAIH;AACrBC,EAAAA,SAAS,EAAE,KALa;AAKN;AAClBC,EAAAA,eAAe,EAAE,KANO;AAOxBC,EAAAA,qBAAqB,EAAE,EAPC;AAQxBC,EAAAA,YAAY,EAAE,KARU;AASxBC,EAAAA,UAAU,EAAE;AATY,CAArB;AAYP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AAEP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AAEP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AAEP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AAEP,OAAO,MAAMC,YAAY,GAAG,cAArB;AAEP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AAEP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;;AAGP,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG7C,YAAT,EAAuB8C,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,qBAAL;AACA,SAAKtB,0BAAL;AACA,SAAKG,uBAAL;AACA,SAAKN,uBAAL;AAA8B;AAC1BsC,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCH,MAAlC;AACA,iCACOD,KADP;AAEI5C,UAAAA,SAAS,EAAE;AAFf;AAIH;;AACD,SAAKgB,uBAAL;AACA,SAAKH,0BAAL;AACA,SAAKH,uBAAL;AAA8B;AAC1B,iCACOkC,KADP;AAEI5C,UAAAA,SAAS,EAAE6C,MAAM,CAACI;AAFtB;AAIH;;AACD,SAAKb,qBAAL;AACA,SAAKtB,0BAAL;AACA,SAAKG,uBAAL;AACA,SAAKN,uBAAL;AAA8B;AAC1BoC,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCH,MAAnC;AACA,iCACOD,KADP;AAGH;;AACD,SAAKtB,gBAAL;AAAuB;AACnB;AACA,iCACOsB,KADP;AAEIzC,UAAAA,YAAY,EAAE,IAFlB;AAGID,UAAAA,kBAAkB,EAAE,EAHxB;AAIIE,UAAAA,SAAS,EAAE;AAJf;AAMH;;AACD,SAAKmB,gBAAL;AAAuB;AACnB;AACA,iCACOqB,KADP;AAEIzC,UAAAA,YAAY,EAAE,KAFlB;AAGI;AACAH,UAAAA,SAAS,EAAE,CAAC6C,MAAM,CAACI,IAAR,EAAc,GAAGL,KAAK,CAAC5C,SAAvB,CAJf;AAKII,UAAAA,SAAS,EAAE,IALf;AAMIH,UAAAA,UAAU,EAAE;AANhB;AAQH;;AACD,SAAKuB,gBAAL;AAAuB;AACnB,iCACOoB,KADP;AAEIzC,UAAAA,YAAY,EAAE,KAFlB;AAGID,UAAAA,kBAAkB,EAAE2C,MAAM,CAACK;AAH/B;AAKH;;AACD,SAAKzB,mBAAL;AAA0B;AACvB;AACC,iCACOmB,KADP;AAEIvC,UAAAA,eAAe,EAAE,IAFrB;AAGIC,UAAAA,qBAAqB,EAAE,EAH3B;AAIIC,UAAAA,YAAY,EAAE;AAJlB;AAMH;;AACD,SAAKmB,mBAAL;AAA0B;AACtB;AACA;AACA;AAED;AACK,cAAMyB,SAAS,GAAGP,KAAK,CAAC5C,SAAN,CAAgBoD,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAAST,MAAM,CAACI,IAAP,CAAYM,MAApD,CAAlB;AACA,cAAMC,IAAI,GAAGZ,KAAK,CAAC5C,SAAN,CAAgBmD,SAAhB,CAAb;AACA,cAAMM,QAAQ,GAAG,CAAC,GAAGD,IAAI,CAACC,QAAT,EAAmBZ,MAAM,CAACI,IAAP,CAAYS,OAA/B,CAAjB;AACA,cAAM1D,SAAS,GAAG,CAAC,GAAG4C,KAAK,CAAC5C,SAAV,CAAlB;AACAA,QAAAA,SAAS,CAACmD,SAAD,CAAT,qBAA2BK,IAA3B;AAAiCC,UAAAA;AAAjC,WAVkB,CAWtB;AACA;AACA;;AAEA,iCACOb,KADP;AAEIvC,UAAAA,eAAe,EAAE,KAFrB;AAGIL,UAAAA,SAHJ;AAII;AACAO,UAAAA,YAAY,EAAE;AALlB;AAOH;;AACD,SAAKoB,mBAAL;AAA0B;AACtBoB,QAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDH,MAApD;AACA,iCACOD,KADP;AAEIvC,UAAAA,eAAe,EAAE,KAFrB;AAGIC,UAAAA,qBAAqB,EAAEuC,MAAM,CAACK;AAHlC;AAKH;;AACD,SAAKf,qBAAL;AAA4B;AAC1B;AACM,cAAMgB,SAAS,GAAGP,KAAK,CAAC5C,SAAN,CAAgBoD,SAAhB,CAA2BC,CAAC,IAAGA,CAAC,CAACC,EAAF,KAAST,MAAM,CAACI,IAAP,CAAYM,MAApD,CAAlB;AACA,cAAMC,IAAI,GAAGZ,KAAK,CAAC5C,SAAN,CAAgBmD,SAAhB,CAAb;AACA,cAAMM,QAAQ,GAAGZ,MAAM,CAACI,IAAP,CAAYU,QAA7B;AACA,cAAM3D,SAAS,GAAG,CAAC,GAAG4C,KAAK,CAAC5C,SAAV,CAAlB;AACAA,QAAAA,SAAS,CAACmD,SAAD,CAAT,qBAA4BK,IAA5B;AAAkCC,UAAAA;AAAlC,WANoB,CAOxB;AACA;AACA;;AACAV,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CJ,KAA9C,EAVwB,CAWxB;;AACA,iCACOA,KADP;AAEI5C,UAAAA,SAFJ,CAGI;;AAHJ;AAKH;;AACD;AAAS;AACL,iCACO4C,KADP;AAGH;AArHL;AAuHH,CAxHD;;AA0HA,eAAeD,OAAf","sourcesContent":["// export const initialState = {\n//     mainPosts: [{\n//         // id: 1,\n//         // User: {\n//         //     id: 1,\n//         //     nickname: \"코드\",\n//         // },\n//         // content: \"첫 번째 게시글\",\n//         // img: \"https://blog.yena.io/assets/post-img/171123-nachoi-300.jpg\",\n//         // Comments: [],\n//     }],                 // 화면에 보일 포스트들\n//     imagePaths: [],     // 미리보기 이미지 경로\n//     addPostErrorReason:'',  // 포스트 업로드 실패 사유\n//     isAddingPost: false,        // 포스트 업로드 중\n//     postAdded: false,           // 포스트 업로드 성공,\n//     isAddingComment:false,\n//     addCommentErrorReason: '',\n//     commentAdded: false,\n// };\n\n// const dummyPost = {\n//     id: 2,\n//     User: {\n//         id: 1,\n//         nickname: '코드',\n//     },\n//     content: '나는 더미입니다',\n//     Comments: [],\n// }\n\n// const dummyComment = {\n//     id: 1,\n//     User: {\n//         id: 1,\n//         nickname: 2,\n//     },\n//     createdAt: new Date(),\n//     content: '더미 댓글입니다',\n// }\n\nexport const initialState = {\n    mainPosts: [], // 화면에 보일 포스트들\n    imagePaths: [], // 미리보기 이미지 경로\n    addPostErrorReason: '', // 포스트 업로드 실패 사유\n    isAddingPost: false, // 포스트 업로드 중\n    postAdded: false, // 포스트 업로드 성공\n    isAddingComment: false,\n    addCommentErrorReason: '',\n    commentAdded: false,\n    singlePost: null,\n  };\n\nexport const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\nexport const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\nexport const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\n\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\n\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\n\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\n\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\n\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\n\nexport const LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST';\nexport const LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\nexport const LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE';\n\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\n\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case LOAD_COMMENTS_REQUEST:\n        case LOAD_HASHTAG_POSTS_REQUEST:\n        case LOAD_USER_POSTS_REQUEST:\n        case LOAD_MAIN_POSTS_REQUEST: {\n            console.log(\"LOAD_  _REQUEST : \", action)\n            return {\n                ...state,\n                mainPosts: [],\n            };\n        }\n        case LOAD_USER_POSTS_SUCCESS:\n        case LOAD_HASHTAG_POSTS_SUCCESS:\n        case LOAD_MAIN_POSTS_SUCCESS: {\n            return {\n                ...state,     \n                mainPosts: action.data,\n            };\n        }\n        case LOAD_COMMENTS_FAILURE:\n        case LOAD_HASHTAG_POSTS_FAILURE:\n        case LOAD_USER_POSTS_FAILURE:\n        case LOAD_MAIN_POSTS_FAILURE: {\n            console.log(\"LOAD_   _FAILURE : \", action)\n            return {\n                ...state,\n            };\n        }\n        case ADD_POST_REQUEST: {\n            //console.log(\" in Reducuer ADD_POST_REQUEST : \", action)\n            return {\n                ...state,\n                isAddingPost: true,\n                addPostErrorReason: '',\n                postAdded: false,\n            };\n        }\n        case ADD_POST_SUCCESS: {\n            //console.log(\" in Reducuer ADD_POST_SUCCESS : \", action)\n            return {\n                ...state,\n                isAddingPost: false,\n                //mainPosts: [dummyPost, ...state.mainPosts],\n                mainPosts: [action.data, ...state.mainPosts],\n                postAdded: true,\n                imagePaths: [],\n            };\n        }\n        case ADD_POST_FAILURE: {\n            return {\n                ...state,\n                isAddingPost: false,\n                addPostErrorReason: action.error,\n            };\n        }\n        case ADD_COMMENT_REQUEST: {\n           // console.log(\" in Reducuer ADD_COMMENT_REQUEST :  \", action)\n            return {\n                ...state,\n                isAddingComment: true,\n                addCommentErrorReason: '',\n                commentAdded: false,\n            };\n        }\n        case ADD_COMMENT_SUCCESS: {\n            // console.log(\" in Reducuer ADD_COMMENT_SUCCESS :  \", action)\n            // console.log(\" chk state : \", state)\n            // console.log(\" state.mainPosts[0] : \", state.mainPosts[0]);\n\n           // try {   \n                const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n                const post = state.mainPosts[postIndex];\n                const Comments = [...post.Comments, action.data.comment];\n                const mainPosts = [...state.mainPosts];\n                mainPosts[postIndex] = {...post, Comments };\n            // } catch (e) {\n            //     console.log(\"reducer error : \", e);\n            // }\n            \n            return {\n                ...state,\n                isAddingComment: false,\n                mainPosts,\n                //mainPosts : mainPosts,\n                commentAdded: true,\n            };\n        }\n        case ADD_COMMENT_FAILURE: {\n            console.log(\" in Reducuer ADD_COMMENT_FAILURE :  \", action)\n            return {\n                ...state,\n                isAddingComment: false,\n                addCommentErrorReason: action.error,\n            };\n        }\n        case LOAD_COMMENTS_SUCCESS: {\n          // try {\n                const postIndex = state.mainPosts.findIndex( v=> v.id === action.data.postId);\n                const post = state.mainPosts[postIndex];\n                const Comments = action.data.comments;\n                const mainPosts = [...state.mainPosts];\n                mainPosts[postIndex] = { ...post, Comments};\n            // } catch (e){\n            //     console.log(\"reducer error : \", e);\n            // }\n            console.log('LOAD_COMMENTS_SUCCESS state : ', state)\n            //console.log('LOAD_COMMENTS_SUCCESS ...state : ', ...state)\n            return {\n                ...state,\n                mainPosts,\n                //mainPosts : mainPosts,\n            };\n        }\n        default: {\n            return {\n                ...state,\n            }\n        }\n    }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}