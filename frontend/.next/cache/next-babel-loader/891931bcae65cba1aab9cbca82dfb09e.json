{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/app/frontend/pages/singlePost.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { LOAD_POST_REQUEST } from '../reducers/post';\n\nvar SingePost = function SingePost(_ref) {\n  var id = _ref.id;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      singlePost = _useSelector.singlePost;\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, singlePost.content), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, singlePost.User.nickname), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, singlePost.Images[0] && __jsx(\"img\", {\n    src: \"http://localhost:3065/\".concat(singlePost.Images[0].src),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  })));\n};\n\nSingePost.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\" check InitialProps context.query.id : \", context.query.id);\n            context.store.dispatch({\n              type: LOAD_POST_REQUEST,\n              data: context.query.id\n            });\n            return _context.abrupt(\"return\", {\n              id: _parseInt(context.query.id, 10)\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nSingePost.propTypes = {\n  id: PropTypes.number.isRequired\n};\nexport default SingePost;","map":{"version":3,"sources":["/app/frontend/pages/singlePost.js"],"names":["React","useSelector","PropTypes","LOAD_POST_REQUEST","SingePost","id","state","post","singlePost","content","User","nickname","Images","src","getInitialProps","context","console","log","query","store","dispatch","type","data","propTypes","number","isRequired"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAa;AAAA,MAATC,EAAS,QAATA,EAAS;;AAAA,qBACJJ,WAAW,CAAE,UAAAK,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAP,CADP;AAAA,MACnBC,UADmB,gBACnBA,UADmB;;AAE3B,SACI,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,UAAU,CAACC,OAAjB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMD,UAAU,CAACE,IAAX,CAAgBC,QAAtB,CAFJ,EAGJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,UAAU,CAACI,MAAX,CAAkB,CAAlB,KAAwB;AAAK,IAAA,GAAG,kCAA2BJ,UAAU,CAACI,MAAX,CAAkB,CAAlB,EAAqBC,GAAhD,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD7B,CAHI,CADJ;AASH,CAXD;;AAaAT,SAAS,CAACU,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA4B,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AACxBC,YAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ,EAAuDF,OAAO,CAACG,KAAR,CAAcb,EAArE;AACAU,YAAAA,OAAO,CAACI,KAAR,CAAcC,QAAd,CAAuB;AACnBC,cAAAA,IAAI,EAAElB,iBADa;AAEnBmB,cAAAA,IAAI,EAAEP,OAAO,CAACG,KAAR,CAAcb;AAFD,aAAvB;AAFwB,6CAMjB;AAAEA,cAAAA,EAAE,EAAE,UAASU,OAAO,CAACG,KAAR,CAAcb,EAAvB,EAA2B,EAA3B;AAAN,aANiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA;;AASAD,SAAS,CAACmB,SAAV,GAAsB;AAClBlB,EAAAA,EAAE,EAAEH,SAAS,CAACsB,MAAV,CAAiBC;AADH,CAAtB;AAIA,eAAerB,SAAf","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { LOAD_POST_REQUEST } from '../reducers/post';\n\nconst SingePost = ( { id }) => {\n    const { singlePost } = useSelector( state => state.post );\n    return (\n        <>\n            <div>{singlePost.content}</div> \n            <div>{singlePost.User.nickname}</div>\n    <div>\n        {singlePost.Images[0] && <img src={`http://localhost:3065/${singlePost.Images[0].src}`} />}\n    </div>\n        </>\n    );\n};\n\nSingePost.getInitialProps = async (context) => {\n    console.log(\" check InitialProps context.query.id : \", context.query.id);\n    context.store.dispatch({\n        type: LOAD_POST_REQUEST,\n        data: context.query.id,\n    });\n    return { id: parseInt(context.query.id, 10)}\n};\n\nSingePost.propTypes = {\n    id: PropTypes.number.isRequired,\n}\n\nexport default SingePost;"]},"metadata":{},"sourceType":"module"}