{"ast":null,"code":"var _jsxFileName = \"/app/frontend/pages/profile.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useCallback, useState } from 'react';\nimport { Form, Button, List, Card, Icon, Input } from 'antd';\nimport PostCard from '../components/PostCard';\nimport { useDispatch, useSelector } from 'react-redux';\nimport NicknameEditForm from '../components/NicknameEditForm';\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, UNFOLLOW_USER_REQUEST, REMOVE_FOLLOWER_REQUEST } from '../reducers/user';\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const {\n    me,\n    followerList,\n    followingList,\n    hasMoreFollower,\n    hasMoreFollowing\n  } = useSelector(state => state.user);\n  const {\n    mainPosts\n  } = useSelector(state => state.post); // useEffect ( () => {\n  //     if (me) {\n  //     }\n  // }, [me && me.id ]);\n\n  const onUnfollow = useCallback(userId => () => {\n    dispatch({\n      type: UNFOLLOW_USER_REQUEST,\n      data: userId\n    });\n  }, []);\n  const onRemoveFollower = useCallback(userId => () => {\n    dispatch({\n      type: REMOVE_FOLLOWER_REQUEST,\n      data: userId\n    });\n  }, []);\n  const loadMoreFollowings = useCallback(() => {\n    dispatch({\n      type: LOAD_FOLLOWINGS_REQUEST,\n      offset: followingList.length\n    });\n  }, [followingList.length]);\n  const loadMoreFollowers = useCallback(() => {\n    dispatch({\n      type: LOAD_FOLLOWERS_REQUEST,\n      offset: followerList.length\n    });\n  }, [followerList.length]);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(NicknameEditForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), __jsx(List, {\n    style: {\n      marginBottom: '20px'\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \" \\uD314\\uB85C\\uC719 \\uBAA9\\uB85D \"),\n    loadMore: __jsx(Button, {\n      style: {\n        width: '100%'\n      },\n      onClick: loadMoreFollowings,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \" \\uB354 \\uBCF4\\uAE30 \"),\n    dataSource: followingList,\n    renderItem: item => __jsx(List.Item, {\n      style: {\n        marginTop: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, __jsx(Card, {\n      actions: [__jsx(Icon, {\n        key: \"icon\",\n        type: \"stop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })],\n      onClick: onUnfollow(item.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, __jsx(Card.Meta, {\n      description: item.nickname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), __jsx(List, {\n    style: {\n      marginBottom: '20px'\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \" \\uD314\\uB85C\\uC6CC \\uBAA9\\uB85D \"),\n    loadMore: __jsx(Button, {\n      style: {\n        width: '100%'\n      },\n      onClick: loadMoreFollowers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \" \\uB354 \\uBCF4\\uAE30 \"),\n    dataSource: followerList,\n    renderItem: item => __jsx(List.Item, {\n      style: {\n        marginTop: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, __jsx(Card, {\n      actions: [__jsx(Icon, {\n        key: \"icon\",\n        type: \"stop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })],\n      onClick: onRemoveFollower(item.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, __jsx(Card.Meta, {\n      description: item.nickname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, mainPosts.map(c => __jsx(PostCard, {\n    key: +c.createdAt,\n    post: c,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }))));\n};\n\nProfile.getInitialProps = async context => {\n  const state = context.store.getState(); // 이 직전에 LOAD_USERS_REQUEST  가 완료돼야함\n  // 따라서 me = null 이면 나로 인식하게 아래 reducer 를 처리하다\n\n  context.store.dispatch({\n    type: LOAD_FOLLOWERS_REQUEST,\n    data: state.user.me && state.user.me.id\n  });\n  context.store.dispatch({\n    type: LOAD_FOLLOWINGS_REQUEST,\n    data: state.user.me && state.user.me.id\n  });\n  context.store.dispatch({\n    type: LOAD_USER_POSTS_REQUEST,\n    data: state.user.me && state.user.me.id\n  });\n};\n\nexport default Profile;","map":{"version":3,"sources":["/app/frontend/pages/profile.js"],"names":["React","useEffect","useCallback","useState","Form","Button","List","Card","Icon","Input","PostCard","useDispatch","useSelector","NicknameEditForm","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWINGS_REQUEST","UNFOLLOW_USER_REQUEST","REMOVE_FOLLOWER_REQUEST","LOAD_USER_POSTS_REQUEST","Profile","dispatch","me","followerList","followingList","hasMoreFollower","hasMoreFollowing","state","user","mainPosts","post","onUnfollow","userId","type","data","onRemoveFollower","loadMoreFollowings","offset","length","loadMoreFollowers","marginBottom","gutter","xs","md","width","item","marginTop","id","nickname","map","c","createdAt","getInitialProps","context","store","getState"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,IAA7B,EAAmCC,IAAnC,EAAyCC,KAAzC,QAAsD,MAAtD;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AAEA,SAASC,sBAAT,EAAiCC,uBAAjC,EAA0DC,qBAA1D,EACIC,uBADJ,QACmC,kBADnC;AAEA,SAASC,uBAAT,QAAwC,kBAAxC;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM;AAAEU,IAAAA,EAAF;AAAMC,IAAAA,YAAN;AAAoBC,IAAAA,aAApB;AAAmCC,IAAAA,eAAnC;AAAoDC,IAAAA;AAApD,MAAyEb,WAAW,CAAEc,KAAK,IAAIA,KAAK,CAACC,IAAjB,CAA1F;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAkBhB,WAAW,CAAGc,KAAK,IAAIA,KAAK,CAACG,IAAlB,CAAnC,CAHkB,CAIlB;AACA;AACA;AACA;;AAEA,QAAMC,UAAU,GAAG5B,WAAW,CAAC6B,MAAM,IAAI,MAAM;AAC3CX,IAAAA,QAAQ,CAAC;AACLY,MAAAA,IAAI,EAAEhB,qBADD;AAELiB,MAAAA,IAAI,EAAEF;AAFD,KAAD,CAAR;AAIH,GAL6B,EAK3B,EAL2B,CAA9B;AAOA,QAAMG,gBAAgB,GAAGhC,WAAW,CAAE6B,MAAM,IAAI,MAAM;AAClDX,IAAAA,QAAQ,CAAC;AACLY,MAAAA,IAAI,EAAEf,uBADD;AAELgB,MAAAA,IAAI,EAAEF;AAFD,KAAD,CAAR;AAIH,GALmC,EAKjC,EALiC,CAApC;AAOA,QAAMI,kBAAkB,GAAGjC,WAAW,CAAE,MAAM;AAC1CkB,IAAAA,QAAQ,CAAC;AACLY,MAAAA,IAAI,EAAEjB,uBADD;AAELqB,MAAAA,MAAM,EAAEb,aAAa,CAACc;AAFjB,KAAD,CAAR;AAIH,GALqC,EAKnC,CAACd,aAAa,CAACc,MAAf,CALmC,CAAtC;AAOA,QAAMC,iBAAiB,GAAGpC,WAAW,CAAE,MAAM;AACzCkB,IAAAA,QAAQ,CAAC;AACLY,MAAAA,IAAI,EAAElB,sBADD;AAELsB,MAAAA,MAAM,EAAEd,YAAY,CAACe;AAFhB,KAAD,CAAR;AAIH,GALoC,EAKlC,CAACf,YAAY,CAACe,MAAd,CALkC,CAArC;AAOA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,IAAD;AACI,IAAA,KAAK,EAAE;AAAEE,MAAAA,YAAY,EAAE;AAAhB,KADX;AAEI,IAAA,IAAI,EAAE;AAAEC,MAAAA,MAAM,EAAE,CAAV;AAAaC,MAAAA,EAAE,EAAE,CAAjB;AAAoBC,MAAAA,EAAE,EAAE;AAAxB,KAFV;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,MAAM,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAJZ;AAKI,IAAA,QAAQ,EAAE,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAf;AAAkC,MAAA,OAAO,EAAER,kBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BALd;AAMI,IAAA,UAAU,EAAEZ,aANhB;AAOI,IAAA,UAAU,EAAEqB,IAAI,IACZ,MAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,OAAO,EAAE,CAAC,MAAC,IAAD;AAAM,QAAA,GAAG,EAAC,MAAV;AAAiB,QAAA,IAAI,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAD,CAAf;AAAkD,MAAA,OAAO,EAAEf,UAAU,CAACc,IAAI,CAACE,EAAN,CAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD,CAAM,IAAN;AAAW,MAAA,WAAW,EAAEF,IAAI,CAACG,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAiBI,MAAC,IAAD;AACI,IAAA,KAAK,EAAE;AAAER,MAAAA,YAAY,EAAE;AAAhB,KADX;AAEI,IAAA,IAAI,EAAE;AAAEC,MAAAA,MAAM,EAAE,CAAV;AAAaC,MAAAA,EAAE,EAAE,CAAjB;AAAoBC,MAAAA,EAAE,EAAE;AAAxB,KAFV;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,MAAM,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAJZ;AAKI,IAAA,QAAQ,EAAE,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAf;AAAkC,MAAA,OAAO,EAAEL,iBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BALd;AAMI,IAAA,UAAU,EAAEhB,YANhB;AAOI,IAAA,UAAU,EAAEsB,IAAI,IACZ,MAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,OAAO,EAAE,CAAC,MAAC,IAAD;AAAM,QAAA,GAAG,EAAC,MAAV;AAAiB,QAAA,IAAI,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAD,CAAf;AAAkD,MAAA,OAAO,EAAEX,gBAAgB,CAACU,IAAI,CAACE,EAAN,CAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD,CAAM,IAAN;AAAW,MAAA,WAAW,EAAEF,IAAI,CAACG,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBJ,EAgCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKnB,SAAS,CAACoB,GAAV,CAAcC,CAAC,IACZ,MAAC,QAAD;AAAU,IAAA,GAAG,EAAE,CAACA,CAAC,CAACC,SAAlB;AAA6B,IAAA,IAAI,EAAED,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CAhCJ,CADA;AAwCH,CA7ED;;AA+EA9B,OAAO,CAACgC,eAAR,GAA0B,MAAOC,OAAP,IAAmB;AACzC,QAAM1B,KAAK,GAAG0B,OAAO,CAACC,KAAR,CAAcC,QAAd,EAAd,CADyC,CAEzC;AACA;;AACAF,EAAAA,OAAO,CAACC,KAAR,CAAcjC,QAAd,CAAuB;AACfY,IAAAA,IAAI,EAAElB,sBADS;AAEfmB,IAAAA,IAAI,EAAEP,KAAK,CAACC,IAAN,CAAWN,EAAX,IAAiBK,KAAK,CAACC,IAAN,CAAWN,EAAX,CAAcyB;AAFtB,GAAvB;AAIAM,EAAAA,OAAO,CAACC,KAAR,CAAcjC,QAAd,CAAuB;AACfY,IAAAA,IAAI,EAAEjB,uBADS;AAEfkB,IAAAA,IAAI,EAAEP,KAAK,CAACC,IAAN,CAAWN,EAAX,IAAiBK,KAAK,CAACC,IAAN,CAAWN,EAAX,CAAcyB;AAFtB,GAAvB;AAIAM,EAAAA,OAAO,CAACC,KAAR,CAAcjC,QAAd,CAAuB;AACfY,IAAAA,IAAI,EAAEd,uBADS;AAEfe,IAAAA,IAAI,EAAEP,KAAK,CAACC,IAAN,CAAWN,EAAX,IAAiBK,KAAK,CAACC,IAAN,CAAWN,EAAX,CAAcyB;AAFtB,GAAvB;AAIH,CAhBD;;AAiBA,eAAe3B,OAAf","sourcesContent":["import React, { useEffect, useCallback, useState } from 'react';\nimport { Form, Button, List, Card, Icon, Input } from 'antd';\nimport PostCard from '../components/PostCard';\nimport { useDispatch, useSelector } from 'react-redux';\nimport NicknameEditForm from '../components/NicknameEditForm';\n\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, UNFOLLOW_USER_REQUEST, \n    REMOVE_FOLLOWER_REQUEST } from '../reducers/user';\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\n \n\nconst Profile = () => {\n    const dispatch = useDispatch();\n    const { me, followerList, followingList, hasMoreFollower, hasMoreFollowing } = useSelector( state => state.user );\n    const { mainPosts,  } = useSelector ( state => state.post );\n    // useEffect ( () => {\n    //     if (me) {\n    //     }\n    // }, [me && me.id ]);\n\n    const onUnfollow = useCallback(userId => () => {\n        dispatch({\n            type: UNFOLLOW_USER_REQUEST,\n            data: userId,\n        });\n    }, []);\n\n    const onRemoveFollower = useCallback( userId => () => {\n        dispatch({\n            type: REMOVE_FOLLOWER_REQUEST,\n            data: userId,\n        });\n    }, []);\n\n    const loadMoreFollowings = useCallback( () => {\n        dispatch({\n            type: LOAD_FOLLOWINGS_REQUEST,\n            offset: followingList.length,\n        });\n    }, [followingList.length])\n\n    const loadMoreFollowers = useCallback( () => {\n        dispatch({\n            type: LOAD_FOLLOWERS_REQUEST,\n            offset: followerList.length,\n        });\n    }, [followerList.length]);\n\n    return (\n    <div>\n        <NicknameEditForm />\n        <List\n            style={{ marginBottom: '20px' }}\n            grid={{ gutter: 4, xs: 2, md: 3 }}\n            size=\"small\"\n            header={<div> 팔로윙 목록 </div> }\n            loadMore={<Button style={{ width: '100%' }} onClick={loadMoreFollowings}> 더 보기 </Button>}\n            dataSource={followingList}\n            renderItem={item => (\n                <List.Item style={{ marginTop: '20px' }}>\n                    <Card actions={[<Icon key='icon' type=\"stop\" />]} onClick={onUnfollow(item.id)}>\n                        <Card.Meta description={item.nickname} />\n                    </Card>\n                </List.Item>\n            )}\n        />\n        <List\n            style={{ marginBottom: '20px' }}\n            grid={{ gutter: 4, xs: 2, md: 3 }}\n            size=\"small\"\n            header={<div> 팔로워 목록 </div> }\n            loadMore={<Button style={{ width: '100%' }} onClick={loadMoreFollowers}> 더 보기 </Button>}\n            dataSource={followerList}\n            renderItem={item => (\n                <List.Item style={{ marginTop: '20px' }}>\n                    <Card actions={[<Icon key='icon' type=\"stop\" />]} onClick={onRemoveFollower(item.id)}>\n                        <Card.Meta description={item.nickname} />\n                    </Card>\n                </List.Item>\n            )}\n        />\n        <div>\n            {mainPosts.map(c => (\n                <PostCard key={+c.createdAt} post={c} />\n            ))}\n        </div>\n    </div>\n    );\n};\n\nProfile.getInitialProps = async (context) => {\n    const state = context.store.getState();\n    // 이 직전에 LOAD_USERS_REQUEST  가 완료돼야함\n    // 따라서 me = null 이면 나로 인식하게 아래 reducer 를 처리하다\n    context.store.dispatch({\n            type: LOAD_FOLLOWERS_REQUEST,\n            data: state.user.me && state.user.me.id,\n    });\n    context.store.dispatch({\n            type: LOAD_FOLLOWINGS_REQUEST,\n            data: state.user.me && state.user.me.id,\n    });\n    context.store.dispatch({\n            type: LOAD_USER_POSTS_REQUEST,\n            data: state.user.me && state.user.me.id,\n    });\n}\nexport default Profile;"]},"metadata":{},"sourceType":"module"}